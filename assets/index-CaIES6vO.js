var _=Object.defineProperty;var q=n=>{throw TypeError(n)};var K=(n,i,t)=>i in n?_(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var o=(n,i,t)=>K(n,typeof i!="symbol"?i+"":i,t),D=(n,i,t)=>i.has(n)||q("Cannot "+t);var m=(n,i,t)=>(D(n,i,"read from private field"),t?t.call(n):i.get(n)),d=(n,i,t)=>i.has(n)?q("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(n):i.set(n,t),u=(n,i,t,s)=>(D(n,i,"write to private field"),s?s.call(n,t):i.set(n,t),t);(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function t(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=t(a);fetch(a.href,r)}})();const e="?",z="start",x="end",I="tower",R=(n,i)=>Math.sqrt(Math.pow(n.x-i.x,2)+Math.pow(n.y-i.y,2));var E;class A{constructor(){d(this,E);u(this,E,Math.floor(Math.random()*1e7))}get id(){return m(this,E)}}E=new WeakMap;var T;class P extends A{constructor({game:t,health:s,speed:a,damage:r,reward:h,type:l}){super();o(this,"game");o(this,"health");o(this,"maxHealth");o(this,"speed");d(this,T);o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastUpdateTime",Date.now());o(this,"direction");o(this,"reward");o(this,"debuffs",[]);o(this,"monsterSize");o(this,"type");this.game=t,this.health=s,this.maxHealth=s,this.speed=a,u(this,T,a),this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=r,this.reward=h,this.monsterSize=this.game.squareSize/1.5,this.type=l}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}addDebuff(t){this.debuffs.push({...t,duration:Date.now()+t.duration})}applyDebuffs(){const t=Date.now();let s=m(this,T);this.debuffs=this.debuffs.filter(r=>!(t>r.duration));let a=!1;this.debuffs.forEach(r=>{if(r.type==="freeze")s/=2;else if(r.type==="poison"&&!a){a=!0;const h=t-this.lastUpdateTime,l=Math.min(this.maxHealth*.05,1e3),c=h/this.game.gameSpeed*l;this.takeDamage(c)}}),this.speed=Math.max(s,m(this,T)/5)}update(){this.applyDebuffs();const t=Date.now(),a=(t-this.lastUpdateTime)/this.game.gameSpeed*this.speed,r=this.distance+a;Math.floor(r)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(r)),this.nextPosition&&r%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=r,this.lastUpdateTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:s}=this.gridPosition,a=this.distance%1,{squareSize:r}=this.game;let h=s*r,l=t*r;return this.direction==="up"?(h+=r/2-this.monsterSize/2,l+=r-a*r):this.direction==="down"?(h+=r/2-this.monsterSize/2,l+=a*r):this.direction==="left"?(h+=r-a*r,l+=r/2-this.monsterSize/2):this.direction==="right"?(h+=a*r,l+=r/2-this.monsterSize/2):this.direction==="none"&&(h+=r/2-this.monsterSize/2,l+=r/2-this.monsterSize/2),{x:h,y:l}}render(){const t=this.getCanvasPosition();if(!t)return;const{ctx:s}=this.game,{x:a,y:r}=t,h=this.getSprite(),l=128,{row:c,numberOfFrames:g}=this.getWalkingAnimationRowAndNumberOfFrames(),N=Math.floor(this.distance*g)%g*l,G=c*l;s.save(),this.direction==="left"&&(s.translate(a+this.monsterSize/2,r),s.scale(-1,1),s.translate(-a-this.monsterSize/2,-r)),s.drawImage(h,N,G+5,l,l,a,r,this.monsterSize,this.monsterSize),s.restore(),s.save(),s.fillStyle="red",s.fillStyle="green",s.fillRect(a+10,r,(this.monsterSize-20)*this.health/this.maxHealth,5),s.restore()}getSprite(){switch(this.type){case"skeleton":return this.isFrozen()?this.game.images["monsters/SkeletonFrozen"]:this.isPoisoned()?this.game.images["monsters/SkeletonPoisoned"]:this.game.images["monsters/Skeleton"];case"plant":return this.isFrozen()?this.game.images["monsters/PlantFrozen"]:this.isPoisoned()?this.game.images["monsters/PlantPoisoned"]:this.game.images["monsters/Plant"];case"orcWarrior":return this.isFrozen()?this.game.images["monsters/OrcWarriorFrozen"]:this.isPoisoned()?this.game.images["monsters/OrcWarriorPoisoned"]:this.game.images["monsters/OrcWarrior"];case"fireSpirit":return this.isFrozen()?this.game.images["monsters/FireSpiritFrozen"]:this.isPoisoned()?this.game.images["monsters/FireSpiritPoisoned"]:this.game.images["monsters/FireSpirit"];default:return console.error("Invalid monster type",this.type),this.game.images["monsters/Skeleton"]}}isFrozen(){return this.debuffs.some(t=>t.type==="freeze")}isPoisoned(){return this.debuffs.some(t=>t.type==="poison")}getWalkingAnimationRowAndNumberOfFrames(){switch(this.type){case"skeleton":return{row:1,numberOfFrames:8};case"plant":return{row:2,numberOfFrames:9};case"orcWarrior":return{row:9,numberOfFrames:7};case"fireSpirit":return{row:5,numberOfFrames:7};default:return console.error("Invalid monster type",this.type),{row:0,numberOfFrames:0}}}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}T=new WeakMap;class y extends A{constructor({game:t,speed:s,damage:a,target:r,position:h}){super();o(this,"game");o(this,"speed");o(this,"damage");o(this,"target");o(this,"position");o(this,"lastMoveTime");o(this,"angle");o(this,"height",10);o(this,"width",10);o(this,"images",["arrow"]);o(this,"splash",null);o(this,"debuffs",null);this.game=t,this.speed=s,this.damage=a,this.target=r,this.position=h,this.angle=0,this.lastMoveTime=Date.now()}impact(){var s;const t=this.target;t instanceof P&&(t.takeDamage(this.damage),(s=this.debuffs)==null||s.forEach(a=>{t.addDebuff(a)})),this.splash&&this.game.level.monsters.forEach(a=>{var l;if(t instanceof P&&a.id===t.id)return;const r=a.getCanvasPosition();if(!r)return;R(this.position,r)<=this.splash*this.game.squareSize&&(a.takeDamage(this.damage),(l=this.debuffs)==null||l.forEach(c=>{a.addDebuff(c)}))}),this.game.projectiles=this.game.projectiles.filter(a=>a.id!==this.id)}getImage(){const t=this.images.length,s=Math.floor(Date.now()/this.game.gameSpeed%t),a=this.images[s];return this.game.images[a]}update(){const t=Date.now(),s=t-this.lastMoveTime,a=s/this.game.gameSpeed;this.speed=this.speed*(1+1*a);const r=s/this.game.gameSpeed*this.speed;let h;this.target instanceof P?h=this.target.getCanvasPosition():h=this.game.convertGridPositionToCoordinates(this.target);const l=Math.sqrt(Math.pow(h.x-this.position.x,2)+Math.pow(h.y-this.position.y,2));if(r>l){this.position=h,this.lastMoveTime=t,this.impact();return}const c=Math.atan2(h.y-this.position.y,h.x-this.position.x),g=Math.cos(c)*r,w=Math.sin(c)*r;this.angle=c+Math.PI,this.position={x:this.position.x+g,y:this.position.y+w},this.lastMoveTime=t}render(){const{ctx:t}=this.game;t.save(),t.translate(this.position.x,this.position.y),t.rotate(this.angle);try{t.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height)}catch(s){console.log(s),this.game.debug&&alert(`Error rendering projectile ${this.getImage().src}: ${s}`)}t.restore()}}class H extends y{constructor({game:t,target:s,position:a,damage:r,speed:h}){super({game:t,speed:h,damage:r,target:s,position:a});o(this,"height",10);o(this,"width",25)}}class S extends A{constructor(t,s){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");o(this,"multiTarget",!1);this.game=t,this.gridPosition=s}getImage(){let t=[this.game.images[`tower-${this.type}`]];this.type==="lightning"&&(t=[this.game.images[`tower-${this.type}`],this.game.images[`tower-${this.type}-2`]]);const s=t.length,a=Math.floor(Date.now()/this.game.gameSpeed%s);return t[a]}render(){const{squareSize:t}=this.game,{col:s,row:a}=this.gridPosition,r=s*t,h=a*t,l=this.getImage();try{this.game.ctx.drawImage(l,r,h,t,t)}catch(c){console.error(c),this.game.debug&&alert(`Error rendering tower ${l}: ${c}`)}}update(){this.attack()}monsterIsValidTarget(t){if(!t.gridPosition||!t.isAlive())return!1;const{col:s,row:a}=this.gridPosition,r=t.gridPosition.col,h=t.gridPosition.row,l=Math.sqrt(Math.pow(r-s,2)+Math.pow(h-a,2));return Math.abs(l)<=this.range}getTargetInRange(){return this.getTargetsInRange()[0]}getTargetsInRange(){const{monsters:t}=this.game.level;return t.filter(s=>this.monsterIsValidTarget(s))??[]}canAttack(){return Date.now()-this.lastAttackTime>this.game.gameSpeed/this.attackSpeed}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s&&(this.game.projectiles.push(new H({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/4})),this.lastAttackTime=t+(this.attackSpeed*(Math.random()*.025)-.0125)*this.game.gameSpeed)}}}class V extends S{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s&&(this.game.projectiles.push(new H({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/2})),this.lastAttackTime=t)}}}class X extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed/10,damage:r,target:s,position:a});o(this,"height",10);o(this,"width",25);o(this,"splash",1.5);o(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class Y extends S{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",125);o(this,"attackSpeed",.75);o(this,"type","cannon")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new X({game:this.game,target:s.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class J extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed/2,damage:r,target:s,position:a});o(this,"height",10);o(this,"width",25);o(this,"splash",.75);o(this,"images",["fire-1","fire-2"])}}class Q extends S{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",500);o(this,"attackSpeed",2.5);o(this,"type","fire")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new J({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}const $={freeze:"freeze",poison:"poison"};class Z extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed/3,damage:r,target:s,position:a});o(this,"height",25);o(this,"width",25);o(this,"splash",1);o(this,"images",["frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"]);o(this,"debuffs",[{type:$.freeze,duration:this.game.gameSpeed*2}])}}class ee extends S{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",50);o(this,"attackSpeed",1.5);o(this,"type","ice")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new Z({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class te extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed*1.5,damage:r,target:s,position:a});o(this,"height",15);o(this,"width",30);o(this,"previousTargets",[]);o(this,"images",["lightning-1","lightning-2"]);this.previousTargets.push(s.id)}impact(){super.impact(),this.game.level.monsters.find(t=>!(this.target instanceof P)||this.previousTargets.includes(t.id)?!1:R(t.getCanvasPosition(),this.target.getCanvasPosition())<100?(this.previousTargets.push(t.id),this.target=t,this.game.projectiles.push(this),!0):!1)}}class se extends S{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",125);o(this,"attackSpeed",2);o(this,"type","lightning")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new te({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class ie extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed/10*8,damage:r,target:s,position:a});o(this,"height",12);o(this,"width",20);o(this,"images",["crystal"])}}class ae extends S{constructor(){super(...arguments);o(this,"range",10);o(this,"damage",2500);o(this,"attackSpeed",7.5);o(this,"type","mage")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new ie({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class oe extends y{constructor({game:t,target:s,position:a,damage:r}){super({game:t,speed:t.gameSpeed/5,damage:r,target:s,position:a});o(this,"height",25);o(this,"width",25);o(this,"images",["poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8"]);o(this,"debuffs",[{type:$.poison,duration:this.game.gameSpeed*10}])}}class re extends S{constructor(){super(...arguments);o(this,"range",2);o(this,"damage",0);o(this,"attackSpeed",1);o(this,"type","poison");o(this,"multiTarget",!0)}attack(){const t=Date.now();this.canAttack()&&this.getTargetsInRange().forEach(a=>{a!=null&&a.gridPosition&&(this.game.projectiles.push(new oe({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)})}}const v={basic:50,arrow:100,cannon:200,fire:1e3,ice:450,mage:7500,lightning:2e3,poison:750},ne={basic:"basic",arrow:"arrow",cannon:"cannon",fire:"fire",ice:"ice",mage:"mage",lightning:"lightning",poison:"poison"},j={basic:S,arrow:V,cannon:Y,mage:ae,ice:ee,fire:Q,lightning:se,poison:re};class he{constructor(i){o(this,"game");o(this,"mousePosition");this.game=i,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:i,y:t}=this.mousePosition,{squareSize:s}=this.game,a=Math.floor(i/s);return{row:Math.floor(t/s),col:a}}init(){this.game.canvas.addEventListener("mousemove",i=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:i.clientX-t.left,y:i.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()}),this.game.canvas.addEventListener("contextmenu",i=>{this.handleContextMenu(i)})}handleClick(){const i=this.getCellAtMousePosition();this.game.newTower&&this.game.level.mapMatrix.matrix[i.col][i.row]===e&&this.game.money>=v[this.game.newTower]&&(this.game.level.mapMatrix.matrix[i.col][i.row]=I,this.game.level.towers.push(new j[this.game.newTower](this.game,i)),this.game.money-=v[this.game.newTower],this.game.money<v[this.game.newTower]&&(this.game.newTower=null))}handleContextMenu(i){i.preventDefault();const t=this.getCellAtMousePosition();if(this.game.newTower)this.game.newTower=null;else if(this.game.level.mapMatrix.matrix[t.col][t.row]===I){const s=this.game.level.towers.find(a=>a.gridPosition.col===t.col&&a.gridPosition.row===t.row);s&&(this.game.paused=!0,confirm(`Sell for ${v[s.type]/2} coins?`)&&(this.game.money+=v[s.type]/2,this.game.level.towers=this.game.level.towers.filter(a=>a.id!==s.id),this.game.level.mapMatrix.matrix[t.col][t.row]=e),this.game.paused=!1)}}}const le=[[e,z,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e],[e,[1],e,[68],[67],[66],[65],[64],[63],[62],[61],[60],[59],[58],[57],[56],[55],[53],[52],e],[e,[2],e,[69],e,e,e,e,e,e,e,e,e,e,e,e,e,e,[51],e],[e,[3],e,[70],e,[120],[119],[118],[117],[116],[115],[114],[113],[112],[111],[110],[109],e,[50],e],[e,[4],e,[71],e,[121],e,e,e,e,e,e,e,e,e,e,[108],e,[49],e],[e,[5],e,[72],e,[122],e,[156],[155],[154],[153],[152],[151],[150],[149],e,[107],e,[48],e],[e,[6],e,[73],e,[123],e,[157],e,e,e,e,e,e,[148],e,[106],e,[47],e],[e,[7],e,[74],e,[124],e,[158],e,[176],[175],[174],[173],e,[147],e,[105],e,[46],e],[e,[8],e,[75],e,[125],e,[159],e,[177],x,[183],[172],e,[146],e,[104],e,[45],e],[e,[9],e,[76],e,[126],e,[160],e,[178],[181],[182],[171],e,[145],e,[103],e,[44],e],[e,[10],e,[77],e,[127],e,[161],e,[179],[180],e,[170],e,[144],e,[102],e,[43],e],[e,[11],e,[78],e,[128],e,[162],e,e,e,e,[169],e,[143],e,[101],e,[42],e],[e,[12],e,[79],e,[129],e,[163],[164],[165],[166],[167],[168],e,[142],e,[100],e,[41],e],[e,[13],e,[80],e,[130],e,e,e,e,e,e,e,e,[141],e,[99],e,[40],e],[e,[14],e,[81],e,[131],[132],[133],[134],[135],[136],[137],[138],[139],[140],e,[98],e,[39],e],[e,[15],e,[82],e,e,e,e,e,e,e,e,e,e,e,e,[97],e,[38],e],[e,[16],e,[83],[84],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],e,[37],e],[e,[17],e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,[36],e],[e,[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],e],[e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e]],ce=n=>{const i=document.createElement("div");i.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{n.startWave()}),i.innerHTML=`
    <div class="toolbar-item">
      <span>🪙: </span>
      <span id="money" class="money">${n.money.toLocaleString("en-US")}</span>
    </div>
    <div class="toolbar-item">
      <span>❤️: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>🌊: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>👿: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>💀: </span>
      <span id="kills">0</span>
    </div>
  `,i.appendChild(t);const s=document.createElement("label");s.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,i.appendChild(s);const a=document.createElement("span");a.innerHTML="Speed: ",i.appendChild(a),[.25,.5,1,2,5].forEach(c=>{const g=document.createElement("button");g.innerHTML=`x${c}`,g.addEventListener("click",()=>{n.gameSpeed=1e3/c}),i.appendChild(g)}),document.body.insertBefore(i,document.body.firstChild);const r=document.createElement("div");r.id="toolbar-bottom",Object.values(ne).sort((c,g)=>v[c]-v[g]).forEach(c=>{const g=document.createElement("button");g.innerHTML=`
    <img src="assets/tower-${c}.png" alt="${c} tower" />
    <span>${c} tower - <span class="price">${v[c].toLocaleString("en-US")}🪙</span></span>
    `,g.addEventListener("click",()=>{n.newTower=c}),r.appendChild(g)}),document.body.appendChild(r);const h=document.createElement("div");h.id="info-panel",h.innerHTML=`
  <details>
  <summary>How to play</summary>
  <h2>Goal</h2>
  <p>Defend your base from waves of monsters by building towers. The monsters move from the blue square(s) to the red square(s)</p>
  <h2>Adding towers</h2>
  <p>
    Use the toolbar at the bottom to select a tower type. Click on an empty square on the map to add a tower.
  </p>
  <h2>Selling towers</h2>
  <p>
    Right-click on a tower to sell it for half the price.
  </p>
  <h2>Starting a wave</h2>
  <p>
    Click the "Start Wave" button to start a new wave of monsters.
  </p>
  <h2>Auto mode</h2>
  <p>
    When auto mode is enabled, the game will automatically start new waves when the previous wave is defeated.
  </p>
  
  </details>
  
  `,document.body.appendChild(h);const l=document.createElement("div");l.id="upgrade-tower",l.innerHTML=`
  <h2>Upgrade Tower</h2>
`,l.style.display="none",["damage","range","speed"].forEach(c=>{const g=document.createElement("button");g.innerHTML=`${c}`,g.addEventListener("click",()=>{n.upgradeTower(c)}),l.appendChild(g)}),document.body.appendChild(l)},ge=n=>{const i=document.getElementById("health");i&&(i.innerText=n.toLocaleString("en-US"))},me=n=>{const i=document.getElementById("kills");i&&(i.innerText=n.toLocaleString("en-US"))},de=n=>{const i=document.getElementById("money");i&&(i.innerText=n.toLocaleString("en-US"))},O=n=>{const i=document.getElementById("monsters");i&&(i.innerText=n.toLocaleString("en-US"))};class ue extends P{constructor({game:i,...t}){super({game:i,...t}),this.monsterSize=this.game.squareSize}}const pe=n=>{const i=document.getElementById("wave");i&&(i.innerText=n.toLocaleString("en-US"))};class fe extends A{constructor(t,s){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=t,this.matrix={},s?(this.matrix=s,Object.values(s).forEach(a=>{Object.values(a).forEach(r=>{Array.isArray(r)&&(this.totalDistance=Math.max(...r,this.totalDistance))})})):this.generateMapMatrix()}initMatrix(){var a,r;const{gridWidth:t,gridHeight:s}=this.level.game;this.matrix=Array.from({length:t},()=>Array(s).fill(e)),(a=this.level.startPositions)==null||a.forEach(h=>{this.matrix[h.col][h.row]=[0]}),(r=this.level.endPositions)==null||r.forEach(h=>{this.matrix[h.col][h.row]=x})}generateMapMatrix(){var t;(t=this.level.startPositions)==null||t.forEach(s=>{let a=0;do this.initMatrix(),this.totalDistance=this.buildPath(s.col,s.row,1),a++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&a<100);a>=100&&console.log("Failed to generate path")})}buildPath(t,s,a){const r=this.getNeighbors(t,s);if(r.some(({row:g,col:w})=>this.getCell(w,g)===x))return a;const h=r.filter(({col:g,row:w})=>this.canBePath(g,w,a));if(h.length===0)return-1;const l=h[Math.floor(Math.random()*h.length)],c=this.matrix[l.col][l.row];return Array.isArray(c)?c.push(a):this.matrix[l.col][l.row]=[a],this.buildPath(l.col,l.row,a+1)}getNeighbors(t,s){const a=[];return t>0&&a.push({col:t-1,row:s}),t<this.level.game.gridWidth-1&&a.push({col:t+1,row:s}),s>0&&a.push({col:t,row:s-1}),s<this.level.game.gridHeight-1&&a.push({col:t,row:s+1}),a}getCell(t,s){return this.matrix[t][s]}canBePath(t,s,a){const r=this.getCell(t,s);return!(r!==e&&Array.isArray(r)===!1||Array.isArray(r)&&r.some(l=>l>a-10)||this.getNeighbors(t,s).filter(({col:l,row:c})=>{const g=this.getCell(l,c);return Array.isArray(g)?!!g.some(w=>w>a-10):!1}).length>1||Array.isArray(r)&&r.length>=this.level.maxRepeatSquares)}getPathPosition(t){const s=Math.ceil(t);let a=s<=0?this.level.startPositions[Math.floor(Math.random()*this.level.startPositions.length)]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(r=>{const h=Number(r);Object.keys(this.matrix[h]).forEach(l=>{const c=Number(l),g=this.matrix[h][c];if(Array.isArray(g)&&g.includes(s)){a={row:c,col:h};return}})}),a}}var b;class W extends A{constructor({game:t,startPositions:s,endPositions:a,minLength:r,maxLength:h,maxRepeatSquares:l,map:c}){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);d(this,b,0);this.game=t,this.startPositions=s,this.endPositions=a,this.minLength=r,this.maxLength=h,this.maxRepeatSquares=l,this.mapMatrix=new fe(this,c)}get wave(){return m(this,b)}set wave(t){u(this,b,t),pe(m(this,b))}}b=new WeakMap;const we=["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","tower-lightning","tower-lightning-2","tower-poison","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13","crystal","poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8","lightning-1","lightning-2","monsters/Skeleton","monsters/FireSpirit","monsters/OrcWarrior","monsters/Plant","monsters/SkeletonFrozen","monsters/FireSpiritFrozen","monsters/OrcWarriorFrozen","monsters/PlantFrozen","monsters/SkeletonPoisoned","monsters/FireSpiritPoisoned","monsters/OrcWarriorPoisoned","monsters/PlantPoisoned"],F=["plant","skeleton","orcWarrior","fireSpirit"];var p,M,k,f,C;class ve{constructor(){d(this,p,10);d(this,M,100);d(this,k,0);o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",-1);o(this,"projectiles",[]);d(this,f,null);d(this,C,!1);o(this,"gameSpeed",1e3);o(this,"backgroundImage",null);this.canvas=document.createElement("canvas");const i=this.canvas.getContext("2d");if(!i)throw new Error("2d context not supported");this.ctx=i,Math.random()>.5?(this.gridHeight=20,this.gridWidth=20,this.level=new W({game:this,endPositions:[{col:8,row:10}],startPositions:[{col:0,row:1}],maxLength:200,maxRepeatSquares:1,minLength:100,map:le})):this.level=new W({game:this,endPositions:[{col:Math.floor(Math.random()*this.gridHeight/2),row:Math.floor(Math.random()*this.gridWidth/2)}],startPositions:[{col:Math.floor((Math.random()+.5)*this.gridHeight/2),row:Math.floor((Math.random()+.5)*this.gridWidth/2)}],maxLength:250,maxRepeatSquares:3,minLength:100}),this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,document.body.appendChild(this.canvas),this.mouseHandler=new he(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0,this.money=1e4),ce(this)}getNumberOfMonstersPerWave(){return this.isBossWave()?1:20+(this.level.wave-1)*2}isBossWave(){return this.level.wave%10===0}startWave(){m(this,p)<=0||this.tempCounter<this.getNumberOfMonstersPerWave()&&this.tempCounter!==-1||(this.level.wave++,this.tempCounter=0,console.log(`Starting ${this.isBossWave()?"boss wave":"wave"} ${this.level.wave}. ${this.getNumberOfMonstersPerWave()} monsters with ${this.getHealth()} health and ${this.getSpeed()} speed`),this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},this.gameSpeed/2/this.getSpeed())}getSpeed(){let i=1;return this.level.wave>2&&(i+=(this.level.wave-2)*.4),Math.min(i,15)}getHealth(){let i=100;const t=15;let s=0;for(let a=0;a<this.level.wave;a+=2)s+=t*(a/1.75),s+=Math.pow(a,2);return this.isBossWave()&&(s*=15),Math.floor(i+s)}getReward(){return this.isBossWave()?Math.floor(1e3*(this.level.wave/10)):10+Math.floor(this.level.wave/2)}spawnMonster(){const i=this.isBossWave()?ue:P;let t;this.level.wave<=10?t="plant":this.level.wave<=20?t="skeleton":this.level.wave<=30?t="orcWarrior":this.level.wave<=40?t="fireSpirit":t=F[Math.floor(Math.random()*F.length)],this.level.monsters.push(new i({game:this,health:this.getHealth(),speed:this.getSpeed(),damage:this.isBossWave()?5:1,reward:this.getReward(),type:t})),O(this.level.monsters.length)}loadImages(){we.forEach(i=>{const t=new Image;t.src=`./assets/${i}.png`,this.images[i]=t})}update(){var s;if(m(this,C))return;const i=this.level.monsters.filter(a=>a.distance>=this.level.mapMatrix.totalDistance),t=this.level.monsters.filter(a=>!a.isAlive());t.forEach(a=>{this.money+=a.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(a=>a.isAlive()&&a.distance<this.level.mapMatrix.totalDistance).sort((a,r)=>r.distance-a.distance),i.forEach(a=>{console.log(`Monster reached the end, -${a.damage} health`),this.health-=a.damage}),this.level.monsters.forEach(a=>{a.update()}),this.level.towers.forEach(a=>{a.update()}),this.projectiles.forEach(a=>{a.update()}),m(this,p)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(t.length>0||i.length>0)&&O(this.level.monsters.length),this.level.monsters.length===0&&(console.log(`Wave ${this.level.wave} completed!`),(s=document.getElementById("automode"))!=null&&s.checked&&this.startWave())}render(){try{this.drawGrid(),this.level.monsters.forEach(i=>{i.render()}),this.level.towers.forEach(i=>{i.render()}),this.projectiles.forEach(i=>{i.render()}),m(this,p)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore()),m(this,f)&&this.hoveredCell&&(this.ctx.save(),this.ctx.globalAlpha=.25,this.ctx.beginPath(),this.ctx.arc(this.hoveredCell.col*this.squareSize+this.squareSize/2,this.hoveredCell.row*this.squareSize+this.squareSize/2,m(this,f).range*this.squareSize,0,2*Math.PI),this.ctx.fillStyle="purple",this.ctx.globalAlpha=.5,m(this,f).gridPosition=this.hoveredCell,m(this,f).render(),this.ctx.fill(),this.ctx.restore())}catch(i){console.error(i),this.debug&&alert(`Error rendering game: ${i}`)}}drawGrid(){if(!this.backgroundImage){const i=document.createElement("canvas");i.width=this.canvas.width,i.height=this.canvas.height;const t=i.getContext("2d");if(!t)throw new Error("2d context not supported");t.clearRect(0,0,i.width,i.height);const{matrix:s}=this.level.mapMatrix;Object.keys(s).forEach(a=>{const r=Number(a);Object.keys(s[r]).forEach(h=>{const l=Number(h),c=s[r][l];t.save(),typeof c=="string"?c===z?t.fillStyle="blue":c===x?t.fillStyle="rgba(255, 0, 0, 0.5)":t.fillStyle="green":Array.isArray(c)&&c.includes(0)?t.fillStyle="blue":Array.isArray(c)&&c.length>0&&(t.fillStyle="rgb(200, 200, 200)"),t.fillRect(r*this.squareSize,l*this.squareSize,this.squareSize,this.squareSize),this.debug&&(t.save(),t.fillStyle="black",t.font="12px Arial",Array.isArray(c)&&c.length>0?t.fillText(c.toString(),r*this.squareSize+5,l*this.squareSize+15):c===z?t.fillText(z,r*this.squareSize+5,l*this.squareSize+15):c===x&&t.fillText(x,r*this.squareSize+5,l*this.squareSize+15),t.font="10px Arial",t.fillText(`${r},${l}`,r*this.squareSize+20,l*this.squareSize+40),t.restore()),t.strokeStyle="lightgray",t.strokeRect(r*this.squareSize,l*this.squareSize,this.squareSize,this.squareSize),t.restore()})}),this.backgroundImage=i}this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.backgroundImage,0,0),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(i){return{x:i.col*this.squareSize+this.squareSize/2,y:i.row*this.squareSize+this.squareSize/2}}upgradeTower(i){switch(i){case"damage":console.log("TODO: Implement damage upgrade");break;case"range":console.log("TODO: Implement range upgrade");break;case"speed":console.log("TODO: Implement speed upgrade");break}}get health(){return m(this,p)}set health(i){u(this,p,i),ge(m(this,p))}get money(){return m(this,M)}set money(i){u(this,M,i),de(m(this,M))}get killCount(){return m(this,k)}set killCount(i){u(this,k,i),me(m(this,k))}get newTower(){var i;return((i=m(this,f))==null?void 0:i.type)||null}set newTower(i){u(this,f,i?new j[i](this,this.hoveredCell):null)}get paused(){return m(this,C)}set paused(i){const t=Date.now();this.level.towers.forEach(s=>{s.lastAttackTime=t}),this.level.monsters.forEach(s=>{s.lastUpdateTime=t}),this.projectiles.forEach(s=>{s.lastMoveTime=t}),u(this,C,i)}}p=new WeakMap,M=new WeakMap,k=new WeakMap,f=new WeakMap,C=new WeakMap;const L=new ve,B=async()=>{L.render(),requestAnimationFrame(B)},U=async()=>{L.update(),L.health>=0&&requestAnimationFrame(U)};B();U();
