var C=Object.defineProperty;var P=n=>{throw TypeError(n)};var q=(n,i,t)=>i in n?C(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var o=(n,i,t)=>q(n,typeof i!="symbol"?i+"":i,t),M=(n,i,t)=>i.has(n)||P("Cannot "+t);var d=(n,i,t)=>(M(n,i,"read from private field"),t?t.call(n):i.get(n)),p=(n,i,t)=>i.has(n)?P("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(n):i.set(n,t),v=(n,i,t,e)=>(M(n,i,"write to private field"),e?e.call(n,t):i.set(n,t),t);(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const w="?",T="start",y="end",S="tower";var f;class x{constructor(){p(this,f);v(this,f,Math.floor(Math.random()*1e7))}get id(){return d(this,f)}}f=new WeakMap;class b extends x{constructor(t,e){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");this.game=t,this.gridPosition=e}render(){const{squareSize:t}=this.game,{col:e,row:s}=this.gridPosition,r=e*t,a=s*t,l=this.game.images[`tower-${this.type}`];this.game.ctx.drawImage(l,r,a,t,t)}update(){this.attack()}getTargetsInRange(){const{monsters:t}=this.game.level,{col:e,row:s}=this.gridPosition;return t.find(r=>{if(!r.gridPosition||!r.isAlive())return!1;const a=r.gridPosition.col,l=r.gridPosition.row,h=Math.sqrt(Math.pow(a-e,2)+Math.pow(l-s,2));return Math.abs(h)<=this.range})}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s&&(s.takeDamage(this.damage),this.lastAttackTime=t)}}}class z extends b{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}}class k{constructor(i){o(this,"game");o(this,"mousePosition");this.game=i,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:i,y:t}=this.mousePosition,{squareSize:e}=this.game,s=Math.floor(i/e);return{row:Math.floor(t/e),col:s}}init(){this.game.canvas.addEventListener("mousemove",i=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:i.clientX-t.left,y:i.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()})}handleClick(){const i=this.getCellAtMousePosition();if(this.game.level.mapMatrix.matrix[i.col][i.row]===w)this.game.money>=50&&(this.game.level.mapMatrix.matrix[i.col][i.row]=S,this.game.level.towers.push(new b(this.game,i)),this.game.money-=50);else if(this.game.level.mapMatrix.matrix[i.col][i.row]===S){let t=this.game.level.towers.find(e=>e.gridPosition.col===i.col&&e.gridPosition.row===i.row);t&&t.type==="basic"&&this.game.money>=100&&(this.game.level.towers=this.game.level.towers.filter(e=>e.id!==t.id),this.game.level.towers.push(new z(this.game,i)),this.game.money-=100)}}}const D=n=>{const i=document.createElement("div");i.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{n.startWave()}),i.innerHTML=`
    <div class="toolbar-item">
      <span>ü™ô: </span>
      <span id="money">100</span>
    </div>
    <div class="toolbar-item">
      <span>‚ù§Ô∏è: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>üåä: </span>
      <span id="wave">1</span>
    </div>
    <div class="toolbar-item">
      <span>üëø: </span>
      <span id="monsters">0</span>
    </div>
  `,i.appendChild(t),document.body.insertBefore(i,document.body.firstChild)},R=n=>{const i=document.getElementById("health");i&&(i.innerText=n.toLocaleString("en-US"))},O=n=>{const i=document.getElementById("money");i&&(i.innerText=n.toLocaleString("en-US"))};class N extends x{constructor(t){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=t,this.matrix={},this.generateMapMatrix()}initMatrix(){const{gridWidth:t,gridHeight:e}=this.level.game;this.matrix=Array.from({length:t},()=>Array(e).fill(w)),this.level.startPositions.forEach(s=>{this.matrix[s.col][s.row]=[0]}),this.level.endPositions.forEach(s=>{this.matrix[s.col][s.row]=y})}generateMapMatrix(){this.level.startPositions.forEach(t=>{let e=0;do this.initMatrix(),this.totalDistance=this.buildPath(t.col,t.row,1),e++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&e<100);e>=100&&console.log("Failed to generate path")})}buildPath(t,e,s){const r=this.getNeighbors(t,e);if(r.some(({row:c,col:u})=>this.getCell(u,c)===y))return s;const a=r.filter(({col:c,row:u})=>this.canBePath(c,u,s));if(a.length===0)return-1;const l=a[Math.floor(Math.random()*a.length)],h=this.matrix[l.col][l.row];return Array.isArray(h)?h.push(s):this.matrix[l.col][l.row]=[s],this.buildPath(l.col,l.row,s+1)}getNeighbors(t,e){const s=[];return t>0&&s.push({col:t-1,row:e}),t<this.level.game.gridWidth-1&&s.push({col:t+1,row:e}),e>0&&s.push({col:t,row:e-1}),e<this.level.game.gridHeight-1&&s.push({col:t,row:e+1}),s}getCell(t,e){return this.matrix[t][e]}canBePath(t,e,s){const r=this.getCell(t,e);return!(r!==w&&Array.isArray(r)===!1||Array.isArray(r)&&r.some(l=>l>s-10)||this.getNeighbors(t,e).filter(({col:l,row:h})=>{const c=this.getCell(l,h);return Array.isArray(c)?!!c.some(u=>u>s-10):!1}).length>1||Array.isArray(r)&&r.length>=this.level.maxRepeatSquares)}getPathPosition(t){const e=Math.ceil(t);let s=e<0?this.level.startPositions[0]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(r=>{const a=Number(r);Object.keys(this.matrix[a]).forEach(l=>{const h=Number(l),c=this.matrix[a][h];if(Array.isArray(c)&&c.includes(e)){s={row:h,col:a};return}})}),s}}class H extends x{constructor(t,e,s,r,a,l){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);this.game=t,this.startPositions=e,this.endPositions=s,this.minLength=r,this.maxLength=a,this.maxRepeatSquares=l,this.mapMatrix=new N(this)}}class I extends x{constructor({game:t,health:e,speed:s,damage:r}){super();o(this,"game");o(this,"health");o(this,"speed");o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastMoveTime",Date.now());o(this,"direction");o(this,"reward",10);this.game=t,this.health=e,this.speed=s,this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=r}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}move(){const t=Date.now(),s=(t-this.lastMoveTime)/1e3*this.speed,r=this.distance+s;Math.floor(r)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(r)),this.nextPosition&&r%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=r,this.lastMoveTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:e}=this.gridPosition,s=this.distance%1,{squareSize:r}=this.game,a=r/4;let l=e*r,h=t*r;return this.direction==="up"?(l+=r/2-a/2,h+=r-s*r):this.direction==="down"?(l+=r/2-a/2,h+=s*r):this.direction==="left"?(l+=r-s*r,h+=r/2-a/2):this.direction==="right"?(l+=s*r,h+=r/2-a/2):this.direction==="none"&&(l+=r/2-a/2,h+=r/2-a/2),{x:l,y:h}}render(){const t=this.getCanvasPosition();if(!t)return;const{squareSize:e,ctx:s}=this.game,r=e/3,{x:a,y:l}=t;s.fillStyle="black",s.fillRect(a,l,r,r),s.fillStyle="red",s.fillRect(a,l-10,r,5),s.fillStyle="green",s.fillRect(a,l-10,r*this.health/100,5)}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}var m,g;class W{constructor(){p(this,m,10);p(this,g,100);o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",-1);this.canvas=document.createElement("canvas");const i=this.canvas.getContext("2d");if(!i)throw new Error("2d context not supported");this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,this.ctx=i,this.level=new H(this,[{col:0,row:0}],[{col:20,row:20}],75,150,2),document.body.appendChild(this.canvas),this.mouseHandler=new k(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0),D(this)}startWave(){this.tempCounter<25&&this.tempCounter!==-1||(this.tempCounter=0,this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<25&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500)}spawnMonster(){this.level.monsters.push(new I({game:this,health:100,speed:1,damage:1}))}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire"].forEach(t=>{const e=new Image;e.src=`./assets/${t}.png`,this.images[t]=e})}update(){const i=this.level.monsters.filter(e=>e.distance>=this.level.mapMatrix.totalDistance);this.level.monsters.filter(e=>!e.isAlive()).forEach(e=>{this.money+=e.reward}),this.level.monsters=this.level.monsters.filter(e=>e.isAlive()&&e.distance<this.level.mapMatrix.totalDistance),i.forEach(e=>{console.log(`Monster reached the end, -${e.damage} health`),this.health-=e.damage}),this.level.monsters.forEach(e=>{e.move()}),this.level.towers.forEach(e=>{e.update()}),d(this,m)<0&&confirm("Game Over! Play again?")&&window.location.reload()}render(){this.drawGrid(),this.level.monsters.forEach(i=>{i.render()}),this.level.towers.forEach(i=>{i.render()})}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:i}=this.level.mapMatrix;Object.keys(i).forEach(t=>{const e=Number(t);Object.keys(i[e]).forEach(s=>{const r=Number(s),a=i[e][r];this.ctx.save(),typeof a=="string"?a===T?this.ctx.fillStyle="blue":a===y?this.ctx.fillStyle="red":a===w?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(e*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.debug&&Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.ctx.fillText(a.toString(),e*this.squareSize+5,r*this.squareSize+15)),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(e*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}get health(){return d(this,m)}set health(i){v(this,m,i),R(d(this,m))}get money(){return d(this,g)}set money(i){v(this,g,i),O(d(this,g))}}m=new WeakMap,g=new WeakMap;const A=new W,E=async()=>{A.render(),requestAnimationFrame(E)},L=async()=>{A.update(),setTimeout(L,1e3/60)};E();L();
