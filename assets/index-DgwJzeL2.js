var tt=Object.defineProperty;var H=r=>{throw TypeError(r)};var et=(r,a,t)=>a in r?tt(r,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[a]=t;var h=(r,a,t)=>et(r,typeof a!="symbol"?a+"":a,t),j=(r,a,t)=>a.has(r)||H("Cannot "+t);var g=(r,a,t)=>(j(r,a,"read from private field"),t?t.call(r):a.get(r)),w=(r,a,t)=>a.has(r)?H("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(r):a.set(r,t),f=(r,a,t,i)=>(j(r,a,"write to private field"),i?i.call(r,t):a.set(r,t),t);(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();const e="?",T="start",b="end",U="tower",_=(r,a)=>Math.sqrt(Math.pow(r.x-a.x,2)+Math.pow(r.y-a.y,2));var B;class I{constructor(){w(this,B);f(this,B,Math.floor(Math.random()*1e7))}get id(){return g(this,B)}}B=new WeakMap;var z;class k extends I{constructor({game:t,health:i,speed:s,damage:n,reward:c,type:o,path:d}){super();h(this,"game");h(this,"health");h(this,"maxHealth");h(this,"speed");w(this,z);h(this,"gridPosition");h(this,"nextPosition");h(this,"distance");h(this,"damage");h(this,"lastUpdateTime",Date.now());h(this,"direction");h(this,"reward");h(this,"debuffs",[]);h(this,"monsterSize");h(this,"type");h(this,"path");this.game=t,this.health=i,this.maxHealth=i,this.speed=s,f(this,z,s),this.distance=0,this.path=d,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0,this.path),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5,this.path),this.direction=this.getDirection(this.nextPosition),this.damage=n,this.reward=c,this.monsterSize=this.game.squareSize/1.5,this.type=o}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}addDebuff(t){this.debuffs.push({...t,duration:Date.now()+t.duration})}applyDebuffs(){const t=Date.now();let i=g(this,z);this.debuffs=this.debuffs.filter(p=>!(t>p.duration));const n=(t-this.lastUpdateTime)/this.game.gameSpeed,c=this.debuffs.some(p=>p.type==="poison"),o=this.debuffs.filter(p=>p.type==="freeze").length;if(o>0?this.speed=Math.max(i/(2*o),g(this,z)/4):this.speed=i,c){const p=this.maxHealth*.005,m=n*p;this.takeDamage(m,"poison")}const d=this.debuffs.filter(p=>p.type==="burn");if(d.length>1){this.debuffs=this.debuffs.filter(u=>u.type!=="burn");const p=d.reduce((u,$)=>u.duration>$.duration?u:$),m=Math.floor(1.025*d.reduce((u,$)=>{var F;return u+(((F=$.data)==null?void 0:F.damage)??0)},0)),l={...p,data:{damage:m}};this.debuffs.push(l),this.takeDamage(n*m,"burn")}}update(){this.applyDebuffs();const t=Date.now(),s=(t-this.lastUpdateTime)/this.game.gameSpeed*this.speed,n=this.distance+s;Math.floor(n)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(n,this.path)),this.nextPosition&&n%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=n,this.lastUpdateTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:i}=this.gridPosition,s=this.distance%1,{squareSize:n}=this.game;let c=i*n,o=t*n;return this.direction==="up"?(c+=n/2-this.monsterSize/2,o+=n-s*n):this.direction==="down"?(c+=n/2-this.monsterSize/2,o+=s*n):this.direction==="left"?(c+=n-s*n,o+=n/2-this.monsterSize/2):this.direction==="right"?(c+=s*n,o+=n/2-this.monsterSize/2):this.direction==="none"&&(c+=n/2-this.monsterSize/2,o+=n/2-this.monsterSize/2),{x:c,y:o}}getCenter(){const t=this.getCanvasPosition();return t?{x:t.x+this.monsterSize/2,y:t.y+this.monsterSize/2}:{x:0,y:0}}render(){const t=this.getCanvasPosition();if(!t)return;const{ctx:i}=this.game,{x:s,y:n}=t,c=this.getSprite(),o=128,{row:d,numberOfFrames:p}=this.getWalkingAnimationRowAndNumberOfFrames(),l=Math.floor(this.distance*p)%p*o,u=d*o;i.save(),this.direction==="left"&&(i.translate(s+this.monsterSize/2,n),i.scale(-1,1),i.translate(-s-this.monsterSize/2,-n)),i.drawImage(c,l,u+5,o,o,s,n,this.monsterSize,this.monsterSize),i.restore(),i.save(),i.fillStyle="red",i.fillRect(s+10,n,this.monsterSize-20,5),i.fillStyle="green",i.fillRect(s+10,n,(this.monsterSize-20)*this.health/this.maxHealth,5),i.restore()}getSprite(){switch(this.type){case"skeleton":return this.isFrozen()?this.game.images["monsters/SkeletonFrozen"]:this.isPoisoned()?this.game.images["monsters/SkeletonPoisoned"]:this.game.images["monsters/Skeleton"];case"plant":return this.isFrozen()?this.game.images["monsters/PlantFrozen"]:this.isPoisoned()?this.game.images["monsters/PlantPoisoned"]:this.game.images["monsters/Plant"];case"orcWarrior":return this.isFrozen()?this.game.images["monsters/OrcWarriorFrozen"]:this.isPoisoned()?this.game.images["monsters/OrcWarriorPoisoned"]:this.game.images["monsters/OrcWarrior"];case"fireSpirit":return this.isFrozen()?this.game.images["monsters/FireSpiritFrozen"]:this.isPoisoned()?this.game.images["monsters/FireSpiritPoisoned"]:this.game.images["monsters/FireSpirit"];default:return console.error("Invalid monster type",this.type),this.game.images["monsters/Skeleton"]}}isFrozen(){return this.debuffs.some(t=>t.type==="freeze")}isPoisoned(){return this.debuffs.some(t=>t.type==="poison")}getWalkingAnimationRowAndNumberOfFrames(){switch(this.type){case"skeleton":return{row:1,numberOfFrames:8};case"plant":return{row:2,numberOfFrames:9};case"orcWarrior":return{row:9,numberOfFrames:7};case"fireSpirit":return{row:5,numberOfFrames:7};default:return console.error("Invalid monster type",this.type),{row:0,numberOfFrames:0}}}takeDamage(t,i){this.game.damageLog[i]||(this.game.damageLog[i]=0),this.game.damageLog[i]+=Math.min(t,this.health),this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}z=new WeakMap;class P extends I{constructor({game:t,speed:i,damage:s,target:n,position:c,splash:o,debuffs:d,tower:p}){super();h(this,"game");h(this,"speed");h(this,"damage");h(this,"target");h(this,"position");h(this,"lastMoveTime");h(this,"angle");h(this,"height",10);h(this,"width",10);h(this,"images",["arrow"]);h(this,"splash",null);h(this,"debuffs",null);h(this,"tower");this.game=t,this.speed=i,this.damage=s,this.target=n,this.position=c,this.angle=0,this.splash=o??null,this.debuffs=d??null,this.lastMoveTime=Date.now(),this.tower=p}impact(){var i;const t=this.target;t instanceof k&&(t.takeDamage(this.damage,this.tower.type),(i=this.debuffs)==null||i.forEach(s=>{t.addDebuff(s)})),this.splash&&this.game.level.monsters.forEach(s=>{var o;if(t instanceof k&&s.id===t.id)return;const n=s.getCenter();if(!n)return;_(this.position,n)<=this.splash*this.game.squareSize&&(s.takeDamage(this.damage,this.tower.type),(o=this.debuffs)==null||o.forEach(d=>{s.addDebuff(d)}))}),this.game.projectiles=this.game.projectiles.filter(s=>s.id!==this.id)}getImage(){const t=this.images.length,i=Math.floor(Date.now()/this.game.gameSpeed%t),s=this.images[i];return this.game.images[s]}getTargetPosition(){return this.target instanceof k?this.target.getCenter():this.game.convertGridPositionToCoordinates(this.target)}update(){const t=Date.now(),i=t-this.lastMoveTime,s=i/this.game.gameSpeed;this.speed*=1+2*s;const n=i/this.game.gameSpeed*this.speed,c=this.getTargetPosition(),o=Math.sqrt(Math.pow(c.x-this.position.x,2)+Math.pow(c.y-this.position.y,2));if(n>o){this.position=c,this.lastMoveTime=t,this.impact();return}const d=Math.atan2(c.y-this.position.y,c.x-this.position.x),p=Math.cos(d)*n,m=Math.sin(d)*n;this.angle=d+Math.PI,this.position={x:this.position.x+p,y:this.position.y+m},this.lastMoveTime=t}render(){const{ctx:t}=this.game;t.save(),t.translate(this.position.x,this.position.y),t.rotate(this.angle);try{t.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height)}catch(i){console.log(i),this.game.debug&&alert(`Error rendering projectile ${this.getImage().src}: ${i}`)}t.restore()}}class Y extends P{constructor(t){super(t);h(this,"height",10);h(this,"width",25)}}const V=(r,a)=>{const t=Math.sqrt(Math.pow(r.col-a.col,2)+Math.pow(r.row-a.row,2));return Math.abs(t)};var C;class y extends I{constructor(t,i,s){super();h(this,"game");h(this,"gridPosition");h(this,"range",4);h(this,"damage",60);h(this,"baseDamage",60);h(this,"baseRange",4);h(this,"attackSpeed",.5);h(this,"lastAttackTime",Date.now());h(this,"placed",!1);h(this,"type","basic");h(this,"multiTarget",!1);h(this,"splash",null);h(this,"debuffs",null);w(this,C,[]);this.type=s;const n=J[this.type];this.game=t,this.gridPosition=i,this.range=n.range,this.baseRange=n.range,this.damage=n.damage,this.baseDamage=n.damage,this.attackSpeed=n.attackSpeed,this.splash=n.splash,n.debuff&&(this.debuffs=[{type:n.debuff,duration:(n.debuffDuration??1)*this.game.gameSpeed}])}getImage(){let t=[this.game.images[`tower-${this.type}`]];this.type==="lightning"?t=[this.game.images[`tower-${this.type}`],this.game.images[`tower-${this.type}-2`]]:this.type==="support-damage"&&(t=[this.game.images[`tower-${this.type}`],this.game.images[`tower-${this.type}-2`]]);const i=t.length,s=Math.floor(Date.now()/this.game.gameSpeed%i);return t[s]}render(){var d;const{squareSize:t}=this.game,{col:i,row:s}=this.gridPosition,n=i*t,c=s*t,o=this.getImage();try{this.game.ctx.drawImage(o,n,c,t,t)}catch(p){console.error(p),this.game.debug&&alert(`Error rendering tower ${o}: ${p}`)}if(this.id===((d=this.game.selectedTower)==null?void 0:d.id)){const{squareSize:p}=this.game,{col:m,row:l}=this.gridPosition;this.game.ctx.save(),this.game.ctx.globalAlpha=.25,this.game.ctx.beginPath(),this.game.ctx.arc(m*p+p/2,l*p+p/2,this.range*p,0,2*Math.PI),this.game.ctx.fillStyle="purple",this.game.ctx.globalAlpha=.5,this.game.ctx.fill(),this.game.ctx.restore()}}update(){this.attack()}monsterIsValidTarget(t){return!t.gridPosition||!t.isAlive()?!1:V(this.gridPosition,t.gridPosition)<=this.range}getTargetInRange(){return this.getTargetsInRange()[0]}getTargetsInRange(){const{monsters:t}=this.game.level;return t.filter(i=>this.monsterIsValidTarget(i))??[]}canAttack(){return Date.now()-this.lastAttackTime>this.game.gameSpeed/this.attackSpeed}attack(){const t=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i&&(this.game.projectiles.push(new Y({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/4,debuffs:this.debuffs,splash:this.splash,tower:this})),this.lastAttackTime=t+(this.attackSpeed*(Math.random()*.025)-.0125)*this.game.gameSpeed)}}onSell(){this.game.money+=M[this.type]/2}addBuff(t){this.towerBuffs=[...this.towerBuffs,t]}removeBuff(t){this.towerBuffs=this.towerBuffs.filter(i=>i.type!==t.type&&i.origin!==t.origin)}get towerBuffs(){return g(this,C)}set towerBuffs(t){f(this,C,t);let i=1,s=1;g(this,C).forEach(n=>{n.type==="range"?i+=n.value:n.type==="damage"&&(s+=n.value)}),this.damage=this.baseDamage*s,this.range=this.baseRange*i}}C=new WeakMap;class at extends y{constructor(a,t){super(a,t,"arrow")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();t&&(this.game.projectiles.push(new Y({game:this.game,target:t,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/2,debuffs:this.debuffs,splash:this.splash,tower:this})),this.lastAttackTime=a)}}}class st extends P{constructor(t){super(t);h(this,"height",10);h(this,"width",25);h(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class it extends y{constructor(a,t){super(a,t,"cannon")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();t!=null&&t.gridPosition&&(this.game.projectiles.push(new st({game:this.game,target:t.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/10,debuffs:this.debuffs,splash:this.splash,tower:this})),this.lastAttackTime=a)}}}class nt extends P{constructor(){super(...arguments);h(this,"height",10);h(this,"width",25);h(this,"images",["fire-1","fire-2"])}impact(){Math.random()>.8&&(this.damage*=2,this.debuffs=[{type:"burn",duration:this.game.gameSpeed*4,data:{damage:this.damage/4}}]),super.impact()}}class ht extends y{constructor(a,t){super(a,t,"fire")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();t!=null&&t.gridPosition&&(this.game.projectiles.push(new nt({game:this.game,target:t,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/2,debuffs:this.debuffs,splash:this.splash,tower:this})),this.lastAttackTime=a)}}}const rt={freeze:"freeze",poison:"poison",burn:"burn"};class ct extends P{constructor(){super(...arguments);h(this,"height",25);h(this,"width",25);h(this,"images",["frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"]);h(this,"debuffs",[{type:rt.freeze,duration:this.game.gameSpeed*2}])}}class ot extends y{constructor(a,t){super(a,t,"ice")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();t!=null&&t.gridPosition&&(this.game.projectiles.push(new ct({game:this.game,target:t,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/2,debuffs:this.debuffs,splash:this.splash,tower:this})),this.lastAttackTime=a)}}}const x=r=>r%10===0,L=r=>x(r)?1:Math.min(20+(r-1),60),O=r=>{let i=0;for(let s=0;s<r;s+=1)i+=50*(s*2),i+=Math.pow(s,1.5+Math.floor(s/50)/2);return x(r)&&(i*=L(r-1)/2),Math.floor(100+i)};class dt extends P{constructor(t){super(t);h(this,"height",15);h(this,"width",30);h(this,"previousTargets",[]);h(this,"images",["lightning-1","lightning-2"]);this.previousTargets.push(t.target.id)}impact(){super.impact(),this.game.level.monsters.find(t=>!(this.target instanceof k)||this.previousTargets.includes(t.id)?!1:_(t.getCanvasPosition(),this.target.getCanvasPosition())<150?(this.previousTargets.push(t.id),this.target=t,this.damage*=.9,this.game.projectiles.push(this),!0):!1)}}class pt extends y{constructor(a,t){super(a,t,"lightning")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();if(t!=null&&t.gridPosition){let s=O(this.game.level.wave)/1e5,n=1;for(this.towerBuffs.forEach(c=>{c.type==="damage"&&(n+=c.value)}),s*=n;Math.random()>.8;)s*=10;this.game.projectiles.push(new dt({game:this.game,target:t,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:s,debuffs:this.debuffs,splash:this.splash,speed:this.game.gameSpeed*1.5,tower:this})),this.lastAttackTime=a}}}}class lt extends P{constructor(){super(...arguments);h(this,"height",12);h(this,"width",20);h(this,"images",["crystal"])}}class mt extends y{constructor(a,t){super(a,t,"mage")}attack(){const a=Date.now();if(this.canAttack()){const t=this.getTargetInRange();t!=null&&t.gridPosition&&(this.game.projectiles.push(new lt({game:this.game,target:t,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,debuffs:this.debuffs,splash:this.splash,speed:this.game.gameSpeed,tower:this})),this.lastAttackTime=a)}}}class gt extends P{constructor(){super(...arguments);h(this,"height",25);h(this,"width",25);h(this,"images",["poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8"])}}class ut extends y{constructor(t,i){super(t,i,"poison");h(this,"multiTarget",!0)}attack(){const t=Date.now();this.canAttack()&&this.getTargetsInRange().forEach(s=>{s!=null&&s.gridPosition&&(this.game.projectiles.push(new gt({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,debuffs:this.debuffs,splash:this.splash,speed:this.game.gameSpeed/5,tower:this})),this.lastAttackTime=t)})}}class X extends y{constructor(){super(...arguments);h(this,"buffInterval",5e3);h(this,"lastBuffTime",Date.now()-this.buffInterval);h(this,"buffsToApply",[])}attack(){}update(){super.update(),Date.now()>this.lastBuffTime+this.buffInterval&&(this.buffTowers(),this.lastBuffTime=Date.now())}buffTowers(){this.getTowersInRange().forEach(i=>{this.buffsToApply.forEach(s=>{i.towerBuffs.some(n=>n.type===s.type&&n.origin===this.id)||i.addBuff(s)})})}onSell(){super.onSell(),this.removeBuffs()}removeBuffs(){this.getTowersInRange().forEach(i=>{this.buffsToApply.forEach(s=>{i.removeBuff(s)})})}getTowersInRange(){return this.game.level.towers.filter(t=>this.id===t.id?!1:V(this.gridPosition,t.gridPosition)<=this.range+.5)}}class ft extends X{constructor(t,i){super(t,i,"support-damage");h(this,"buffsToApply",[{origin:this.id,type:"damage",value:.5,stackable:!0}])}attack(){}}class wt extends X{constructor(t,i){super(t,i,"support-range");h(this,"buffsToApply",[{origin:this.id,type:"range",value:.5,stackable:!0}])}attack(){}}const N=["basic","arrow","cannon","ice","poison","fire","lightning","mage","support-damage","support-range"],M={basic:50,arrow:100,cannon:200,fire:1e3,ice:450,mage:7500,lightning:2e3,poison:500,"support-damage":5e3,"support-range":5e3},J={basic:{range:4,damage:60,attackSpeed:.5,splash:0,debuff:null},arrow:{range:5,damage:50,attackSpeed:1,splash:0,debuff:null},cannon:{range:5,damage:150,attackSpeed:.5,splash:1.5,debuff:null},fire:{range:5,damage:500,attackSpeed:1,splash:.75,debuff:null,special:"20% chance to crit. Critical hits deal double damage and applies a potentially infinitely scaling burn debuff"},ice:{range:5,damage:50,attackSpeed:1,splash:1,debuff:"freeze",debuffDuration:2,special:"Slows enemies by 50%. Can stack two times."},mage:{range:10,damage:5e3,attackSpeed:3,splash:0,debuff:null},lightning:{range:5,damage:125,attackSpeed:1,splash:0,debuff:null,special:"Deals random damage. With a good deal of luck it can oneshot any monster. Lightning also chains to nearby enemies"},poison:{range:2,damage:0,attackSpeed:1,splash:0,debuff:"poison",debuffDuration:10,special:"Poison deals 0.5% of the target's max health per second"},"support-damage":{range:2,damage:0,attackSpeed:0,splash:0,debuff:null,special:"Increases damage of nearby towers by 50%"},"support-range":{range:2,damage:0,attackSpeed:0,splash:0,debuff:null,special:"Increases range of nearby towers by 50%"}},Q={basic:y,arrow:at,cannon:it,mage:mt,ice:ot,fire:ht,lightning:pt,poison:ut,"support-damage":ft,"support-range":wt};class vt{constructor(a){h(this,"game");h(this,"mousePosition");this.game=a,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:a,y:t}=this.mousePosition,{squareSize:i}=this.game,s=Math.floor(a/i);return{row:Math.floor(t/i),col:s}}init(){this.game.canvas.addEventListener("mousemove",a=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:a.clientX-t.left,y:a.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()}),this.game.canvas.addEventListener("contextmenu",a=>{this.handleContextMenu(a)})}handleClick(){const a=this.getCellAtMousePosition();if(this.game.newTower&&this.game.level.mapMatrix.matrix[a.col][a.row]===e)this.game.money>=M[this.game.newTower]&&(this.game.level.mapMatrix.matrix[a.col][a.row]=U,this.game.level.towers.push(new Q[this.game.newTower](this.game,a,"basic")),this.game.money-=M[this.game.newTower],this.game.money<M[this.game.newTower]&&(this.game.newTower=null));else if(this.game.newTower===null){const t=this.getTowerInCell(a);t?(this.game.selectedTower=t,console.log(t)):this.game.selectedTower=null}}getTowerInCell(a){return this.game.level.towers.find(t=>t.gridPosition.col===a.col&&t.gridPosition.row===a.row)}handleContextMenu(a){a.preventDefault();const t=this.getCellAtMousePosition();if(this.game.newTower)this.game.newTower=null;else if(this.game.level.mapMatrix.matrix[t.col][t.row]===U){const i=this.getTowerInCell(t);i&&(this.game.paused=!0,confirm(`Sell for ${M[i.type]/2} coins?`)&&(this.game.level.towers=this.game.level.towers.filter(s=>s.id!==i.id),this.game.level.mapMatrix.matrix[t.col][t.row]=e,i.onSell()),this.game.paused=!1)}}}const St=[[e,T,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e],[e,[{path:"0",distance:1}],e,[{path:"0",distance:67}],[{path:"0",distance:66}],[{path:"0",distance:65}],[{path:"0",distance:64}],[{path:"0",distance:63}],[{path:"0",distance:62}],[{path:"0",distance:61}],[{path:"0",distance:60}],[{path:"0",distance:59}],[{path:"0",distance:58}],[{path:"0",distance:57}],[{path:"0",distance:56}],[{path:"0",distance:55}],[{path:"0",distance:54}],[{path:"0",distance:53}],[{path:"0",distance:52}],e],[e,[{path:"0",distance:2}],e,[{path:"0",distance:68}],e,e,e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:51}],e],[e,[{path:"0",distance:3}],e,[{path:"0",distance:69}],e,[{path:"0",distance:119}],[{path:"0",distance:118}],[{path:"0",distance:117}],[{path:"0",distance:116}],[{path:"0",distance:115}],[{path:"0",distance:114}],[{path:"0",distance:113}],[{path:"0",distance:112}],[{path:"0",distance:111}],[{path:"0",distance:110}],[{path:"0",distance:109}],[{path:"0",distance:108}],e,[{path:"0",distance:50}],e],[e,[{path:"0",distance:4}],e,[{path:"0",distance:70}],e,[{path:"0",distance:120}],e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:107}],e,[{path:"0",distance:49}],e],[e,[{path:"0",distance:5}],e,[{path:"0",distance:71}],e,[{path:"0",distance:121}],e,[{path:"0",distance:155}],[{path:"0",distance:154}],[{path:"0",distance:153}],[{path:"0",distance:152}],[{path:"0",distance:151}],[{path:"0",distance:150}],[{path:"0",distance:149}],[{path:"0",distance:148}],e,[{path:"0",distance:106}],e,[{path:"0",distance:48}],e],[e,[{path:"0",distance:6}],e,[{path:"0",distance:72}],e,[{path:"0",distance:122}],e,[{path:"0",distance:156}],e,e,e,e,e,e,[{path:"0",distance:147}],e,[{path:"0",distance:105}],e,[{path:"0",distance:47}],e],[e,[{path:"0",distance:7}],e,[{path:"0",distance:73}],e,[{path:"0",distance:123}],e,[{path:"0",distance:157}],e,[{path:"0",distance:175}],[{path:"0",distance:174}],[{path:"0",distance:173}],[{path:"0",distance:172}],e,[{path:"0",distance:146}],e,[{path:"0",distance:104}],e,[{path:"0",distance:46}],e],[e,[{path:"0",distance:8}],e,[{path:"0",distance:74}],e,[{path:"0",distance:124}],e,[{path:"0",distance:158}],e,[{path:"0",distance:176}],b,[{path:"0",distance:182}],[{path:"0",distance:171}],e,[{path:"0",distance:145}],e,[{path:"0",distance:103}],e,[{path:"0",distance:45}],e],[e,[{path:"0",distance:9}],e,[{path:"0",distance:75}],e,[{path:"0",distance:125}],e,[{path:"0",distance:159}],e,[{path:"0",distance:177}],[{path:"0",distance:180}],[{path:"0",distance:181}],[{path:"0",distance:170}],e,[{path:"0",distance:144}],e,[{path:"0",distance:102}],e,[{path:"0",distance:44}],e],[e,[{path:"0",distance:10}],e,[{path:"0",distance:76}],e,[{path:"0",distance:126}],e,[{path:"0",distance:160}],e,[{path:"0",distance:178}],[{path:"0",distance:179}],e,[{path:"0",distance:169}],e,[{path:"0",distance:143}],e,[{path:"0",distance:101}],e,[{path:"0",distance:43}],e],[e,[{path:"0",distance:11}],e,[{path:"0",distance:77}],e,[{path:"0",distance:127}],e,[{path:"0",distance:161}],e,e,e,e,[{path:"0",distance:168}],e,[{path:"0",distance:142}],e,[{path:"0",distance:100}],e,[{path:"0",distance:42}],e],[e,[{path:"0",distance:12}],e,[{path:"0",distance:78}],e,[{path:"0",distance:128}],e,[{path:"0",distance:162}],[{path:"0",distance:163}],[{path:"0",distance:164}],[{path:"0",distance:165}],[{path:"0",distance:166}],[{path:"0",distance:167}],e,[{path:"0",distance:141}],e,[{path:"0",distance:99}],e,[{path:"0",distance:41}],e],[e,[{path:"0",distance:13}],e,[{path:"0",distance:79}],e,[{path:"0",distance:129}],e,e,e,e,e,e,e,e,[{path:"0",distance:140}],e,[{path:"0",distance:98}],e,[{path:"0",distance:40}],e],[e,[{path:"0",distance:14}],e,[{path:"0",distance:80}],e,[{path:"0",distance:130}],[{path:"0",distance:131}],[{path:"0",distance:132}],[{path:"0",distance:133}],[{path:"0",distance:134}],[{path:"0",distance:135}],[{path:"0",distance:136}],[{path:"0",distance:137}],[{path:"0",distance:138}],[{path:"0",distance:139}],e,[{path:"0",distance:97}],e,[{path:"0",distance:39}],e],[e,[{path:"0",distance:15}],e,[{path:"0",distance:81}],e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:96}],e,[{path:"0",distance:38}],e],[e,[{path:"0",distance:16}],e,[{path:"0",distance:82}],[{path:"0",distance:83}],[{path:"0",distance:84}],[{path:"0",distance:85}],[{path:"0",distance:86}],[{path:"0",distance:87}],[{path:"0",distance:88}],[{path:"0",distance:89}],[{path:"0",distance:90}],[{path:"0",distance:91}],[{path:"0",distance:92}],[{path:"0",distance:93}],[{path:"0",distance:94}],[{path:"0",distance:95}],e,[{path:"0",distance:37}],e],[e,[{path:"0",distance:17}],e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:36}],e],[e,[{path:"0",distance:18}],[{path:"0",distance:19}],[{path:"0",distance:20}],[{path:"0",distance:21}],[{path:"0",distance:22}],[{path:"0",distance:23}],[{path:"0",distance:24}],[{path:"0",distance:25}],[{path:"0",distance:26}],[{path:"0",distance:27}],[{path:"0",distance:28}],[{path:"0",distance:29}],[{path:"0",distance:30}],[{path:"0",distance:31}],[{path:"0",distance:32}],[{path:"0",distance:33}],[{path:"0",distance:34}],[{path:"0",distance:35}],e],[e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e]],bt=r=>{const a=document.createElement("div");a.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{r.startWave()}),a.innerHTML=`
    <div class="toolbar-item">
      <span>🪙: </span>
      <span id="money" class="money">${r.money.toLocaleString("en-US")}</span>
    </div>
    <div class="toolbar-item">
      <span>❤️: </span>
      <span id="health">${r.health}</span>
    </div>
    <div class="toolbar-item">
      <span>🌊: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>👿: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>💀: </span>
      <span id="kills">0</span>
    </div>
  `,a.appendChild(t);const i=document.createElement("label");i.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,a.appendChild(i);const s=document.createElement("span");s.innerHTML="Speed: ",a.appendChild(s),[.25,.5,1,2,5].forEach(m=>{const l=document.createElement("button");l.innerHTML=`x${m}`,l.addEventListener("click",()=>{r.gameSpeed=1e3/m}),a.appendChild(l)}),document.body.insertBefore(a,document.body.firstChild);const n=document.createElement("div");n.id="toolbar-bottom",N.forEach(m=>{const l=document.createElement("button");l.innerHTML=`
    <img src="assets/tower-${m}.png" alt="${m} tower" />
    <span>${m} tower - <span class="price">${M[m].toLocaleString("en-US")}🪙</span></span>
    `,l.addEventListener("click",()=>{r.newTower=m}),n.appendChild(l)}),document.body.appendChild(n);const c=document.createElement("div");c.id="info-panel",c.innerHTML=`
  <details>
  <summary>How to play</summary>
  <h2>Goal</h2>
  <p>Defend your base from waves of monsters by building towers. The monsters move from the blue square(s) to the red square(s)</p>
  <h2>Adding towers</h2>
  <p>
    Use the toolbar at the bottom to select a tower type. Click on an empty square on the map to add a tower.
  </p>
  <h2>Selling towers</h2>
  <p>
    Right-click on a tower to sell it for half the price.
  </p>
  <h2>Starting a wave</h2>
  <p>
    Click the "Start Wave" button to start a new wave of monsters.
  </p>
  <h2>Auto mode</h2>
  <p>
    When auto mode is enabled, the game will automatically start new waves when the previous wave is defeated.
  </p>
  
  </details>
  
  `,document.body.appendChild(c);const o=document.createElement("div");o.id="tower-table",o.innerHTML=`
  <details>
  <summary>Tower Stats</summary>
  <h2>Towers:</h2>
  <i>Speed is number of attacks per second. Range and splash values are in number of squares. 
  </i>
  <table>
  <thead>
  
  <tr>
    <th>Type</th>
    <th>Damage</th>
    <th>Speed</th>
    <th>DPS</th>
    <th>Range</th>
    <th>Splash</th>
    <th>Debuff</th>
    <th>Special</th>
  </tr>
  </thead>
  <tbody>
  ${N.map(m=>{const l=J[m];return`<tr>
      <td><img src="assets/tower-${m}.png" alt="${m} tower" /></td>
      <td>${l.damage}</td>
      <td>${l.attackSpeed}</td>
      <td>${l.damage*l.attackSpeed}</td>
      <td>${l.range}</td>
      <td>${l.splash||"❌"}</td>
      <td>${l.debuff?`${l.debuff} (${l.debuffDuration}s)`:"❌"}</td>
      <td>${l.special??""}</td>
      </tr>`}).join("")}
  </tbody>
  </table>
  </details>
  `,document.body.appendChild(o);const d=document.createElement("div");d.id="upgrade-tower",d.innerHTML=`
  <h2>Upgrade Tower</h2>
`,d.style.display="none",["damage","range","speed"].forEach(m=>{const l=document.createElement("button");l.innerHTML=`${m}`,l.addEventListener("click",()=>{r.upgradeTower(m)}),d.appendChild(l)}),document.body.appendChild(d);const p=document.createElement("div");document.body.appendChild(p)},yt=r=>{const a=document.getElementById("health");a&&(a.innerText=r.toLocaleString("en-US"))},xt=r=>{const a=document.getElementById("kills");a&&(a.innerText=r.toLocaleString("en-US"))},Tt=r=>{const a=document.getElementById("money");a&&(a.innerText=r.toLocaleString("en-US"))},G=r=>{const a=document.getElementById("monsters");a&&(a.innerText=r.toLocaleString("en-US"))};class Pt extends k{constructor({game:a,...t}){super({game:a,...t}),this.monsterSize=this.game.squareSize}}const Mt=r=>{const a=document.getElementById("wave");a&&(a.innerText=r.toLocaleString("en-US"))};class kt extends I{constructor(t,i){super();h(this,"matrix");h(this,"level");h(this,"totalDistance",0);h(this,"distanceToPositionMap",{});this.level=t,this.matrix={},i?(this.matrix=i,Object.values(i).forEach(s=>{Object.values(s).forEach(n=>{Array.isArray(n)&&(this.totalDistance=Math.max(...n.map(c=>c.distance),this.totalDistance))})})):this.generateMapMatrix()}initMatrix(){var s,n;const{gridWidth:t,gridHeight:i}=this.level.game;this.matrix=Array.from({length:t},()=>Array(i).fill(e)),(s=this.level.startPositions)==null||s.forEach((c,o)=>{this.matrix[c.col][c.row]=[{path:`${o}`,distance:0}]}),(n=this.level.endPositions)==null||n.forEach(c=>{this.matrix[c.col][c.row]=b})}generateMapMatrix(){var t;(t=this.level.startPositions)==null||t.forEach((i,s)=>{let n=0;do this.initMatrix(),this.totalDistance=this.buildPath(i.col,i.row,1,`${s}`),n++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&n<100);n>=100&&console.log("Failed to generate path")})}buildPath(t,i,s,n){const c=this.getNeighbors(t,i);if(c.some(({row:m,col:l})=>this.getCell(l,m)===b))return s;const o=c.filter(({col:m,row:l})=>this.canBePath(m,l,s,n));if(o.length===0)return-1;const d=o[Math.floor(Math.random()*o.length)],p=this.matrix[d.col][d.row];return Array.isArray(p)?p.push({path:n,distance:s}):this.matrix[d.col][d.row]=[{path:n,distance:s}],this.buildPath(d.col,d.row,s+1,n)}getNeighbors(t,i){const s=[];return t>0&&s.push({col:t-1,row:i}),t<this.level.game.gridWidth-1&&s.push({col:t+1,row:i}),i>0&&s.push({col:t,row:i-1}),i<this.level.game.gridHeight-1&&s.push({col:t,row:i+1}),s}getCell(t,i){return this.matrix[t][i]}canBePath(t,i,s,n){const c=this.getCell(t,i);return!(c!==e&&Array.isArray(c)===!1||Array.isArray(c)&&c.some(d=>d.path===n&&d.distance>s-10)||this.getNeighbors(t,i).filter(({col:d,row:p})=>{const m=this.getCell(d,p);return Array.isArray(m)?!!(Array.isArray(m)&&m.some(l=>l.path===n&&l.distance>s-10)):!1}).length>1||Array.isArray(c)&&c.length>=this.level.maxRepeatSquares)}getPathPosition(t,i){const s=Math.ceil(t),n=`${i}${s}`;if(this.distanceToPositionMap[n])return this.distanceToPositionMap[n];let c=s<=0?this.level.startPositions[Math.floor(Math.random()*this.level.startPositions.length)]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(o=>{const d=Number(o);Object.keys(this.matrix[d]).forEach(p=>{const m=Number(p),l=this.matrix[d][m];if(Array.isArray(l)&&l.find(u=>u.distance===s&&u.path===i)){c={row:m,col:d};return}})}),this.distanceToPositionMap[n]=c,c}}var A;class W extends I{constructor({game:t,startPositions:i,endPositions:s,minLength:n,maxLength:c,maxRepeatSquares:o,map:d}){super();h(this,"game");h(this,"startPositions");h(this,"endPositions");h(this,"mapMatrix");h(this,"minLength");h(this,"maxLength");h(this,"maxRepeatSquares");h(this,"towers",[]);h(this,"monsters",[]);w(this,A,0);this.game=t,this.startPositions=i,this.endPositions=s,this.minLength=n,this.maxLength=c,this.maxRepeatSquares=o,this.mapMatrix=new kt(this,d)}get wave(){return g(this,A)}set wave(t){f(this,A,t),Mt(g(this,A))}}A=new WeakMap;const zt=["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","tower-lightning","tower-lightning-2","tower-support-damage","tower-support-damage-2","tower-support-range","tower-poison","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13","crystal","poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8","lightning-1","lightning-2","monsters/Skeleton","monsters/FireSpirit","monsters/OrcWarrior","monsters/Plant","monsters/SkeletonFrozen","monsters/FireSpiritFrozen","monsters/OrcWarriorFrozen","monsters/PlantFrozen","monsters/SkeletonPoisoned","monsters/FireSpiritPoisoned","monsters/OrcWarriorPoisoned","monsters/PlantPoisoned"],K=["plant","skeleton","orcWarrior","fireSpirit"],Z=[["?","?","?","?","?","?","?","?",[{distance:0,path:"0"}],"?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:1,path:"0"}],"?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?"],["?","?",[{distance:20,path:"0"},{distance:131,path:"1"},{distance:94,path:"2"},{distance:57,path:"3"}],[{distance:21,path:"0"},{distance:132,path:"1"},{distance:95,path:"2"},{distance:58,path:"3"}],[{distance:22,path:"0"},{distance:133,path:"1"},{distance:96,path:"2"},{distance:59,path:"3"}],[{distance:23,path:"0"},{distance:134,path:"1"},{distance:97,path:"2"},{distance:60,path:"3"}],[{distance:24,path:"0"},{distance:135,path:"1"},{distance:98,path:"2"},{distance:61,path:"3"}],[{distance:25,path:"0"},{distance:136,path:"1"},{distance:99,path:"2"},{distance:62,path:"3"}],[{distance:2,path:"0"},{distance:26,path:"0"},{distance:137,path:"1"},{distance:100,path:"2"},{distance:63,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:125,path:"0"},{distance:88,path:"1"},{distance:51,path:"2"},{distance:14,path:"3"}],[{distance:126,path:"0"},{distance:89,path:"1"},{distance:52,path:"2"},{distance:15,path:"3"}],[{distance:127,path:"0"},{distance:90,path:"1"},{distance:53,path:"2"},{distance:16,path:"3"}],[{distance:128,path:"0"},{distance:91,path:"1"},{distance:54,path:"2"},{distance:17,path:"3"}],[{distance:129,path:"0"},{distance:92,path:"1"},{distance:55,path:"2"},{distance:18,path:"3"}],[{distance:130,path:"0"},{distance:93,path:"1"},{distance:56,path:"2"},{distance:19,path:"3"}],[{distance:131,path:"0"},{distance:94,path:"1"},{distance:57,path:"2"},{distance:20,path:"3"}],"?","?"],["?","?",[{distance:19,path:"0"},{distance:130,path:"1"},{distance:93,path:"2"},{distance:56,path:"3"}],"?","?","?","?","?",[{distance:3,path:"0"},{distance:27,path:"0"},{distance:138,path:"1"},{distance:101,path:"2"},{distance:64,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:124,path:"0"},{distance:87,path:"1"},{distance:50,path:"2"},{distance:13,path:"3"}],"?","?","?","?","?",[{distance:132,path:"0"},{distance:95,path:"1"},{distance:58,path:"2"},{distance:21,path:"3"}],"?","?"],["?","?",[{distance:18,path:"0"},{distance:129,path:"1"},{distance:92,path:"2"},{distance:55,path:"3"}],"?","?","?","?","?",[{distance:4,path:"0"},{distance:28,path:"0"},{distance:139,path:"1"},{distance:102,path:"2"},{distance:65,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:123,path:"0"},{distance:86,path:"1"},{distance:49,path:"2"},{distance:12,path:"3"}],"?","?","?","?","?",[{distance:133,path:"0"},{distance:96,path:"1"},{distance:59,path:"2"},{distance:22,path:"3"}],"?","?"],["?","?",[{distance:17,path:"0"},{distance:128,path:"1"},{distance:91,path:"2"},{distance:54,path:"3"}],"?","?","?","?","?",[{distance:5,path:"0"},{distance:29,path:"0"},{distance:140,path:"1"},{distance:103,path:"2"},{distance:66,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:122,path:"0"},{distance:85,path:"1"},{distance:48,path:"2"},{distance:11,path:"3"}],"?","?","?","?","?",[{distance:134,path:"0"},{distance:97,path:"1"},{distance:60,path:"2"},{distance:23,path:"3"}],"?","?"],["?","?",[{distance:16,path:"0"},{distance:127,path:"1"},{distance:90,path:"2"},{distance:53,path:"3"}],"?","?","?","?","?",[{distance:6,path:"0"},{distance:30,path:"0"},{distance:141,path:"1"},{distance:104,path:"2"},{distance:67,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:121,path:"0"},{distance:84,path:"1"},{distance:47,path:"2"},{distance:10,path:"3"}],"?","?","?","?","?",[{distance:135,path:"0"},{distance:98,path:"1"},{distance:61,path:"2"},{distance:24,path:"3"}],"?","?"],["?","?",[{distance:15,path:"0"},{distance:126,path:"1"},{distance:89,path:"2"},{distance:52,path:"3"}],"?","?","?","?","?",[{distance:7,path:"0"},{distance:31,path:"0"},{distance:142,path:"1"},{distance:105,path:"2"},{distance:68,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:120,path:"0"},{distance:83,path:"1"},{distance:46,path:"2"},{distance:9,path:"3"}],"?","?","?","?","?",[{distance:136,path:"0"},{distance:99,path:"1"},{distance:62,path:"2"},{distance:25,path:"3"}],"?","?"],["?","?",[{distance:14,path:"0"},{distance:125,path:"1"},{distance:88,path:"2"},{distance:51,path:"3"}],[{distance:13,path:"0"},{distance:124,path:"1"},{distance:87,path:"2"},{distance:50,path:"3"}],[{distance:12,path:"0"},{distance:123,path:"1"},{distance:86,path:"2"},{distance:49,path:"3"}],[{distance:11,path:"0"},{distance:122,path:"1"},{distance:85,path:"2"},{distance:48,path:"3"}],[{distance:10,path:"0"},{distance:121,path:"1"},{distance:84,path:"2"},{distance:47,path:"3"}],[{distance:9,path:"0"},{distance:120,path:"1"},{distance:83,path:"2"},{distance:46,path:"3"}],[{distance:8,path:"0"},{distance:32,path:"0"},{distance:119,path:"1"},{distance:143,path:"1"},{distance:82,path:"2"},{distance:106,path:"2"},{distance:45,path:"3"},{distance:69,path:"3"}],[{distance:118,path:"1"},{distance:81,path:"2"},{distance:44,path:"3"}],[{distance:117,path:"1"},{distance:80,path:"2"},{distance:43,path:"3"}],[{distance:116,path:"1"},{distance:79,path:"2"},{distance:42,path:"3"}],[{distance:115,path:"1"},{distance:78,path:"2"},{distance:41,path:"3"}],[{distance:114,path:"1"},{distance:77,path:"2"},{distance:40,path:"3"}],[{distance:113,path:"1"},{distance:76,path:"2"},{distance:39,path:"3"}],[{distance:149,path:"0"},{distance:112,path:"1"},{distance:75,path:"2"},{distance:38,path:"3"}],[{distance:148,path:"0"},{distance:111,path:"1"},{distance:74,path:"2"},{distance:37,path:"3"}],[{distance:147,path:"0"},{distance:110,path:"1"},{distance:73,path:"2"},{distance:36,path:"3"}],[{distance:146,path:"0"},{distance:109,path:"1"},{distance:72,path:"2"},{distance:35,path:"3"}],[{distance:145,path:"0"},{distance:108,path:"1"},{distance:71,path:"2"},{distance:34,path:"3"}],[{distance:144,path:"0"},{distance:107,path:"1"},{distance:70,path:"2"},{distance:33,path:"3"}],[{distance:119,path:"0"},{distance:143,path:"0"},{distance:82,path:"1"},{distance:106,path:"1"},{distance:45,path:"2"},{distance:69,path:"2"},{distance:8,path:"3"},{distance:32,path:"3"}],[{distance:142,path:"0"},{distance:105,path:"1"},{distance:68,path:"2"},{distance:7,path:"3"},{distance:31,path:"3"}],[{distance:141,path:"0"},{distance:104,path:"1"},{distance:67,path:"2"},{distance:6,path:"3"},{distance:30,path:"3"}],[{distance:140,path:"0"},{distance:103,path:"1"},{distance:66,path:"2"},{distance:5,path:"3"},{distance:29,path:"3"}],[{distance:139,path:"0"},{distance:102,path:"1"},{distance:65,path:"2"},{distance:4,path:"3"},{distance:28,path:"3"}],[{distance:138,path:"0"},{distance:101,path:"1"},{distance:64,path:"2"},{distance:3,path:"3"},{distance:27,path:"3"}],[{distance:137,path:"0"},{distance:100,path:"1"},{distance:63,path:"2"},{distance:2,path:"3"},{distance:26,path:"3"}],[{distance:1,path:"3"}],[{distance:0,path:"3"}]],["?","?","?","?","?","?","?","?",[{distance:33,path:"0"},{distance:144,path:"1"},{distance:107,path:"2"},{distance:70,path:"3"}],"?","?","?","?","?","?",[{distance:150,path:"0"}],"?","?","?","?","?",[{distance:118,path:"0"},{distance:81,path:"1"},{distance:44,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:34,path:"0"},{distance:145,path:"1"},{distance:108,path:"2"},{distance:71,path:"3"}],"?","?","?","?","?","?",[{distance:151,path:"0"}],"?","?","?","?","?",[{distance:117,path:"0"},{distance:80,path:"1"},{distance:43,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:35,path:"0"},{distance:146,path:"1"},{distance:109,path:"2"},{distance:72,path:"3"}],"?","?","?","?","?","?",[{distance:152,path:"0"}],"?","?","?","?","?",[{distance:116,path:"0"},{distance:79,path:"1"},{distance:42,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:36,path:"0"},{distance:147,path:"1"},{distance:110,path:"2"},{distance:73,path:"3"}],"?","?","?","?","?","?",[{distance:153,path:"0"}],"?","?","?","?","?",[{distance:115,path:"0"},{distance:78,path:"1"},{distance:41,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:37,path:"0"},{distance:148,path:"1"},{distance:111,path:"2"},{distance:74,path:"3"}],"?","?","?","?","?","?",[{distance:154,path:"0"}],"?","?","?","?","?",[{distance:114,path:"0"},{distance:77,path:"1"},{distance:40,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:38,path:"0"},{distance:149,path:"1"},{distance:112,path:"2"},{distance:75,path:"3"}],[{distance:150,path:"1"}],[{distance:151,path:"1"}],[{distance:152,path:"1"}],[{distance:153,path:"1"}],[{distance:154,path:"1"}],[{distance:155,path:"1"}],"?",[{distance:155,path:"3"}],[{distance:154,path:"3"}],[{distance:153,path:"3"}],[{distance:152,path:"3"}],[{distance:151,path:"3"}],[{distance:113,path:"0"},{distance:76,path:"1"},{distance:39,path:"2"},{distance:150,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:39,path:"0"},{distance:113,path:"2"},{distance:76,path:"3"}],"?","?","?","?","?","?",[{distance:156,path:"2"}],"?","?","?","?","?",[{distance:112,path:"0"},{distance:75,path:"1"},{distance:38,path:"2"},{distance:149,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:40,path:"0"},{distance:114,path:"2"},{distance:77,path:"3"}],"?","?","?","?","?","?",[{distance:155,path:"2"}],"?","?","?","?","?",[{distance:111,path:"0"},{distance:74,path:"1"},{distance:37,path:"2"},{distance:148,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:41,path:"0"},{distance:115,path:"2"},{distance:78,path:"3"}],"?","?","?","?","?","?",[{distance:154,path:"2"}],"?","?","?","?","?",[{distance:110,path:"0"},{distance:73,path:"1"},{distance:36,path:"2"},{distance:147,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:42,path:"0"},{distance:116,path:"2"},{distance:79,path:"3"}],"?","?","?","?","?","?",[{distance:153,path:"2"}],"?","?","?","?","?",[{distance:109,path:"0"},{distance:72,path:"1"},{distance:35,path:"2"},{distance:146,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:43,path:"0"},{distance:117,path:"2"},{distance:80,path:"3"}],"?","?","?","?","?","?",[{distance:152,path:"2"}],"?","?","?","?","?",[{distance:108,path:"0"},{distance:71,path:"1"},{distance:34,path:"2"},{distance:145,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:44,path:"0"},{distance:118,path:"2"},{distance:81,path:"3"}],"?","?","?","?","?","?",[{distance:151,path:"2"}],"?","?","?","?","?",[{distance:107,path:"0"},{distance:70,path:"1"},{distance:33,path:"2"},{distance:144,path:"3"}],"?","?","?","?","?","?","?","?"],[[{distance:0,path:"1"}],[{distance:1,path:"1"}],[{distance:63,path:"0"},{distance:2,path:"1"},{distance:26,path:"1"},{distance:137,path:"2"},{distance:100,path:"3"}],[{distance:64,path:"0"},{distance:3,path:"1"},{distance:27,path:"1"},{distance:138,path:"2"},{distance:101,path:"3"}],[{distance:65,path:"0"},{distance:4,path:"1"},{distance:28,path:"1"},{distance:139,path:"2"},{distance:102,path:"3"}],[{distance:66,path:"0"},{distance:5,path:"1"},{distance:29,path:"1"},{distance:140,path:"2"},{distance:103,path:"3"}],[{distance:67,path:"0"},{distance:6,path:"1"},{distance:30,path:"1"},{distance:141,path:"2"},{distance:104,path:"3"}],[{distance:68,path:"0"},{distance:7,path:"1"},{distance:31,path:"1"},{distance:142,path:"2"},{distance:105,path:"3"}],[{distance:45,path:"0"},{distance:69,path:"0"},{distance:8,path:"1"},{distance:32,path:"1"},{distance:119,path:"2"},{distance:143,path:"2"},{distance:82,path:"3"},{distance:106,path:"3"}],[{distance:70,path:"0"},{distance:33,path:"1"},{distance:144,path:"2"},{distance:107,path:"3"}],[{distance:71,path:"0"},{distance:34,path:"1"},{distance:145,path:"2"},{distance:108,path:"3"}],[{distance:72,path:"0"},{distance:35,path:"1"},{distance:146,path:"2"},{distance:109,path:"3"}],[{distance:73,path:"0"},{distance:36,path:"1"},{distance:147,path:"2"},{distance:110,path:"3"}],[{distance:74,path:"0"},{distance:37,path:"1"},{distance:148,path:"2"},{distance:111,path:"3"}],[{distance:75,path:"0"},{distance:38,path:"1"},{distance:149,path:"2"},{distance:112,path:"3"}],[{distance:76,path:"0"},{distance:39,path:"1"},{distance:150,path:"2"},{distance:113,path:"3"}],[{distance:77,path:"0"},{distance:40,path:"1"},{distance:114,path:"3"}],[{distance:78,path:"0"},{distance:41,path:"1"},{distance:115,path:"3"}],[{distance:79,path:"0"},{distance:42,path:"1"},{distance:116,path:"3"}],[{distance:80,path:"0"},{distance:43,path:"1"},{distance:117,path:"3"}],[{distance:81,path:"0"},{distance:44,path:"1"},{distance:118,path:"3"}],[{distance:82,path:"0"},{distance:106,path:"0"},{distance:45,path:"1"},{distance:69,path:"1"},{distance:8,path:"2"},{distance:32,path:"2"},{distance:119,path:"3"},{distance:143,path:"3"}],[{distance:83,path:"0"},{distance:46,path:"1"},{distance:9,path:"2"},{distance:120,path:"3"}],[{distance:84,path:"0"},{distance:47,path:"1"},{distance:10,path:"2"},{distance:121,path:"3"}],[{distance:85,path:"0"},{distance:48,path:"1"},{distance:11,path:"2"},{distance:122,path:"3"}],[{distance:86,path:"0"},{distance:49,path:"1"},{distance:12,path:"2"},{distance:123,path:"3"}],[{distance:87,path:"0"},{distance:50,path:"1"},{distance:13,path:"2"},{distance:124,path:"3"}],[{distance:88,path:"0"},{distance:51,path:"1"},{distance:14,path:"2"},{distance:125,path:"3"}],"?","?"],["?","?",[{distance:62,path:"0"},{distance:25,path:"1"},{distance:136,path:"2"},{distance:99,path:"3"}],"?","?","?","?","?",[{distance:46,path:"0"},{distance:9,path:"1"},{distance:120,path:"2"},{distance:83,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:105,path:"0"},{distance:68,path:"1"},{distance:7,path:"2"},{distance:31,path:"2"},{distance:142,path:"3"}],"?","?","?","?","?",[{distance:89,path:"0"},{distance:52,path:"1"},{distance:15,path:"2"},{distance:126,path:"3"}],"?","?"],["?","?",[{distance:61,path:"0"},{distance:24,path:"1"},{distance:135,path:"2"},{distance:98,path:"3"}],"?","?","?","?","?",[{distance:47,path:"0"},{distance:10,path:"1"},{distance:121,path:"2"},{distance:84,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:104,path:"0"},{distance:67,path:"1"},{distance:6,path:"2"},{distance:30,path:"2"},{distance:141,path:"3"}],"?","?","?","?","?",[{distance:90,path:"0"},{distance:53,path:"1"},{distance:16,path:"2"},{distance:127,path:"3"}],"?","?"],["?","?",[{distance:60,path:"0"},{distance:23,path:"1"},{distance:134,path:"2"},{distance:97,path:"3"}],"?","?","?","?","?",[{distance:48,path:"0"},{distance:11,path:"1"},{distance:122,path:"2"},{distance:85,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:103,path:"0"},{distance:66,path:"1"},{distance:5,path:"2"},{distance:29,path:"2"},{distance:140,path:"3"}],"?","?","?","?","?",[{distance:91,path:"0"},{distance:54,path:"1"},{distance:17,path:"2"},{distance:128,path:"3"}],"?","?"],["?","?",[{distance:59,path:"0"},{distance:22,path:"1"},{distance:133,path:"2"},{distance:96,path:"3"}],"?","?","?","?","?",[{distance:49,path:"0"},{distance:12,path:"1"},{distance:123,path:"2"},{distance:86,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:102,path:"0"},{distance:65,path:"1"},{distance:4,path:"2"},{distance:28,path:"2"},{distance:139,path:"3"}],"?","?","?","?","?",[{distance:92,path:"0"},{distance:55,path:"1"},{distance:18,path:"2"},{distance:129,path:"3"}],"?","?"],["?","?",[{distance:58,path:"0"},{distance:21,path:"1"},{distance:132,path:"2"},{distance:95,path:"3"}],"?","?","?","?","?",[{distance:50,path:"0"},{distance:13,path:"1"},{distance:124,path:"2"},{distance:87,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:101,path:"0"},{distance:64,path:"1"},{distance:3,path:"2"},{distance:27,path:"2"},{distance:138,path:"3"}],"?","?","?","?","?",[{distance:93,path:"0"},{distance:56,path:"1"},{distance:19,path:"2"},{distance:130,path:"3"}],"?","?"],["?","?",[{distance:57,path:"0"},{distance:20,path:"1"},{distance:131,path:"2"},{distance:94,path:"3"}],[{distance:56,path:"0"},{distance:19,path:"1"},{distance:130,path:"2"},{distance:93,path:"3"}],[{distance:55,path:"0"},{distance:18,path:"1"},{distance:129,path:"2"},{distance:92,path:"3"}],[{distance:54,path:"0"},{distance:17,path:"1"},{distance:128,path:"2"},{distance:91,path:"3"}],[{distance:53,path:"0"},{distance:16,path:"1"},{distance:127,path:"2"},{distance:90,path:"3"}],[{distance:52,path:"0"},{distance:15,path:"1"},{distance:126,path:"2"},{distance:89,path:"3"}],[{distance:51,path:"0"},{distance:14,path:"1"},{distance:125,path:"2"},{distance:88,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:100,path:"0"},{distance:63,path:"1"},{distance:2,path:"2"},{distance:26,path:"2"},{distance:137,path:"3"}],[{distance:99,path:"0"},{distance:62,path:"1"},{distance:25,path:"2"},{distance:136,path:"3"}],[{distance:98,path:"0"},{distance:61,path:"1"},{distance:24,path:"2"},{distance:135,path:"3"}],[{distance:97,path:"0"},{distance:60,path:"1"},{distance:23,path:"2"},{distance:134,path:"3"}],[{distance:96,path:"0"},{distance:59,path:"1"},{distance:22,path:"2"},{distance:133,path:"3"}],[{distance:95,path:"0"},{distance:58,path:"1"},{distance:21,path:"2"},{distance:132,path:"3"}],[{distance:94,path:"0"},{distance:57,path:"1"},{distance:20,path:"2"},{distance:131,path:"3"}],"?","?"],["?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?",[{distance:1,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?",[{distance:0,path:"2"}],"?","?","?","?","?","?","?","?"]],R=r=>{let a=1;return r>2&&(a+=(r-2)*.1),r>40&&(a+=(r-40)*.1),Math.min(a,10)},Ct=r=>x(r)?Math.floor(1e3*(r/10)):10+Math.floor(r/1.25);var v,E,q,S,D;class At{constructor(){w(this,v,10);w(this,E,100);w(this,q,0);h(this,"debug",!1);h(this,"canvas");h(this,"ctx");h(this,"squareSize",50);h(this,"gridWidth",25);h(this,"gridHeight",25);h(this,"level");h(this,"mouseHandler");h(this,"hoveredCell",null);h(this,"images",{});h(this,"tempCounter",-1);h(this,"projectiles",[]);w(this,S,null);h(this,"selectedTower",null);w(this,D,!1);h(this,"gameSpeed",1e3);h(this,"backgroundImage",null);h(this,"completedWaves",{});h(this,"damageLog",{});this.canvas=document.createElement("canvas");const a=this.canvas.getContext("2d");if(!a)throw new Error("2d context not supported");this.ctx=a,Math.random()>.5?(this.gridHeight=30,this.gridWidth=30,this.level=new W({game:this,endPositions:[{col:14,row:15}],startPositions:[{col:8,row:0},{col:21,row:0},{col:29,row:21},{col:8,row:29}],maxLength:200,maxRepeatSquares:1,minLength:100,map:Z})):Math.random()>.5?(this.gridHeight=20,this.gridWidth=20,this.level=new W({game:this,endPositions:[{col:8,row:10}],startPositions:[{col:0,row:1}],maxLength:200,maxRepeatSquares:1,minLength:100,map:St})):this.level=new W({game:this,endPositions:[{col:Math.floor(Math.random()*this.gridHeight/2),row:Math.floor(Math.random()*this.gridWidth/2)}],startPositions:[{col:Math.floor((Math.random()+.5)*this.gridHeight/2),row:Math.floor((Math.random()+.5)*this.gridWidth/2)}],maxLength:250,maxRepeatSquares:3,minLength:100}),f(this,v,10*this.level.startPositions.length),this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,document.body.appendChild(this.canvas),this.mouseHandler=new vt(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0,this.money=1e6,this.level.wave=99,window.getMonsterHealth=O,window.getMonsterSpeed=R,window.getNumberOfMonstersPerWave=L,window.isBossWave=x),bt(this)}canStartWave(){return g(this,v)>0&&(this.tempCounter===L(this.level.wave)||this.tempCounter===-1)}startWave(){this.canStartWave()&&(this.level.wave++,this.tempCounter=0,console.log(`Starting ${x(this.level.wave)?"boss wave":"wave"} ${this.level.wave}. ${L(this.level.wave)} monsters with ${O(this.level.wave)} health and ${R(this.level.wave)} speed`),this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<L(this.level.wave)&&(this.level.startPositions.forEach((a,t)=>{this.spawnMonster(`${t}`)}),this.tempCounter++,this.spawnMonsters())},this.gameSpeed/2/R(this.level.wave))}spawnMonster(a){const t=x(this.level.wave)?Pt:k;let i;this.level.wave<=10?i="plant":this.level.wave<=20?i="skeleton":this.level.wave<=30?i="orcWarrior":this.level.wave<=40?i="fireSpirit":i=K[Math.floor(Math.random()*K.length)],this.level.monsters.push(new t({game:this,health:O(this.level.wave),speed:R(this.level.wave),damage:x(this.level.wave)?5:1,reward:Ct(this.level.wave),type:i,path:a})),G(this.level.monsters.length)}loadImages(){zt.forEach(a=>{const t=new Image;t.src=`./assets/${a}.png`,this.images[a]=t})}update(){var i;if(g(this,D))return;const a=this.level.monsters.filter(s=>s.distance>=this.level.mapMatrix.totalDistance),t=this.level.monsters.filter(s=>!s.isAlive());t.forEach(s=>{this.money+=s.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(s=>s.isAlive()&&s.distance<this.level.mapMatrix.totalDistance).sort((s,n)=>n.distance-s.distance),a.forEach(s=>{console.log(`Monster reached the end, -${s.damage} health`),this.health-=s.damage}),this.level.monsters.forEach(s=>{s.update()}),this.level.towers.forEach(s=>{s.update()}),this.projectiles.forEach(s=>{s.update()}),g(this,v)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(t.length>0||a.length>0)&&G(this.level.monsters.length),this.canStartWave()&&this.level.monsters.length===0&&this.completedWaves[this.level.wave]!==!0&&(this.completedWaves[this.level.wave]=!0,console.log(`Wave ${this.level.wave} completed!`),console.log("*** DAMAGE LOG ***"),Object.keys(this.damageLog).forEach(n=>{console.log(`${n}: ${Math.round(this.damageLog[n]).toLocaleString()}`)}),(i=document.getElementById("automode"))!=null&&i.checked&&this.startWave())}render(){try{this.drawGrid(),this.level.monsters.forEach(a=>{a.render()}),this.level.towers.forEach(a=>{a.render()}),this.projectiles.forEach(a=>{a.render()}),g(this,v)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore()),g(this,S)&&this.hoveredCell&&(this.ctx.save(),this.ctx.globalAlpha=.25,this.ctx.beginPath(),this.ctx.arc(this.hoveredCell.col*this.squareSize+this.squareSize/2,this.hoveredCell.row*this.squareSize+this.squareSize/2,g(this,S).range*this.squareSize,0,2*Math.PI),this.ctx.fillStyle="purple",this.ctx.globalAlpha=.5,g(this,S).gridPosition=this.hoveredCell,g(this,S).render(),this.ctx.fill(),this.ctx.restore())}catch(a){console.error(a),this.debug&&alert(`Error rendering game: ${a}`)}}drawGrid(){if(!this.backgroundImage){const a=document.createElement("canvas");a.width=this.canvas.width,a.height=this.canvas.height;const t=a.getContext("2d");if(!t)throw new Error("2d context not supported");t.clearRect(0,0,a.width,a.height);const{matrix:i}=this.level.mapMatrix;Object.keys(i).forEach(s=>{const n=Number(s);Object.keys(i[n]).forEach(c=>{const o=Number(c),d=i[n][o];t.save(),typeof d=="string"?d===T?t.fillStyle="blue":d===b?t.fillStyle="rgba(255, 0, 0, 0.5)":t.fillStyle="green":Array.isArray(d)&&d.some(p=>p.distance===0)?t.fillStyle="blue":Array.isArray(d)&&d.length>0&&(t.fillStyle="rgb(200, 200, 200)"),t.fillRect(n*this.squareSize,o*this.squareSize,this.squareSize,this.squareSize),this.debug&&(t.save(),t.fillStyle="black",t.font="10px Arial",Array.isArray(d)&&d.length>0?t.fillText(`${d.map(p=>p.path+"-"+p.distance).join(", ")}`,n*this.squareSize+5,o*this.squareSize+15):d===T?t.fillText(T,n*this.squareSize+5,o*this.squareSize+15):d===b&&t.fillText(b,n*this.squareSize+5,o*this.squareSize+15),t.font="10px Arial",t.fillText(`${n},${o}`,n*this.squareSize+20,o*this.squareSize+40),t.restore()),t.strokeStyle="lightgray",t.strokeRect(n*this.squareSize,o*this.squareSize,this.squareSize,this.squareSize),t.restore()})}),this.backgroundImage=a}this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.backgroundImage,0,0),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(a){return{x:a.col*this.squareSize+this.squareSize/2,y:a.row*this.squareSize+this.squareSize/2}}upgradeTower(a){switch(a){case"damage":console.log("TODO: Implement damage upgrade");break;case"range":console.log("TODO: Implement range upgrade");break;case"speed":console.log("TODO: Implement speed upgrade");break}}get health(){return g(this,v)}set health(a){f(this,v,a),yt(g(this,v))}get money(){return g(this,E)}set money(a){f(this,E,a),Tt(g(this,E))}get killCount(){return g(this,q)}set killCount(a){f(this,q,a),xt(g(this,q))}get newTower(){var a;return((a=g(this,S))==null?void 0:a.type)||null}set newTower(a){f(this,S,a?new Q[a](this,this.hoveredCell,"basic"):null)}get paused(){return g(this,D)}set paused(a){const t=Date.now();this.level.towers.forEach(i=>{i.lastAttackTime=t}),this.level.monsters.forEach(i=>{i.lastUpdateTime=t}),this.projectiles.forEach(i=>{i.lastMoveTime=t}),f(this,D,a)}}v=new WeakMap,E=new WeakMap,q=new WeakMap,S=new WeakMap,D=new WeakMap;class Et{constructor(a){h(this,"mousePosition");h(this,"mapBuilder");h(this,"pressedKeys",[]);this.mousePosition={x:0,y:0},this.mapBuilder=a,this.init()}getCellAtMousePosition(){const{x:a,y:t}=this.mousePosition,{squareSize:i}=this.mapBuilder,s=Math.floor(a/i);return{row:Math.floor(t/i),col:s}}init(){this.mapBuilder.canvas.addEventListener("mousemove",a=>{const t=this.mapBuilder.canvas.getBoundingClientRect();this.mousePosition={x:a.clientX-t.left,y:a.clientY-t.top},this.mapBuilder.hoveredCell=this.getCellAtMousePosition()}),this.mapBuilder.canvas.addEventListener("click",()=>{this.handleClick()}),this.mapBuilder.canvas.addEventListener("contextmenu",a=>{a.preventDefault();const t=this.getCellAtMousePosition();this.mapBuilder.mapMatrix[t.col][t.row]="?"}),this.mapBuilder.canvas.addEventListener("wheel",a=>{a.deltaY<0?this.mapBuilder.currentDistance+=1:(this.mapBuilder.currentDistance-=1,this.mapBuilder.currentDistance<0&&(this.mapBuilder.currentDistance=0)),this.mapBuilder.canvas.width=this.mapBuilder.width*this.mapBuilder.squareSize,this.mapBuilder.canvas.height=this.mapBuilder.height*this.mapBuilder.squareSize,this.mapBuilder.render()}),document.addEventListener("keydown",a=>{this.pressedKeys.push(a.key),a.key==="s"&&this.pressedKeys.includes("Control")&&(a.preventDefault(),console.log(JSON.stringify(this.mapBuilder.mapMatrix)))}),document.addEventListener("keyup",a=>{this.pressedKeys=this.pressedKeys.filter(t=>t!==a.key)})}handleClick(){if(this.pressedKeys.includes("Shift")){this.mapBuilder.currentPath=Number(this.mapBuilder.currentPath)+1+"";return}if(this.pressedKeys.includes("Control")){this.mapBuilder.currentPath=Math.max(1,Number(this.mapBuilder.currentPath))-1+"";return}const a=this.getCellAtMousePosition(),t=this.mapBuilder.mapMatrix[a.col][a.row];typeof t=="string"?this.mapBuilder.mapMatrix[a.col][a.row]=[{distance:this.mapBuilder.currentDistance,path:this.mapBuilder.currentPath}]:t.push({distance:this.mapBuilder.currentDistance,path:this.mapBuilder.currentPath}),this.mapBuilder.currentDistance+=1}}class qt{constructor(a,t){h(this,"squareSize",32);h(this,"canvas");h(this,"ctx");h(this,"mouseHandler");h(this,"mapMatrix");h(this,"hoveredCell",null);h(this,"debug",!0);h(this,"width");h(this,"height");h(this,"currentPath","0");h(this,"currentDistance",0);this.width=a,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=a*this.squareSize,this.canvas.height=t*this.squareSize,this.ctx=this.canvas.getContext("2d"),this.mapMatrix={},this.initMapMatrix(),this.mouseHandler=new Et(this),document.body.appendChild(this.canvas)}render(){this.drawGrid()}initMapMatrix(){this.mapMatrix=Array.from({length:this.width},()=>Array(this.height).fill(e)),this.mapMatrix=Z}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),Object.keys(this.mapMatrix).forEach(i=>{const s=Number(i);Object.keys(this.mapMatrix[s]).forEach(n=>{const c=Number(n),o=this.mapMatrix[s][c];this.ctx.save(),typeof o=="string"?o===T?this.ctx.fillStyle="blue":o===b?this.ctx.fillStyle="rgba(255, 0, 0, 0.5)":o===e?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(o)&&o.some(d=>d.distance===0)?this.ctx.fillStyle="blue":Array.isArray(o)&&o.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(s*this.squareSize,c*this.squareSize,this.squareSize,this.squareSize),this.debug&&(this.ctx.save(),this.ctx.fillStyle="black",this.ctx.font="10px Arial",Array.isArray(o)&&o.length>0?this.ctx.fillText(`${o.map(d=>d.path+"-"+d.distance).join(", ")}`,s*this.squareSize+5,c*this.squareSize+15):o===T?this.ctx.fillText(T,s*this.squareSize+5,c*this.squareSize+15):o===b&&this.ctx.fillText(b,s*this.squareSize+5,c*this.squareSize+15),this.ctx.fillStyle="black",this.ctx.font="8px Arial",this.ctx.fillText(`${s},${c}`,s*this.squareSize+10,c*this.squareSize+25),this.ctx.restore()),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(s*this.squareSize,c*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.ctx.save(),this.ctx.strokeStyle="orange",this.ctx.lineWidth=3,this.ctx.beginPath();const a={};Object.keys(this.mapMatrix).forEach(i=>{const s=Number(i);Object.keys(this.mapMatrix[s]).forEach(n=>{const c=Number(n),o=this.mapMatrix[s][c];Array.isArray(o)&&o.forEach(d=>{d.path===this.currentPath&&(a[d.distance]={row:c,col:s})})})});let t=0;for(this.ctx.moveTo(a[t].col*this.squareSize+this.squareSize/2,a[t].row*this.squareSize+this.squareSize/2),t+=1;a[t];)this.ctx.lineTo(a[t].col*this.squareSize+this.squareSize/2,a[t].row*this.squareSize+this.squareSize/2),t+=1;this.ctx.stroke(),this.ctx.restore(),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.fillStyle="black",this.ctx.font="20px Arial",this.ctx.fillText(`${this.currentPath}-${this.currentDistance}`,this.hoveredCell.col*this.squareSize+5,this.hoveredCell.row*this.squareSize+20),this.ctx.restore())}}const Dt=()=>{var s,n;const r=Number((s=prompt("Enter the width of map (e.g. 15):"))==null?void 0:s.replace(/\D/g,"")),a=Number((n=prompt("Enter the height of map (e.g. 15):"))==null?void 0:n.replace(/\D/g,"")),t=new qt(r,a),i=async()=>{t.render(),requestAnimationFrame(i)};i()},Lt=new URLSearchParams(window.location.search).get("builder");if(Lt)Dt();else{const r=new At,a=async()=>{r.render(),requestAnimationFrame(a)},t=async()=>{r.update(),r.health>=0&&requestAnimationFrame(t)};a(),t()}
