var L=Object.defineProperty;var p=n=>{throw TypeError(n)};var q=(n,r,t)=>r in n?L(n,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[r]=t;var o=(n,r,t)=>q(n,typeof r!="symbol"?r+"":r,t),w=(n,r,t)=>r.has(n)||p("Cannot "+t);var x=(n,r,t)=>(w(n,r,"read from private field"),t?t.call(n):r.get(n)),v=(n,r,t)=>r.has(n)?p("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(n):r.set(n,t),P=(n,r,t,s)=>(w(n,r,"write to private field"),s?s.call(n,t):r.set(n,t),t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(e){if(e.ep)return;e.ep=!0;const i=t(e);fetch(e.href,i)}})();const m="?",C="start",f="end",y="tower";var d;class u{constructor(){v(this,d);P(this,d,Math.floor(Math.random()*1e7))}get id(){return x(this,d)}}d=new WeakMap;class M extends u{constructor(t,s){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");this.game=t,this.gridPosition=s}render(){const{squareSize:t}=this.game,{col:s,row:e}=this.gridPosition,i=s*t,a=e*t,l=this.game.images[`tower-${this.type}`];this.game.ctx.drawImage(l,i,a,t,t)}update(){this.attack()}getTargetsInRange(){const{monsters:t}=this.game.level,{col:s,row:e}=this.gridPosition;return t.find(i=>{if(!i.gridPosition||!i.isAlive())return!1;const a=i.gridPosition.col,l=i.gridPosition.row,h=Math.sqrt(Math.pow(a-s,2)+Math.pow(l-e,2));return Math.abs(h)<=this.range})}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const e=this.getTargetsInRange();e&&(e.takeDamage(this.damage),this.lastAttackTime=t)}}}class E extends M{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}}class z{constructor(r){o(this,"game");o(this,"mousePosition");this.game=r,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:r,y:t}=this.mousePosition,{squareSize:s}=this.game,e=Math.floor(r/s);return{row:Math.floor(t/s),col:e}}init(){this.game.canvas.addEventListener("mousemove",r=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:r.clientX-t.left,y:r.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()})}handleClick(){const r=this.getCellAtMousePosition();if(this.game.level.mapMatrix.matrix[r.col][r.row]===m)this.game.level.mapMatrix.matrix[r.col][r.row]=y,this.game.level.towers.push(new M(this.game,r));else if(this.game.level.mapMatrix.matrix[r.col][r.row]===y){let t=this.game.level.towers.find(s=>s.gridPosition.col===r.col&&s.gridPosition.row===r.row);t&&t.type==="basic"&&(this.game.level.towers=this.game.level.towers.filter(s=>s.id!==t.id),this.game.level.towers.push(new E(this.game,r)),console.log(this.game.level.towers))}}}class T extends u{constructor(t){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=t,this.matrix={},this.generateMapMatrix()}initMatrix(){const{gridWidth:t,gridHeight:s}=this.level.game;this.matrix=Array.from({length:t},()=>Array(s).fill(m)),this.level.startPositions.forEach(e=>{this.matrix[e.col][e.row]=[0]}),this.level.endPositions.forEach(e=>{this.matrix[e.col][e.row]=f})}generateMapMatrix(){this.level.startPositions.forEach(t=>{let s=0;do this.initMatrix(),this.totalDistance=this.buildPath(t.col,t.row,1),s++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&s<100);s>=100?console.log("Failed to generate path"):console.log(`Generated path with length ${this.totalDistance} in ${s} attempts`)})}buildPath(t,s,e){const i=this.getNeighbors(t,s);if(i.some(({row:c,col:g})=>this.getCell(g,c)===f))return e;const a=i.filter(({col:c,row:g})=>this.canBePath(c,g,e));if(a.length===0)return-1;const l=a[Math.floor(Math.random()*a.length)],h=this.matrix[l.col][l.row];return Array.isArray(h)?h.push(e):this.matrix[l.col][l.row]=[e],this.buildPath(l.col,l.row,e+1)}getNeighbors(t,s){const e=[];return t>0&&e.push({col:t-1,row:s}),t<this.level.game.gridWidth-1&&e.push({col:t+1,row:s}),s>0&&e.push({col:t,row:s-1}),s<this.level.game.gridHeight-1&&e.push({col:t,row:s+1}),e}getCell(t,s){return this.matrix[t][s]}canBePath(t,s,e){const i=this.getCell(t,s);return!(i!==m&&Array.isArray(i)===!1||Array.isArray(i)&&i.some(l=>l>e-10)||this.getNeighbors(t,s).filter(({col:l,row:h})=>{const c=this.getCell(l,h);return Array.isArray(c)?!!c.some(g=>g>e-10):!1}).length>1||Array.isArray(i)&&i.length>=this.level.maxRepeatSquares)}getPathPosition(t){const s=Math.ceil(t);let e=s<0?this.level.startPositions[0]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(i=>{const a=Number(i);Object.keys(this.matrix[a]).forEach(l=>{const h=Number(l),c=this.matrix[a][h];if(Array.isArray(c)&&c.includes(s)){e={row:h,col:a};return}})}),e}}class k extends u{constructor(t,s,e,i,a,l){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);this.game=t,this.startPositions=s,this.endPositions=e,this.minLength=i,this.maxLength=a,this.maxRepeatSquares=l,this.mapMatrix=new T(this)}}class D extends u{constructor(t,s,e,i){super();o(this,"game");o(this,"health");o(this,"speed");o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastMoveTime",Date.now());o(this,"direction");this.game=t,this.health=s,this.speed=e,this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=i}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}move(){const t=Date.now(),e=(t-this.lastMoveTime)/1e3*this.speed,i=this.distance+e;Math.floor(i)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(i)),this.nextPosition&&i%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=i,this.lastMoveTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:s}=this.gridPosition,e=this.distance%1,{squareSize:i}=this.game,a=i/4;let l=s*i,h=t*i;return this.direction==="up"?(l+=i/2-a/2,h+=i-e*i):this.direction==="down"?(l+=i/2-a/2,h+=e*i):this.direction==="left"?(l+=i-e*i,h+=i/2-a/2):this.direction==="right"?(l+=e*i,h+=i/2-a/2):this.direction==="none"&&(l+=i/2-a/2,h+=i/2-a/2),{x:l,y:h}}render(){const t=this.getCanvasPosition();if(!t)return;const{squareSize:s,ctx:e}=this.game,i=s/3,{x:a,y:l}=t;e.fillStyle="black",e.fillRect(a,l,i,i),e.fillStyle="red",e.fillRect(a,l-10,i,5),e.fillStyle="green",e.fillRect(a,l-10,i*this.health/100,5)}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}class R{constructor(){o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",0);this.canvas=document.createElement("canvas");const r=this.canvas.getContext("2d");if(!r)throw new Error("2d context not supported");this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,this.ctx=r,this.level=new k(this,[{col:0,row:0}],[{col:20,row:20}],75,150,2),this.spawnMonsters(),document.body.appendChild(this.canvas),this.mouseHandler=new z(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0)}spawnMonsters(){setTimeout(()=>{this.tempCounter<25&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500)}spawnMonster(){this.level.monsters.push(new D(this,100,1,10))}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire"].forEach(t=>{const s=new Image;s.src=`./assets/${t}.png`,this.images[t]=s})}update(){const r=this.level.monsters.filter(t=>t.distance>=this.level.mapMatrix.totalDistance);this.level.monsters=this.level.monsters.filter(t=>t.isAlive()&&t.distance<this.level.mapMatrix.totalDistance),r.forEach(t=>{console.log("Monster reached the end")}),this.level.monsters.forEach(t=>{t.move()}),this.level.towers.forEach(t=>{t.update()})}render(){this.drawGrid(),this.level.monsters.forEach(r=>{r.render()}),this.level.towers.forEach(r=>{r.render()})}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:r}=this.level.mapMatrix;Object.keys(r).forEach(t=>{const s=Number(t);Object.keys(r[s]).forEach(e=>{const i=Number(e),a=r[s][i];this.ctx.save(),typeof a=="string"?a===C?this.ctx.fillStyle="blue":a===f?this.ctx.fillStyle="red":a===m?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(s*this.squareSize,i*this.squareSize,this.squareSize,this.squareSize),this.debug&&Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.ctx.fillText(a.toString(),s*this.squareSize+5,i*this.squareSize+15)),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(s*this.squareSize,i*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}}const S=new R,A=async()=>{S.render(),requestAnimationFrame(A)},b=async()=>{S.update(),setTimeout(b,1e3/60)};A();b();
