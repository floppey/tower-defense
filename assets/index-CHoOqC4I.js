var B=Object.defineProperty;var L=n=>{throw TypeError(n)};var N=(n,s,e)=>s in n?B(n,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[s]=e;var o=(n,s,e)=>N(n,typeof s!="symbol"?s+"":s,e),z=(n,s,e)=>s.has(n)||L("Cannot "+e);var c=(n,s,e)=>(z(n,s,"read from private field"),e?e.call(n):s.get(n)),g=(n,s,e)=>s.has(n)?L("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(n):s.set(n,e),u=(n,s,e,a)=>(z(n,s,"write to private field"),a?a.call(n,e):s.set(n,e),e);(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&a(h)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();const t="?",R="start",A="end",D="tower",G=(n,s)=>Math.sqrt(Math.pow(n.x-s.x,2)+Math.pow(n.y-s.y,2));var b;class C{constructor(){g(this,b);u(this,b,Math.floor(Math.random()*1e7))}get id(){return c(this,b)}}b=new WeakMap;var T;class k extends C{constructor({game:e,health:a,speed:i,damage:r,reward:h}){super();o(this,"game");o(this,"health");o(this,"maxHealth");o(this,"speed");g(this,T);o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastMoveTime",Date.now());o(this,"direction");o(this,"reward");o(this,"debuffs",[]);this.game=e,this.health=a,this.maxHealth=a,this.speed=i,u(this,T,i),this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=r,this.reward=h}getDirection(e){return this.gridPosition?e.col>this.gridPosition.col?"right":e.col<this.gridPosition.col?"left":e.row>this.gridPosition.row?"down":e.row<this.gridPosition.row?"up":"none":"none"}addDebuff(e){this.debuffs.push({...e,duration:Date.now()+e.duration})}applyDebuffs(){const e=Date.now();let a=c(this,T);this.debuffs=this.debuffs.filter(i=>!(e>i.duration)),this.debuffs.forEach(i=>{i.type==="freeze"&&(a/=2)}),this.speed=Math.max(a,.1)}update(){this.applyDebuffs();const e=Date.now(),i=(e-this.lastMoveTime)/1e3*this.speed,r=this.distance+i;Math.floor(r)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(r)),this.nextPosition&&r%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=r,this.lastMoveTime=e}getCanvasPosition(){if(!this.gridPosition)return null;const{row:e,col:a}=this.gridPosition,i=this.distance%1,{squareSize:r}=this.game,h=r/4;let l=a*r,d=e*r;return this.direction==="up"?(l+=r/2-h/2,d+=r-i*r):this.direction==="down"?(l+=r/2-h/2,d+=i*r):this.direction==="left"?(l+=r-i*r,d+=r/2-h/2):this.direction==="right"?(l+=i*r,d+=r/2-h/2):this.direction==="none"&&(l+=r/2-h/2,d+=r/2-h/2),{x:l,y:d}}render(){const e=this.getCanvasPosition();if(!e)return;const{squareSize:a,ctx:i}=this.game,r=a/3,{x:h,y:l}=e;i.fillStyle="black",i.fillRect(h,l,r,r),i.fillStyle="red",i.fillRect(h,l-10,r,5),i.fillStyle="green",i.fillRect(h,l-10,r*this.health/this.maxHealth,5)}takeDamage(e){this.health-=e,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}T=new WeakMap;class E extends C{constructor({game:e,speed:a,damage:i,target:r,position:h}){super();o(this,"game");o(this,"speed");o(this,"damage");o(this,"target");o(this,"position");o(this,"lastMoveTime");o(this,"angle");o(this,"height",10);o(this,"width",10);o(this,"images",["arrow"]);o(this,"splash",null);o(this,"debuffs",null);this.game=e,this.speed=a,this.damage=i,this.target=r,this.position=h,this.angle=0,this.lastMoveTime=Date.now()}impact(){var a;const e=this.target;e instanceof k&&(e.takeDamage(this.damage),(a=this.debuffs)==null||a.forEach(i=>{e.addDebuff(i)})),this.splash&&this.game.level.monsters.forEach(i=>{var l;if(e instanceof k&&i.id===e.id)return;const r=i.getCanvasPosition();if(!r)return;G(this.position,r)<=this.splash*this.game.squareSize&&(i.takeDamage(this.damage),(l=this.debuffs)==null||l.forEach(d=>{i.addDebuff(d)}))}),this.game.projectiles=this.game.projectiles.filter(i=>i.id!==this.id)}getImage(){const e=this.images.length,a=Math.floor(Date.now()/1e3%e),i=this.images[a];return this.game.images[i]}update(){this.speed=this.speed*1.05;const e=Date.now(),i=(e-this.lastMoveTime)/1e3*this.speed;let r;this.target instanceof k?r=this.target.getCanvasPosition():r=this.game.convertGridPositionToCoordinates(this.target);const h=Math.sqrt(Math.pow(r.x-this.position.x,2)+Math.pow(r.y-this.position.y,2));if(i>h){this.position=r,this.lastMoveTime=e,this.impact();return}const l=Math.atan2(r.y-this.position.y,r.x-this.position.x),d=Math.cos(l)*i,m=Math.sin(l)*i;this.angle=l+Math.PI,this.position={x:this.position.x+d,y:this.position.y+m},this.lastMoveTime=e}render(){const{ctx:e}=this.game;e.save(),e.translate(this.position.x,this.position.y),e.rotate(this.angle),e.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height),e.restore()}}class H extends E{constructor({game:e,target:a,position:i,damage:r,speed:h}){super({game:e,speed:h,damage:r,target:a,position:i});o(this,"height",10);o(this,"width",25)}}class P extends C{constructor(e,a){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");this.game=e,this.gridPosition=a}render(){const{squareSize:e}=this.game,{col:a,row:i}=this.gridPosition,r=a*e,h=i*e,l=this.game.images[`tower-${this.type}`];this.game.ctx.drawImage(l,r,h,e,e)}update(){this.attack()}getTargetsInRange(){const{monsters:e}=this.game.level,{col:a,row:i}=this.gridPosition;return e.find(r=>{if(!r.gridPosition||!r.isAlive())return!1;const h=r.gridPosition.col,l=r.gridPosition.row,d=Math.sqrt(Math.pow(h-a,2)+Math.pow(l-i,2));return Math.abs(d)<=this.range})}canAttack(){return Date.now()-this.lastAttackTime>1e3/this.attackSpeed}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a&&(this.game.projectiles.push(new H({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:250})),this.lastAttackTime=e)}}}class U extends P{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a&&(this.game.projectiles.push(new H({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:500})),this.lastAttackTime=e)}}}class $ extends E{constructor({game:e,target:a,position:i,damage:r}){super({game:e,speed:100,damage:r,target:a,position:i});o(this,"height",10);o(this,"width",25);o(this,"splash",1.5);o(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class F extends P{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",125);o(this,"attackSpeed",.75);o(this,"type","cannon")}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a!=null&&a.gridPosition&&(this.game.projectiles.push(new $({game:this.game,target:a.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class _ extends E{constructor({game:e,target:a,position:i,damage:r}){super({game:e,speed:500,damage:r,target:a,position:i});o(this,"height",10);o(this,"width",25);o(this,"splash",.75);o(this,"images",["fire-1","fire-2"])}}class K extends P{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",500);o(this,"attackSpeed",2.5);o(this,"type","fire")}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a!=null&&a.gridPosition&&(this.game.projectiles.push(new _({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}const X={freeze:"freeze"};class Y extends E{constructor({game:e,target:a,position:i,damage:r}){super({game:e,speed:333,damage:r,target:a,position:i});o(this,"height",25);o(this,"width",25);o(this,"splash",1);o(this,"images",["frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"]);o(this,"debuffs",[{type:X.freeze,duration:2e3}])}}class J extends P{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",50);o(this,"attackSpeed",1.5);o(this,"type","ice")}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a!=null&&a.gridPosition&&(this.game.projectiles.push(new Y({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class Q extends E{constructor({game:e,target:a,position:i,damage:r}){super({game:e,speed:800,damage:r,target:a,position:i});o(this,"height",20);o(this,"width",40);o(this,"images",["magic"])}}class V extends P{constructor(){super(...arguments);o(this,"range",10);o(this,"damage",500);o(this,"attackSpeed",2.5);o(this,"type","mage")}attack(){const e=Date.now();if(this.canAttack()){const a=this.getTargetsInRange();a!=null&&a.gridPosition&&(this.game.projectiles.push(new Q({game:this.game,target:a,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}const w={basic:50,arrow:100,cannon:200,fire:1e3,ice:500,mage:1500},Z={basic:"basic",arrow:"arrow",cannon:"cannon",fire:"fire",ice:"ice",mage:"mage"},W={basic:P,arrow:U,cannon:F,mage:V,ice:J,fire:K};class tt{constructor(s){o(this,"game");o(this,"mousePosition");this.game=s,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:s,y:e}=this.mousePosition,{squareSize:a}=this.game,i=Math.floor(s/a);return{row:Math.floor(e/a),col:i}}init(){this.game.canvas.addEventListener("mousemove",s=>{const e=this.game.canvas.getBoundingClientRect();this.mousePosition={x:s.clientX-e.left,y:s.clientY-e.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()}),this.game.canvas.addEventListener("contextmenu",s=>{this.handleContextMenu(s)})}handleClick(){const s=this.getCellAtMousePosition();this.game.newTower&&this.game.level.mapMatrix.matrix[s.col][s.row]===t&&this.game.money>=w[this.game.newTower]&&(this.game.level.mapMatrix.matrix[s.col][s.row]=D,this.game.level.towers.push(new W[this.game.newTower](this.game,s)),this.game.money-=w[this.game.newTower],this.game.money<w[this.game.newTower]&&(this.game.newTower=null))}handleContextMenu(s){s.preventDefault();const e=this.getCellAtMousePosition();if(this.game.newTower)this.game.newTower=null;else if(this.game.level.mapMatrix.matrix[e.col][e.row]===D){const a=this.game.level.towers.find(i=>i.gridPosition.col===e.col&&i.gridPosition.row===e.row);a&&(this.game.paused=!0,confirm(`Sell for ${w[a.type]/2} coins?`)&&(this.game.money+=w[a.type]/2,this.game.level.towers=this.game.level.towers.filter(i=>i.id!==a.id),this.game.level.mapMatrix.matrix[e.col][e.row]=t),this.game.paused=!1)}}}const et=n=>{const s=document.createElement("div");s.id="toolbar-top";const e=document.createElement("button");e.id="start-wave",e.innerHTML="Start Wave",e.addEventListener("click",()=>{n.startWave()}),s.innerHTML=`
    <div class="toolbar-item">
      <span>🪙: </span>
      <span id="money" class="money">${n.money.toLocaleString("en-US")}</span>
    </div>
    <div class="toolbar-item">
      <span>❤️: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>🌊: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>👿: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>💀: </span>
      <span id="kills">0</span>
    </div>
  `,s.appendChild(e);const a=document.createElement("label");a.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,s.appendChild(a),document.body.insertBefore(s,document.body.firstChild);const i=document.createElement("div");i.id="toolbar-bottom",Object.values(Z).forEach(h=>{const l=document.createElement("button");l.innerHTML=`
    <img src="assets/tower-${h}.png" alt="${h} tower" />
    <span>${h} tower - <span class="price">${w[h].toLocaleString("en-US")}🪙</span></span>
    `,l.addEventListener("click",()=>{n.newTower=h}),i.appendChild(l)}),document.body.appendChild(i);const r=document.createElement("div");r.id="info-panel",r.innerHTML=`
  <details>
  <summary>How to play</summary>
  <h2>Goal</h2>
  <p>Defend your base from waves of monsters by building towers. The monsters move from the blue square(s) to the red square(s)</p>
  <h2>Adding towers</h2>
  <p>
    Use the toolbar at the bottom to select a tower type. Click on an empty square on the map to add a tower.
  </p>
  <h2>Selling towers</h2>
  <p>
    Right-click on a tower to sell it for half the price.
  </p>
  <h2>Starting a wave</h2>
  <p>
    Click the "Start Wave" button to start a new wave of monsters.
  </p>
  <h2>Auto mode</h2>
  <p>
    When auto mode is enabled, the game will automatically start new waves when the previous wave is defeated.
  </p>
  
  </details>
  
  `,document.body.appendChild(r)},st=n=>{const s=document.getElementById("health");s&&(s.innerText=n.toLocaleString("en-US"))},it=n=>{const s=document.getElementById("kills");s&&(s.innerText=n.toLocaleString("en-US"))},at=n=>{const s=document.getElementById("money");s&&(s.innerText=n.toLocaleString("en-US"))},I=n=>{const s=document.getElementById("monsters");s&&(s.innerText=n.toLocaleString("en-US"))},ot=n=>{const s=document.getElementById("wave");s&&(s.innerText=n.toLocaleString("en-US"))},rt=[[t,R,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t],[t,[1],t,[68],[67],[66],[65],[64],[63],[62],[61],[60],[59],[58],[57],[56],[55],[53],[52],t],[t,[2],t,[69],t,t,t,t,t,t,t,t,t,t,t,t,t,t,[51],t],[t,[3],t,[70],t,[120],[119],[118],[117],[116],[115],[114],[113],[112],[111],[110],[109],t,[50],t],[t,[4],t,[71],t,[121],t,t,t,t,t,t,t,t,t,t,[108],t,[49],t],[t,[5],t,[72],t,[122],t,[156],[155],[154],[153],[152],[151],[150],[149],t,[107],t,[48],t],[t,[6],t,[73],t,[123],t,[157],t,t,t,t,t,t,[148],t,[106],t,[47],t],[t,[7],t,[74],t,[124],t,[158],t,[176],[175],[174],[173],t,[147],t,[105],t,[46],t],[t,[8],t,[75],t,[125],t,[159],t,[177],A,[183],[172],t,[146],t,[104],t,[45],t],[t,[9],t,[76],t,[126],t,[160],t,[178],[181],[182],[171],t,[145],t,[103],t,[44],t],[t,[10],t,[77],t,[127],t,[161],t,[179],[180],t,[170],t,[144],t,[102],t,[43],t],[t,[11],t,[78],t,[128],t,[162],t,t,t,t,[169],t,[143],t,[101],t,[42],t],[t,[12],t,[79],t,[129],t,[163],[164],[165],[166],[167],[168],t,[142],t,[100],t,[41],t],[t,[13],t,[80],t,[130],t,t,t,t,t,t,t,t,[141],t,[99],t,[40],t],[t,[14],t,[81],t,[131],[132],[133],[134],[135],[136],[137],[138],[139],[140],t,[98],t,[39],t],[t,[15],t,[82],t,t,t,t,t,t,t,t,t,t,t,t,[97],t,[38],t],[t,[16],t,[83],[84],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],t,[37],t],[t,[17],t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,[36],t],[t,[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],t],[t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t]];class nt extends C{constructor(e){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=e,this.matrix={},this.generateMapMatrix()}initMatrix(){const{gridWidth:e,gridHeight:a}=this.level.game;this.matrix=Array.from({length:e},()=>Array(a).fill(t)),this.level.startPositions.forEach(i=>{this.matrix[i.col][i.row]=[0]}),this.level.endPositions.forEach(i=>{this.matrix[i.col][i.row]=A})}generateMapMatrix(){Math.random()>.5?(this.level.startPositions=[{col:0,row:1}],this.level.endPositions=[{col:8,row:10}],this.totalDistance=183,this.matrix=rt):this.level.startPositions.forEach(e=>{let a=0;do this.initMatrix(),this.totalDistance=this.buildPath(e.col,e.row,1),a++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&a<100);a>=100&&console.log("Failed to generate path")})}buildPath(e,a,i){const r=this.getNeighbors(e,a);if(r.some(({row:m,col:S})=>this.getCell(S,m)===A))return i;const h=r.filter(({col:m,row:S})=>this.canBePath(m,S,i));if(h.length===0)return-1;const l=h[Math.floor(Math.random()*h.length)],d=this.matrix[l.col][l.row];return Array.isArray(d)?d.push(i):this.matrix[l.col][l.row]=[i],this.buildPath(l.col,l.row,i+1)}getNeighbors(e,a){const i=[];return e>0&&i.push({col:e-1,row:a}),e<this.level.game.gridWidth-1&&i.push({col:e+1,row:a}),a>0&&i.push({col:e,row:a-1}),a<this.level.game.gridHeight-1&&i.push({col:e,row:a+1}),i}getCell(e,a){return this.matrix[e][a]}canBePath(e,a,i){const r=this.getCell(e,a);return!(r!==t&&Array.isArray(r)===!1||Array.isArray(r)&&r.some(l=>l>i-10)||this.getNeighbors(e,a).filter(({col:l,row:d})=>{const m=this.getCell(l,d);return Array.isArray(m)?!!m.some(S=>S>i-10):!1}).length>1||Array.isArray(r)&&r.length>=this.level.maxRepeatSquares)}getPathPosition(e){const a=Math.ceil(e);let i=a<0?this.level.startPositions[Math.random()*this.level.startPositions.length]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(r=>{const h=Number(r);Object.keys(this.matrix[h]).forEach(l=>{const d=Number(l),m=this.matrix[h][d];if(Array.isArray(m)&&m.includes(a)){i={row:d,col:h};return}})}),i}}var v;class ht extends C{constructor(e,a,i,r,h,l){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);g(this,v,0);this.game=e,this.startPositions=a,this.endPositions=i,this.minLength=r,this.maxLength=h,this.maxRepeatSquares=l,this.mapMatrix=new nt(this)}get wave(){return c(this,v)}set wave(e){u(this,v,e),ot(c(this,v))}}v=new WeakMap;var f,x,y,p,M;class lt{constructor(){g(this,f,10);g(this,x,100);g(this,y,0);o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",-1);o(this,"projectiles",[]);g(this,p,null);g(this,M,!1);this.canvas=document.createElement("canvas");const s=this.canvas.getContext("2d");if(!s)throw new Error("2d context not supported");this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,this.ctx=s,this.level=new ht(this,[{col:Math.floor(Math.random()*this.gridWidth),row:Math.floor(Math.random()*this.gridHeight)}],[{col:Math.floor(Math.random()*this.gridWidth),row:Math.floor(Math.random()*this.gridHeight)}],75,150,2),document.body.appendChild(this.canvas),this.mouseHandler=new tt(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0),et(this)}getNumberOfMonstersPerWave(){return 20+(this.level.wave-1)*2}startWave(){c(this,f)<=0||this.tempCounter<this.getNumberOfMonstersPerWave()&&this.tempCounter!==-1||(this.level.wave++,this.tempCounter=0,this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500/this.getSpeed())}getSpeed(){let s=1;return this.level.wave>5&&(s+=(this.level.wave-5)*.2),this.level.wave>10&&(s+=(this.level.wave-10)*.2),this.level.wave>15&&(s+=(this.level.wave-15)*.2),this.level.wave>20&&(s+=(this.level.wave-20)*.2),s}getHealth(){let s=100;return this.level.wave>3&&(s+=(this.level.wave-3)*15),this.level.wave>5&&(s+=(this.level.wave-5)*10),this.level.wave>10&&(s+=(this.level.wave-10)*25),this.level.wave>15&&(s+=(this.level.wave-15)*50),this.level.wave>20&&(s+=(this.level.wave-20)*100),s}spawnMonster(){this.level.monsters.push(new k({game:this,health:this.getHealth(),speed:this.getSpeed(),damage:1,reward:10+Math.floor(this.level.wave/2)})),I(this.level.monsters.length)}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13","crystal"].forEach(e=>{const a=new Image;a.src=`./assets/${e}.png`,this.images[e]=a})}update(){var a;if(c(this,M))return;const s=this.level.monsters.filter(i=>i.distance>=this.level.mapMatrix.totalDistance),e=this.level.monsters.filter(i=>!i.isAlive());e.forEach(i=>{this.money+=i.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(i=>i.isAlive()&&i.distance<this.level.mapMatrix.totalDistance),s.forEach(i=>{console.log(`Monster reached the end, -${i.damage} health`),this.health-=i.damage}),this.level.monsters.forEach(i=>{i.update()}),this.level.towers.forEach(i=>{i.update()}),this.projectiles.forEach(i=>{i.update()}),c(this,f)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(e.length>0||s.length>0)&&I(this.level.monsters.length),this.level.monsters.length===0&&(console.log(`Wave ${this.level.wave} completed!`),(a=document.getElementById("automode"))!=null&&a.checked&&this.startWave())}render(){this.drawGrid(),this.level.monsters.forEach(s=>{s.render()}),this.level.towers.forEach(s=>{s.render()}),this.projectiles.forEach(s=>{s.render()}),c(this,f)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore()),c(this,p)&&(this.ctx.save(),this.ctx.globalAlpha=.25,this.ctx.beginPath(),this.ctx.arc(this.hoveredCell.col*this.squareSize+this.squareSize/2,this.hoveredCell.row*this.squareSize+this.squareSize/2,c(this,p).range*this.squareSize,0,2*Math.PI),this.ctx.fillStyle="purple",this.ctx.globalAlpha=.5,c(this,p).gridPosition=this.hoveredCell,c(this,p).render(),this.ctx.fill(),this.ctx.restore())}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:s}=this.level.mapMatrix;Object.keys(s).forEach(e=>{const a=Number(e);Object.keys(s[a]).forEach(i=>{const r=Number(i),h=s[a][r];this.ctx.save(),typeof h=="string"?h===R?this.ctx.fillStyle="blue":h===A?this.ctx.fillStyle="red":h===t?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(h)&&h.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(a*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.debug&&Array.isArray(h)&&h.length>0&&(this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.ctx.fillText(h.toString(),a*this.squareSize+5,r*this.squareSize+15)),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(a*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.level.startPositions.forEach(e=>{this.ctx.save(),this.ctx.fillStyle="blue",this.ctx.fillRect(e.col*this.squareSize,e.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(s){return{x:s.col*this.squareSize+this.squareSize/2,y:s.row*this.squareSize+this.squareSize/2}}get health(){return c(this,f)}set health(s){u(this,f,s),st(c(this,f))}get money(){return c(this,x)}set money(s){u(this,x,s),at(c(this,x))}get killCount(){return c(this,y)}set killCount(s){u(this,y,s),it(c(this,y))}get newTower(){var s;return((s=c(this,p))==null?void 0:s.type)||null}set newTower(s){u(this,p,s?new W[s](this,this.hoveredCell):null)}get paused(){return c(this,M)}set paused(s){const e=Date.now();this.level.towers.forEach(a=>{a.lastAttackTime=e}),this.level.monsters.forEach(a=>{a.lastMoveTime=e}),this.projectiles.forEach(a=>{a.lastMoveTime=e}),u(this,M,s)}}f=new WeakMap,x=new WeakMap,y=new WeakMap,p=new WeakMap,M=new WeakMap;const q=new lt,j=async()=>{q.render(),requestAnimationFrame(j)},O=async()=>{q.update(),q.health>=0&&setTimeout(O,1e3/60)};j();O();
