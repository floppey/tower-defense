var U=Object.defineProperty;var B=c=>{throw TypeError(c)};var G=(c,a,t)=>a in c?U(c,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[a]=t;var n=(c,a,t)=>G(c,typeof a!="symbol"?a+"":a,t),I=(c,a,t)=>a.has(c)||B("Cannot "+t);var l=(c,a,t)=>(I(c,a,"read from private field"),t?t.call(c):a.get(c)),w=(c,a,t)=>a.has(c)?B("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(c):a.set(c,t),u=(c,a,t,s)=>(I(c,a,"write to private field"),s?s.call(c,t):a.set(c,t),t);(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const h of i)if(h.type==="childList")for(const r of h.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const h={};return i.integrity&&(h.integrity=i.integrity),i.referrerPolicy&&(h.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?h.credentials="include":i.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function s(i){if(i.ep)return;i.ep=!0;const h=t(i);fetch(i.href,h)}})();const e="?",P="start",x="end",W="tower",$=(c,a)=>Math.sqrt(Math.pow(c.x-a.x,2)+Math.pow(c.y-a.y,2));var q;class E{constructor(){w(this,q);u(this,q,Math.floor(Math.random()*1e7))}get id(){return l(this,q)}}q=new WeakMap;var T;class M extends E{constructor({game:t,health:s,speed:i,damage:h,reward:r,type:d,path:o}){super();n(this,"game");n(this,"health");n(this,"maxHealth");n(this,"speed");w(this,T);n(this,"gridPosition");n(this,"nextPosition");n(this,"distance");n(this,"damage");n(this,"lastUpdateTime",Date.now());n(this,"direction");n(this,"reward");n(this,"debuffs",[]);n(this,"monsterSize");n(this,"type");n(this,"path");this.game=t,this.health=s,this.maxHealth=s,this.speed=i,u(this,T,i),this.distance=0,this.path=o,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0,this.path),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5,this.path),this.direction=this.getDirection(this.nextPosition),this.damage=h,this.reward=r,this.monsterSize=this.game.squareSize/1.5,this.type=d}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}addDebuff(t){this.debuffs.push({...t,duration:Date.now()+t.duration})}applyDebuffs(){const t=Date.now();let s=l(this,T);this.debuffs=this.debuffs.filter(h=>!(t>h.duration));let i=!1;this.debuffs.forEach(h=>{if(h.type==="freeze")s/=2;else if(h.type==="poison"&&!i){i=!0;const r=t-this.lastUpdateTime,d=this.maxHealth*.005,o=r/this.game.gameSpeed*d;this.takeDamage(o)}}),this.speed=Math.max(s,l(this,T)/3)}update(){this.applyDebuffs();const t=Date.now(),i=(t-this.lastUpdateTime)/this.game.gameSpeed*this.speed,h=this.distance+i;Math.floor(h)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(h,this.path)),this.nextPosition&&h%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=h,this.lastUpdateTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:s}=this.gridPosition,i=this.distance%1,{squareSize:h}=this.game;let r=s*h,d=t*h;return this.direction==="up"?(r+=h/2-this.monsterSize/2,d+=h-i*h):this.direction==="down"?(r+=h/2-this.monsterSize/2,d+=i*h):this.direction==="left"?(r+=h-i*h,d+=h/2-this.monsterSize/2):this.direction==="right"?(r+=i*h,d+=h/2-this.monsterSize/2):this.direction==="none"&&(r+=h/2-this.monsterSize/2,d+=h/2-this.monsterSize/2),{x:r,y:d}}render(){const t=this.getCanvasPosition();if(!t)return;const{ctx:s}=this.game,{x:i,y:h}=t,r=this.getSprite(),d=128,{row:o,numberOfFrames:p}=this.getWalkingAnimationRowAndNumberOfFrames(),g=Math.floor(this.distance*p)%p*d,L=o*d;s.save(),this.direction==="left"&&(s.translate(i+this.monsterSize/2,h),s.scale(-1,1),s.translate(-i-this.monsterSize/2,-h)),s.drawImage(r,g,L+5,d,d,i,h,this.monsterSize,this.monsterSize),s.restore(),s.save(),s.fillStyle="red",s.fillStyle="green",s.fillRect(i+10,h,(this.monsterSize-20)*this.health/this.maxHealth,5),s.restore()}getSprite(){switch(this.type){case"skeleton":return this.isFrozen()?this.game.images["monsters/SkeletonFrozen"]:this.isPoisoned()?this.game.images["monsters/SkeletonPoisoned"]:this.game.images["monsters/Skeleton"];case"plant":return this.isFrozen()?this.game.images["monsters/PlantFrozen"]:this.isPoisoned()?this.game.images["monsters/PlantPoisoned"]:this.game.images["monsters/Plant"];case"orcWarrior":return this.isFrozen()?this.game.images["monsters/OrcWarriorFrozen"]:this.isPoisoned()?this.game.images["monsters/OrcWarriorPoisoned"]:this.game.images["monsters/OrcWarrior"];case"fireSpirit":return this.isFrozen()?this.game.images["monsters/FireSpiritFrozen"]:this.isPoisoned()?this.game.images["monsters/FireSpiritPoisoned"]:this.game.images["monsters/FireSpirit"];default:return console.error("Invalid monster type",this.type),this.game.images["monsters/Skeleton"]}}isFrozen(){return this.debuffs.some(t=>t.type==="freeze")}isPoisoned(){return this.debuffs.some(t=>t.type==="poison")}getWalkingAnimationRowAndNumberOfFrames(){switch(this.type){case"skeleton":return{row:1,numberOfFrames:8};case"plant":return{row:2,numberOfFrames:9};case"orcWarrior":return{row:9,numberOfFrames:7};case"fireSpirit":return{row:5,numberOfFrames:7};default:return console.error("Invalid monster type",this.type),{row:0,numberOfFrames:0}}}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}T=new WeakMap;class b extends E{constructor({game:t,speed:s,damage:i,target:h,position:r}){super();n(this,"game");n(this,"speed");n(this,"damage");n(this,"target");n(this,"position");n(this,"lastMoveTime");n(this,"angle");n(this,"height",10);n(this,"width",10);n(this,"images",["arrow"]);n(this,"splash",null);n(this,"debuffs",null);this.game=t,this.speed=s,this.damage=i,this.target=h,this.position=r,this.angle=0,this.lastMoveTime=Date.now()}impact(){var s;const t=this.target;t instanceof M&&(t.takeDamage(this.damage),(s=this.debuffs)==null||s.forEach(i=>{t.addDebuff(i)})),this.splash&&this.game.level.monsters.forEach(i=>{var d;if(t instanceof M&&i.id===t.id)return;const h=i.getCanvasPosition();if(!h)return;$(this.position,h)<=this.splash*this.game.squareSize&&(i.takeDamage(this.damage),(d=this.debuffs)==null||d.forEach(o=>{i.addDebuff(o)}))}),this.game.projectiles=this.game.projectiles.filter(i=>i.id!==this.id)}getImage(){const t=this.images.length,s=Math.floor(Date.now()/this.game.gameSpeed%t),i=this.images[s];return this.game.images[i]}getTargetPosition(){return this.target instanceof M?this.target.getCanvasPosition():this.game.convertGridPositionToCoordinates(this.target)}update(){const t=Date.now(),s=t-this.lastMoveTime,i=s/this.game.gameSpeed;this.speed=this.speed*(1+1*i);const h=s/this.game.gameSpeed*this.speed,r=this.getTargetPosition(),d=Math.sqrt(Math.pow(r.x-this.position.x,2)+Math.pow(r.y-this.position.y,2));if(h>d){this.position=r,this.lastMoveTime=t,this.impact();return}const o=Math.atan2(r.y-this.position.y,r.x-this.position.x),p=Math.cos(o)*h,m=Math.sin(o)*h;this.angle=o+Math.PI,this.position={x:this.position.x+p,y:this.position.y+m},this.lastMoveTime=t}render(){const{ctx:t}=this.game;t.save(),t.translate(this.position.x,this.position.y),t.rotate(this.angle);try{t.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height)}catch(s){console.log(s),this.game.debug&&alert(`Error rendering projectile ${this.getImage().src}: ${s}`)}t.restore()}}class F extends b{constructor({game:t,target:s,position:i,damage:h,speed:r}){super({game:t,speed:r,damage:h,target:s,position:i});n(this,"height",10);n(this,"width",25)}}class y extends E{constructor(t,s){super();n(this,"game");n(this,"gridPosition");n(this,"range",4);n(this,"damage",60);n(this,"attackSpeed",.5);n(this,"lastAttackTime",Date.now());n(this,"placed",!1);n(this,"type","basic");n(this,"multiTarget",!1);this.game=t,this.gridPosition=s}getImage(){let t=[this.game.images[`tower-${this.type}`]];this.type==="lightning"&&(t=[this.game.images[`tower-${this.type}`],this.game.images[`tower-${this.type}-2`]]);const s=t.length,i=Math.floor(Date.now()/this.game.gameSpeed%s);return t[i]}render(){const{squareSize:t}=this.game,{col:s,row:i}=this.gridPosition,h=s*t,r=i*t,d=this.getImage();try{this.game.ctx.drawImage(d,h,r,t,t)}catch(o){console.error(o),this.game.debug&&alert(`Error rendering tower ${d}: ${o}`)}}update(){this.attack()}monsterIsValidTarget(t){if(!t.gridPosition||!t.isAlive())return!1;const{col:s,row:i}=this.gridPosition,h=t.gridPosition.col,r=t.gridPosition.row,d=Math.sqrt(Math.pow(h-s,2)+Math.pow(r-i,2));return Math.abs(d)<=this.range}getTargetInRange(){return this.getTargetsInRange()[0]}getTargetsInRange(){const{monsters:t}=this.game.level;return t.filter(s=>this.monsterIsValidTarget(s))??[]}canAttack(){return Date.now()-this.lastAttackTime>this.game.gameSpeed/this.attackSpeed}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s&&(this.game.projectiles.push(new F({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/4})),this.lastAttackTime=t+(this.attackSpeed*(Math.random()*.025)-.0125)*this.game.gameSpeed)}}}class K extends y{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",50);n(this,"attackSpeed",1);n(this,"type","arrow")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s&&(this.game.projectiles.push(new F({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:this.game.gameSpeed/2})),this.lastAttackTime=t)}}}class _ extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed/10,damage:h,target:s,position:i});n(this,"height",10);n(this,"width",25);n(this,"splash",1.5);n(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class Y extends y{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",125);n(this,"attackSpeed",.5);n(this,"type","cannon")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new _({game:this.game,target:s.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class X extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed/2,damage:h,target:s,position:i});n(this,"height",10);n(this,"width",25);n(this,"splash",.75);n(this,"images",["fire-1","fire-2"])}}class V extends y{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",500);n(this,"attackSpeed",1.5);n(this,"type","fire")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new X({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}const H={freeze:"freeze",poison:"poison"};class J extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed/3,damage:h,target:s,position:i});n(this,"height",25);n(this,"width",25);n(this,"splash",1);n(this,"images",["frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"]);n(this,"debuffs",[{type:H.freeze,duration:this.game.gameSpeed*2}])}}class Q extends y{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",50);n(this,"attackSpeed",1);n(this,"type","ice")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new J({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class Z extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed*1.5,damage:h,target:s,position:i});n(this,"height",15);n(this,"width",30);n(this,"previousTargets",[]);n(this,"images",["lightning-1","lightning-2"]);this.previousTargets.push(s.id)}impact(){super.impact(),this.game.level.monsters.find(t=>!(this.target instanceof M)||this.previousTargets.includes(t.id)?!1:$(t.getCanvasPosition(),this.target.getCanvasPosition())<100?(this.previousTargets.push(t.id),this.target=t,this.game.projectiles.push(this),!0):!1)}}class tt extends y{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",125);n(this,"attackSpeed",1);n(this,"type","lightning")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new Z({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class et extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed/10*8,damage:h,target:s,position:i});n(this,"height",12);n(this,"width",20);n(this,"images",["crystal"])}}class at extends y{constructor(){super(...arguments);n(this,"range",10);n(this,"damage",2500);n(this,"attackSpeed",2.5);n(this,"type","mage")}attack(){const t=Date.now();if(this.canAttack()){const s=this.getTargetInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new et({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class st extends b{constructor({game:t,target:s,position:i,damage:h}){super({game:t,speed:t.gameSpeed/5,damage:h,target:s,position:i});n(this,"height",25);n(this,"width",25);n(this,"images",["poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8"]);n(this,"debuffs",[{type:H.poison,duration:this.game.gameSpeed*10}])}}class it extends y{constructor(){super(...arguments);n(this,"range",2);n(this,"damage",0);n(this,"attackSpeed",1);n(this,"type","poison");n(this,"multiTarget",!0)}attack(){const t=Date.now();this.canAttack()&&this.getTargetsInRange().forEach(i=>{i!=null&&i.gridPosition&&(this.game.projectiles.push(new st({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)})}}const S={basic:50,arrow:100,cannon:200,fire:1e3,ice:450,mage:7500,lightning:2e3,poison:750},nt={basic:"basic",arrow:"arrow",cannon:"cannon",fire:"fire",ice:"ice",mage:"mage",lightning:"lightning",poison:"poison"},j={basic:y,arrow:K,cannon:Y,mage:at,ice:Q,fire:V,lightning:tt,poison:it};class ht{constructor(a){n(this,"game");n(this,"mousePosition");this.game=a,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:a,y:t}=this.mousePosition,{squareSize:s}=this.game,i=Math.floor(a/s);return{row:Math.floor(t/s),col:i}}init(){this.game.canvas.addEventListener("mousemove",a=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:a.clientX-t.left,y:a.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()}),this.game.canvas.addEventListener("contextmenu",a=>{this.handleContextMenu(a)})}handleClick(){const a=this.getCellAtMousePosition();this.game.newTower&&this.game.level.mapMatrix.matrix[a.col][a.row]===e&&this.game.money>=S[this.game.newTower]&&(this.game.level.mapMatrix.matrix[a.col][a.row]=W,this.game.level.towers.push(new j[this.game.newTower](this.game,a)),this.game.money-=S[this.game.newTower],this.game.money<S[this.game.newTower]&&(this.game.newTower=null))}handleContextMenu(a){a.preventDefault();const t=this.getCellAtMousePosition();if(this.game.newTower)this.game.newTower=null;else if(this.game.level.mapMatrix.matrix[t.col][t.row]===W){const s=this.game.level.towers.find(i=>i.gridPosition.col===t.col&&i.gridPosition.row===t.row);s&&(this.game.paused=!0,confirm(`Sell for ${S[s.type]/2} coins?`)&&(this.game.money+=S[s.type]/2,this.game.level.towers=this.game.level.towers.filter(i=>i.id!==s.id),this.game.level.mapMatrix.matrix[t.col][t.row]=e),this.game.paused=!1)}}}const ct=[[e,P,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e],[e,[{path:"0",distance:1}],e,[{path:"0",distance:67}],[{path:"0",distance:66}],[{path:"0",distance:65}],[{path:"0",distance:64}],[{path:"0",distance:63}],[{path:"0",distance:62}],[{path:"0",distance:61}],[{path:"0",distance:60}],[{path:"0",distance:59}],[{path:"0",distance:58}],[{path:"0",distance:57}],[{path:"0",distance:56}],[{path:"0",distance:55}],[{path:"0",distance:54}],[{path:"0",distance:53}],[{path:"0",distance:52}],e],[e,[{path:"0",distance:2}],e,[{path:"0",distance:68}],e,e,e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:51}],e],[e,[{path:"0",distance:3}],e,[{path:"0",distance:69}],e,[{path:"0",distance:119}],[{path:"0",distance:118}],[{path:"0",distance:117}],[{path:"0",distance:116}],[{path:"0",distance:115}],[{path:"0",distance:114}],[{path:"0",distance:113}],[{path:"0",distance:112}],[{path:"0",distance:111}],[{path:"0",distance:110}],[{path:"0",distance:109}],[{path:"0",distance:108}],e,[{path:"0",distance:50}],e],[e,[{path:"0",distance:4}],e,[{path:"0",distance:70}],e,[{path:"0",distance:120}],e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:107}],e,[{path:"0",distance:49}],e],[e,[{path:"0",distance:5}],e,[{path:"0",distance:71}],e,[{path:"0",distance:121}],e,[{path:"0",distance:155}],[{path:"0",distance:154}],[{path:"0",distance:153}],[{path:"0",distance:152}],[{path:"0",distance:151}],[{path:"0",distance:150}],[{path:"0",distance:149}],[{path:"0",distance:148}],e,[{path:"0",distance:106}],e,[{path:"0",distance:48}],e],[e,[{path:"0",distance:6}],e,[{path:"0",distance:72}],e,[{path:"0",distance:122}],e,[{path:"0",distance:156}],e,e,e,e,e,e,[{path:"0",distance:147}],e,[{path:"0",distance:105}],e,[{path:"0",distance:47}],e],[e,[{path:"0",distance:7}],e,[{path:"0",distance:73}],e,[{path:"0",distance:123}],e,[{path:"0",distance:157}],e,[{path:"0",distance:175}],[{path:"0",distance:174}],[{path:"0",distance:173}],[{path:"0",distance:172}],e,[{path:"0",distance:146}],e,[{path:"0",distance:104}],e,[{path:"0",distance:46}],e],[e,[{path:"0",distance:8}],e,[{path:"0",distance:74}],e,[{path:"0",distance:124}],e,[{path:"0",distance:158}],e,[{path:"0",distance:176}],x,[{path:"0",distance:182}],[{path:"0",distance:171}],e,[{path:"0",distance:145}],e,[{path:"0",distance:103}],e,[{path:"0",distance:45}],e],[e,[{path:"0",distance:9}],e,[{path:"0",distance:75}],e,[{path:"0",distance:125}],e,[{path:"0",distance:159}],e,[{path:"0",distance:177}],[{path:"0",distance:180}],[{path:"0",distance:181}],[{path:"0",distance:170}],e,[{path:"0",distance:144}],e,[{path:"0",distance:102}],e,[{path:"0",distance:44}],e],[e,[{path:"0",distance:10}],e,[{path:"0",distance:76}],e,[{path:"0",distance:126}],e,[{path:"0",distance:160}],e,[{path:"0",distance:178}],[{path:"0",distance:179}],e,[{path:"0",distance:169}],e,[{path:"0",distance:143}],e,[{path:"0",distance:101}],e,[{path:"0",distance:43}],e],[e,[{path:"0",distance:11}],e,[{path:"0",distance:77}],e,[{path:"0",distance:127}],e,[{path:"0",distance:161}],e,e,e,e,[{path:"0",distance:168}],e,[{path:"0",distance:142}],e,[{path:"0",distance:100}],e,[{path:"0",distance:42}],e],[e,[{path:"0",distance:12}],e,[{path:"0",distance:78}],e,[{path:"0",distance:128}],e,[{path:"0",distance:162}],[{path:"0",distance:163}],[{path:"0",distance:164}],[{path:"0",distance:165}],[{path:"0",distance:166}],[{path:"0",distance:167}],e,[{path:"0",distance:141}],e,[{path:"0",distance:99}],e,[{path:"0",distance:41}],e],[e,[{path:"0",distance:13}],e,[{path:"0",distance:79}],e,[{path:"0",distance:129}],e,e,e,e,e,e,e,e,[{path:"0",distance:140}],e,[{path:"0",distance:98}],e,[{path:"0",distance:40}],e],[e,[{path:"0",distance:14}],e,[{path:"0",distance:80}],e,[{path:"0",distance:130}],[{path:"0",distance:131}],[{path:"0",distance:132}],[{path:"0",distance:133}],[{path:"0",distance:134}],[{path:"0",distance:135}],[{path:"0",distance:136}],[{path:"0",distance:137}],[{path:"0",distance:138}],[{path:"0",distance:139}],e,[{path:"0",distance:97}],e,[{path:"0",distance:39}],e],[e,[{path:"0",distance:15}],e,[{path:"0",distance:81}],e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:96}],e,[{path:"0",distance:38}],e],[e,[{path:"0",distance:16}],e,[{path:"0",distance:82}],[{path:"0",distance:83}],[{path:"0",distance:84}],[{path:"0",distance:85}],[{path:"0",distance:86}],[{path:"0",distance:87}],[{path:"0",distance:88}],[{path:"0",distance:89}],[{path:"0",distance:90}],[{path:"0",distance:91}],[{path:"0",distance:92}],[{path:"0",distance:93}],[{path:"0",distance:94}],[{path:"0",distance:95}],e,[{path:"0",distance:37}],e],[e,[{path:"0",distance:17}],e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,[{path:"0",distance:36}],e],[e,[{path:"0",distance:18}],[{path:"0",distance:19}],[{path:"0",distance:20}],[{path:"0",distance:21}],[{path:"0",distance:22}],[{path:"0",distance:23}],[{path:"0",distance:24}],[{path:"0",distance:25}],[{path:"0",distance:26}],[{path:"0",distance:27}],[{path:"0",distance:28}],[{path:"0",distance:29}],[{path:"0",distance:30}],[{path:"0",distance:31}],[{path:"0",distance:32}],[{path:"0",distance:33}],[{path:"0",distance:34}],[{path:"0",distance:35}],e],[e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e]],rt=c=>{const a=document.createElement("div");a.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{c.startWave()}),a.innerHTML=`
    <div class="toolbar-item">
      <span>🪙: </span>
      <span id="money" class="money">${c.money.toLocaleString("en-US")}</span>
    </div>
    <div class="toolbar-item">
      <span>❤️: </span>
      <span id="health">${c.health}</span>
    </div>
    <div class="toolbar-item">
      <span>🌊: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>👿: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>💀: </span>
      <span id="kills">0</span>
    </div>
  `,a.appendChild(t);const s=document.createElement("label");s.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,a.appendChild(s);const i=document.createElement("span");i.innerHTML="Speed: ",a.appendChild(i),[.25,.5,1,2,5].forEach(o=>{const p=document.createElement("button");p.innerHTML=`x${o}`,p.addEventListener("click",()=>{c.gameSpeed=1e3/o}),a.appendChild(p)}),document.body.insertBefore(a,document.body.firstChild);const h=document.createElement("div");h.id="toolbar-bottom",Object.values(nt).sort((o,p)=>S[o]-S[p]).forEach(o=>{const p=document.createElement("button");p.innerHTML=`
    <img src="assets/tower-${o}.png" alt="${o} tower" />
    <span>${o} tower - <span class="price">${S[o].toLocaleString("en-US")}🪙</span></span>
    `,p.addEventListener("click",()=>{c.newTower=o}),h.appendChild(p)}),document.body.appendChild(h);const r=document.createElement("div");r.id="info-panel",r.innerHTML=`
  <details>
  <summary>How to play</summary>
  <h2>Goal</h2>
  <p>Defend your base from waves of monsters by building towers. The monsters move from the blue square(s) to the red square(s)</p>
  <h2>Adding towers</h2>
  <p>
    Use the toolbar at the bottom to select a tower type. Click on an empty square on the map to add a tower.
  </p>
  <h2>Selling towers</h2>
  <p>
    Right-click on a tower to sell it for half the price.
  </p>
  <h2>Starting a wave</h2>
  <p>
    Click the "Start Wave" button to start a new wave of monsters.
  </p>
  <h2>Auto mode</h2>
  <p>
    When auto mode is enabled, the game will automatically start new waves when the previous wave is defeated.
  </p>
  
  </details>
  
  `,document.body.appendChild(r);const d=document.createElement("div");d.id="upgrade-tower",d.innerHTML=`
  <h2>Upgrade Tower</h2>
`,d.style.display="none",["damage","range","speed"].forEach(o=>{const p=document.createElement("button");p.innerHTML=`${o}`,p.addEventListener("click",()=>{c.upgradeTower(o)}),d.appendChild(p)}),document.body.appendChild(d)},dt=c=>{const a=document.getElementById("health");a&&(a.innerText=c.toLocaleString("en-US"))},ot=c=>{const a=document.getElementById("kills");a&&(a.innerText=c.toLocaleString("en-US"))},pt=c=>{const a=document.getElementById("money");a&&(a.innerText=c.toLocaleString("en-US"))},O=c=>{const a=document.getElementById("monsters");a&&(a.innerText=c.toLocaleString("en-US"))};class lt extends M{constructor({game:a,...t}){super({game:a,...t}),this.monsterSize=this.game.squareSize}}const mt=c=>{const a=document.getElementById("wave");a&&(a.innerText=c.toLocaleString("en-US"))};class gt extends E{constructor(t,s){super();n(this,"matrix");n(this,"level");n(this,"totalDistance",0);n(this,"distanceToPositionMap",{});this.level=t,this.matrix={},s?(this.matrix=s,Object.values(s).forEach(i=>{Object.values(i).forEach(h=>{Array.isArray(h)&&(this.totalDistance=Math.max(...h.map(r=>r.distance),this.totalDistance))})})):this.generateMapMatrix()}initMatrix(){var i,h;const{gridWidth:t,gridHeight:s}=this.level.game;this.matrix=Array.from({length:t},()=>Array(s).fill(e)),(i=this.level.startPositions)==null||i.forEach((r,d)=>{this.matrix[r.col][r.row]=[{path:`${d}`,distance:0}]}),(h=this.level.endPositions)==null||h.forEach(r=>{this.matrix[r.col][r.row]=x})}generateMapMatrix(){var t;(t=this.level.startPositions)==null||t.forEach((s,i)=>{let h=0;do this.initMatrix(),this.totalDistance=this.buildPath(s.col,s.row,1,`${i}`),h++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&h<100);h>=100&&console.log("Failed to generate path")})}buildPath(t,s,i,h){const r=this.getNeighbors(t,s);if(r.some(({row:m,col:g})=>this.getCell(g,m)===x))return i;const d=r.filter(({col:m,row:g})=>this.canBePath(m,g,i));if(d.length===0)return-1;const o=d[Math.floor(Math.random()*d.length)],p=this.matrix[o.col][o.row];return Array.isArray(p)?p.push({path:h,distance:i}):this.matrix[o.col][o.row]=[{path:h,distance:i}],this.buildPath(o.col,o.row,i+1,h)}getNeighbors(t,s){const i=[];return t>0&&i.push({col:t-1,row:s}),t<this.level.game.gridWidth-1&&i.push({col:t+1,row:s}),s>0&&i.push({col:t,row:s-1}),s<this.level.game.gridHeight-1&&i.push({col:t,row:s+1}),i}getCell(t,s){return this.matrix[t][s]}canBePath(t,s,i,h){const r=this.getCell(t,s);return!(r!==e&&Array.isArray(r)===!1||Array.isArray(r)&&r.some(o=>o.path===h&&o.distance>i-10)||this.getNeighbors(t,s).filter(({col:o,row:p})=>{const m=this.getCell(o,p);return Array.isArray(m)?!!(Array.isArray(m)&&m.some(g=>g.path===h&&g.distance>i-10)):!1}).length>1||Array.isArray(r)&&r.length>=this.level.maxRepeatSquares)}getPathPosition(t,s){const i=Math.ceil(t),h=`${s}${i}`;if(this.distanceToPositionMap[h])return this.distanceToPositionMap[h];let r=i<=0?this.level.startPositions[Math.floor(Math.random()*this.level.startPositions.length)]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(d=>{const o=Number(d);Object.keys(this.matrix[o]).forEach(p=>{const m=Number(p),g=this.matrix[o][m];if(Array.isArray(g)&&g.find(L=>L.distance===i&&L.path===s)){r={row:m,col:o};return}})}),this.distanceToPositionMap[h]=r,r}}var k;class D extends E{constructor({game:t,startPositions:s,endPositions:i,minLength:h,maxLength:r,maxRepeatSquares:d,map:o}){super();n(this,"game");n(this,"startPositions");n(this,"endPositions");n(this,"mapMatrix");n(this,"minLength");n(this,"maxLength");n(this,"maxRepeatSquares");n(this,"towers",[]);n(this,"monsters",[]);w(this,k,0);this.game=t,this.startPositions=s,this.endPositions=i,this.minLength=h,this.maxLength=r,this.maxRepeatSquares=d,this.mapMatrix=new gt(this,o)}get wave(){return l(this,k)}set wave(t){u(this,k,t),mt(l(this,k))}}k=new WeakMap;const ut=["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","tower-lightning","tower-lightning-2","tower-poison","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13","crystal","poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8","lightning-1","lightning-2","monsters/Skeleton","monsters/FireSpirit","monsters/OrcWarrior","monsters/Plant","monsters/SkeletonFrozen","monsters/FireSpiritFrozen","monsters/OrcWarriorFrozen","monsters/PlantFrozen","monsters/SkeletonPoisoned","monsters/FireSpiritPoisoned","monsters/OrcWarriorPoisoned","monsters/PlantPoisoned"],R=["plant","skeleton","orcWarrior","fireSpirit"],N=[["?","?","?","?","?","?","?","?",[{distance:0,path:"0"}],"?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:1,path:"0"}],"?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?"],["?","?",[{distance:20,path:"0"},{distance:131,path:"1"},{distance:94,path:"2"},{distance:57,path:"3"}],[{distance:21,path:"0"},{distance:132,path:"1"},{distance:95,path:"2"},{distance:58,path:"3"}],[{distance:22,path:"0"},{distance:133,path:"1"},{distance:96,path:"2"},{distance:59,path:"3"}],[{distance:23,path:"0"},{distance:134,path:"1"},{distance:97,path:"2"},{distance:60,path:"3"}],[{distance:24,path:"0"},{distance:135,path:"1"},{distance:98,path:"2"},{distance:61,path:"3"}],[{distance:25,path:"0"},{distance:136,path:"1"},{distance:99,path:"2"},{distance:62,path:"3"}],[{distance:2,path:"0"},{distance:26,path:"0"},{distance:137,path:"1"},{distance:100,path:"2"},{distance:63,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:125,path:"0"},{distance:88,path:"1"},{distance:51,path:"2"},{distance:14,path:"3"}],[{distance:126,path:"0"},{distance:89,path:"1"},{distance:52,path:"2"},{distance:15,path:"3"}],[{distance:127,path:"0"},{distance:90,path:"1"},{distance:53,path:"2"},{distance:16,path:"3"}],[{distance:128,path:"0"},{distance:91,path:"1"},{distance:54,path:"2"},{distance:17,path:"3"}],[{distance:129,path:"0"},{distance:92,path:"1"},{distance:55,path:"2"},{distance:18,path:"3"}],[{distance:130,path:"0"},{distance:93,path:"1"},{distance:56,path:"2"},{distance:19,path:"3"}],[{distance:131,path:"0"},{distance:94,path:"1"},{distance:57,path:"2"},{distance:20,path:"3"}],"?","?"],["?","?",[{distance:19,path:"0"},{distance:130,path:"1"},{distance:93,path:"2"},{distance:56,path:"3"}],"?","?","?","?","?",[{distance:3,path:"0"},{distance:27,path:"0"},{distance:138,path:"1"},{distance:101,path:"2"},{distance:64,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:124,path:"0"},{distance:87,path:"1"},{distance:50,path:"2"},{distance:13,path:"3"}],"?","?","?","?","?",[{distance:132,path:"0"},{distance:95,path:"1"},{distance:58,path:"2"},{distance:21,path:"3"}],"?","?"],["?","?",[{distance:18,path:"0"},{distance:129,path:"1"},{distance:92,path:"2"},{distance:55,path:"3"}],"?","?","?","?","?",[{distance:4,path:"0"},{distance:28,path:"0"},{distance:139,path:"1"},{distance:102,path:"2"},{distance:65,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:123,path:"0"},{distance:86,path:"1"},{distance:49,path:"2"},{distance:12,path:"3"}],"?","?","?","?","?",[{distance:133,path:"0"},{distance:96,path:"1"},{distance:59,path:"2"},{distance:22,path:"3"}],"?","?"],["?","?",[{distance:17,path:"0"},{distance:128,path:"1"},{distance:91,path:"2"},{distance:54,path:"3"}],"?","?","?","?","?",[{distance:5,path:"0"},{distance:29,path:"0"},{distance:140,path:"1"},{distance:103,path:"2"},{distance:66,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:122,path:"0"},{distance:85,path:"1"},{distance:48,path:"2"},{distance:11,path:"3"}],"?","?","?","?","?",[{distance:134,path:"0"},{distance:97,path:"1"},{distance:60,path:"2"},{distance:23,path:"3"}],"?","?"],["?","?",[{distance:16,path:"0"},{distance:127,path:"1"},{distance:90,path:"2"},{distance:53,path:"3"}],"?","?","?","?","?",[{distance:6,path:"0"},{distance:30,path:"0"},{distance:141,path:"1"},{distance:104,path:"2"},{distance:67,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:121,path:"0"},{distance:84,path:"1"},{distance:47,path:"2"},{distance:10,path:"3"}],"?","?","?","?","?",[{distance:135,path:"0"},{distance:98,path:"1"},{distance:61,path:"2"},{distance:24,path:"3"}],"?","?"],["?","?",[{distance:15,path:"0"},{distance:126,path:"1"},{distance:89,path:"2"},{distance:52,path:"3"}],"?","?","?","?","?",[{distance:7,path:"0"},{distance:31,path:"0"},{distance:142,path:"1"},{distance:105,path:"2"},{distance:68,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:120,path:"0"},{distance:83,path:"1"},{distance:46,path:"2"},{distance:9,path:"3"}],"?","?","?","?","?",[{distance:136,path:"0"},{distance:99,path:"1"},{distance:62,path:"2"},{distance:25,path:"3"}],"?","?"],["?","?",[{distance:14,path:"0"},{distance:125,path:"1"},{distance:88,path:"2"},{distance:51,path:"3"}],[{distance:13,path:"0"},{distance:124,path:"1"},{distance:87,path:"2"},{distance:50,path:"3"}],[{distance:12,path:"0"},{distance:123,path:"1"},{distance:86,path:"2"},{distance:49,path:"3"}],[{distance:11,path:"0"},{distance:122,path:"1"},{distance:85,path:"2"},{distance:48,path:"3"}],[{distance:10,path:"0"},{distance:121,path:"1"},{distance:84,path:"2"},{distance:47,path:"3"}],[{distance:9,path:"0"},{distance:120,path:"1"},{distance:83,path:"2"},{distance:46,path:"3"}],[{distance:8,path:"0"},{distance:32,path:"0"},{distance:119,path:"1"},{distance:143,path:"1"},{distance:82,path:"2"},{distance:106,path:"2"},{distance:45,path:"3"},{distance:69,path:"3"}],[{distance:118,path:"1"},{distance:81,path:"2"},{distance:44,path:"3"}],[{distance:117,path:"1"},{distance:80,path:"2"},{distance:43,path:"3"}],[{distance:116,path:"1"},{distance:79,path:"2"},{distance:42,path:"3"}],[{distance:115,path:"1"},{distance:78,path:"2"},{distance:41,path:"3"}],[{distance:114,path:"1"},{distance:77,path:"2"},{distance:40,path:"3"}],[{distance:113,path:"1"},{distance:76,path:"2"},{distance:39,path:"3"}],[{distance:149,path:"0"},{distance:112,path:"1"},{distance:75,path:"2"},{distance:38,path:"3"}],[{distance:148,path:"0"},{distance:111,path:"1"},{distance:74,path:"2"},{distance:37,path:"3"}],[{distance:147,path:"0"},{distance:110,path:"1"},{distance:73,path:"2"},{distance:36,path:"3"}],[{distance:146,path:"0"},{distance:109,path:"1"},{distance:72,path:"2"},{distance:35,path:"3"}],[{distance:145,path:"0"},{distance:108,path:"1"},{distance:71,path:"2"},{distance:34,path:"3"}],[{distance:144,path:"0"},{distance:107,path:"1"},{distance:70,path:"2"},{distance:33,path:"3"}],[{distance:119,path:"0"},{distance:143,path:"0"},{distance:82,path:"1"},{distance:106,path:"1"},{distance:45,path:"2"},{distance:69,path:"2"},{distance:8,path:"3"},{distance:32,path:"3"}],[{distance:142,path:"0"},{distance:105,path:"1"},{distance:68,path:"2"},{distance:7,path:"3"},{distance:31,path:"3"}],[{distance:141,path:"0"},{distance:104,path:"1"},{distance:67,path:"2"},{distance:6,path:"3"},{distance:30,path:"3"}],[{distance:140,path:"0"},{distance:103,path:"1"},{distance:66,path:"2"},{distance:5,path:"3"},{distance:29,path:"3"}],[{distance:139,path:"0"},{distance:102,path:"1"},{distance:65,path:"2"},{distance:4,path:"3"},{distance:28,path:"3"}],[{distance:138,path:"0"},{distance:101,path:"1"},{distance:64,path:"2"},{distance:3,path:"3"},{distance:27,path:"3"}],[{distance:137,path:"0"},{distance:100,path:"1"},{distance:63,path:"2"},{distance:2,path:"3"},{distance:26,path:"3"}],[{distance:1,path:"3"}],[{distance:0,path:"3"}]],["?","?","?","?","?","?","?","?",[{distance:33,path:"0"},{distance:144,path:"1"},{distance:107,path:"2"},{distance:70,path:"3"}],"?","?","?","?","?","?",[{distance:150,path:"0"}],"?","?","?","?","?",[{distance:118,path:"0"},{distance:81,path:"1"},{distance:44,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:34,path:"0"},{distance:145,path:"1"},{distance:108,path:"2"},{distance:71,path:"3"}],"?","?","?","?","?","?",[{distance:151,path:"0"}],"?","?","?","?","?",[{distance:117,path:"0"},{distance:80,path:"1"},{distance:43,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:35,path:"0"},{distance:146,path:"1"},{distance:109,path:"2"},{distance:72,path:"3"}],"?","?","?","?","?","?",[{distance:152,path:"0"}],"?","?","?","?","?",[{distance:116,path:"0"},{distance:79,path:"1"},{distance:42,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:36,path:"0"},{distance:147,path:"1"},{distance:110,path:"2"},{distance:73,path:"3"}],"?","?","?","?","?","?",[{distance:153,path:"0"}],"?","?","?","?","?",[{distance:115,path:"0"},{distance:78,path:"1"},{distance:41,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:37,path:"0"},{distance:148,path:"1"},{distance:111,path:"2"},{distance:74,path:"3"}],"?","?","?","?","?","?",[{distance:154,path:"0"}],"?","?","?","?","?",[{distance:114,path:"0"},{distance:77,path:"1"},{distance:40,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:38,path:"0"},{distance:149,path:"1"},{distance:112,path:"2"},{distance:75,path:"3"}],[{distance:150,path:"1"}],[{distance:151,path:"1"}],[{distance:152,path:"1"}],[{distance:153,path:"1"}],[{distance:154,path:"1"}],[{distance:155,path:"1"}],"?",[{distance:155,path:"3"}],[{distance:154,path:"3"}],[{distance:153,path:"3"}],[{distance:152,path:"3"}],[{distance:151,path:"3"}],[{distance:113,path:"0"},{distance:76,path:"1"},{distance:39,path:"2"},{distance:150,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:39,path:"0"},{distance:113,path:"2"},{distance:76,path:"3"}],"?","?","?","?","?","?",[{distance:156,path:"2"}],"?","?","?","?","?",[{distance:112,path:"0"},{distance:75,path:"1"},{distance:38,path:"2"},{distance:149,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:40,path:"0"},{distance:114,path:"2"},{distance:77,path:"3"}],"?","?","?","?","?","?",[{distance:155,path:"2"}],"?","?","?","?","?",[{distance:111,path:"0"},{distance:74,path:"1"},{distance:37,path:"2"},{distance:148,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:41,path:"0"},{distance:115,path:"2"},{distance:78,path:"3"}],"?","?","?","?","?","?",[{distance:154,path:"2"}],"?","?","?","?","?",[{distance:110,path:"0"},{distance:73,path:"1"},{distance:36,path:"2"},{distance:147,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:42,path:"0"},{distance:116,path:"2"},{distance:79,path:"3"}],"?","?","?","?","?","?",[{distance:153,path:"2"}],"?","?","?","?","?",[{distance:109,path:"0"},{distance:72,path:"1"},{distance:35,path:"2"},{distance:146,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:43,path:"0"},{distance:117,path:"2"},{distance:80,path:"3"}],"?","?","?","?","?","?",[{distance:152,path:"2"}],"?","?","?","?","?",[{distance:108,path:"0"},{distance:71,path:"1"},{distance:34,path:"2"},{distance:145,path:"3"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?",[{distance:44,path:"0"},{distance:118,path:"2"},{distance:81,path:"3"}],"?","?","?","?","?","?",[{distance:151,path:"2"}],"?","?","?","?","?",[{distance:107,path:"0"},{distance:70,path:"1"},{distance:33,path:"2"},{distance:144,path:"3"}],"?","?","?","?","?","?","?","?"],[[{distance:0,path:"1"}],[{distance:1,path:"1"}],[{distance:63,path:"0"},{distance:2,path:"1"},{distance:26,path:"1"},{distance:137,path:"2"},{distance:100,path:"3"}],[{distance:64,path:"0"},{distance:3,path:"1"},{distance:27,path:"1"},{distance:138,path:"2"},{distance:101,path:"3"}],[{distance:65,path:"0"},{distance:4,path:"1"},{distance:28,path:"1"},{distance:139,path:"2"},{distance:102,path:"3"}],[{distance:66,path:"0"},{distance:5,path:"1"},{distance:29,path:"1"},{distance:140,path:"2"},{distance:103,path:"3"}],[{distance:67,path:"0"},{distance:6,path:"1"},{distance:30,path:"1"},{distance:141,path:"2"},{distance:104,path:"3"}],[{distance:68,path:"0"},{distance:7,path:"1"},{distance:31,path:"1"},{distance:142,path:"2"},{distance:105,path:"3"}],[{distance:45,path:"0"},{distance:69,path:"0"},{distance:8,path:"1"},{distance:32,path:"1"},{distance:119,path:"2"},{distance:143,path:"2"},{distance:82,path:"3"},{distance:106,path:"3"}],[{distance:70,path:"0"},{distance:33,path:"1"},{distance:144,path:"2"},{distance:107,path:"3"}],[{distance:71,path:"0"},{distance:34,path:"1"},{distance:145,path:"2"},{distance:108,path:"3"}],[{distance:72,path:"0"},{distance:35,path:"1"},{distance:146,path:"2"},{distance:109,path:"3"}],[{distance:73,path:"0"},{distance:36,path:"1"},{distance:147,path:"2"},{distance:110,path:"3"}],[{distance:74,path:"0"},{distance:37,path:"1"},{distance:148,path:"2"},{distance:111,path:"3"}],[{distance:75,path:"0"},{distance:38,path:"1"},{distance:149,path:"2"},{distance:112,path:"3"}],[{distance:76,path:"0"},{distance:39,path:"1"},{distance:150,path:"2"},{distance:113,path:"3"}],[{distance:77,path:"0"},{distance:40,path:"1"},{distance:114,path:"3"}],[{distance:78,path:"0"},{distance:41,path:"1"},{distance:115,path:"3"}],[{distance:79,path:"0"},{distance:42,path:"1"},{distance:116,path:"3"}],[{distance:80,path:"0"},{distance:43,path:"1"},{distance:117,path:"3"}],[{distance:81,path:"0"},{distance:44,path:"1"},{distance:118,path:"3"}],[{distance:82,path:"0"},{distance:106,path:"0"},{distance:45,path:"1"},{distance:69,path:"1"},{distance:8,path:"2"},{distance:32,path:"2"},{distance:119,path:"3"},{distance:143,path:"3"}],[{distance:83,path:"0"},{distance:46,path:"1"},{distance:9,path:"2"},{distance:120,path:"3"}],[{distance:84,path:"0"},{distance:47,path:"1"},{distance:10,path:"2"},{distance:121,path:"3"}],[{distance:85,path:"0"},{distance:48,path:"1"},{distance:11,path:"2"},{distance:122,path:"3"}],[{distance:86,path:"0"},{distance:49,path:"1"},{distance:12,path:"2"},{distance:123,path:"3"}],[{distance:87,path:"0"},{distance:50,path:"1"},{distance:13,path:"2"},{distance:124,path:"3"}],[{distance:88,path:"0"},{distance:51,path:"1"},{distance:14,path:"2"},{distance:125,path:"3"}],"?","?"],["?","?",[{distance:62,path:"0"},{distance:25,path:"1"},{distance:136,path:"2"},{distance:99,path:"3"}],"?","?","?","?","?",[{distance:46,path:"0"},{distance:9,path:"1"},{distance:120,path:"2"},{distance:83,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:105,path:"0"},{distance:68,path:"1"},{distance:7,path:"2"},{distance:31,path:"2"},{distance:142,path:"3"}],"?","?","?","?","?",[{distance:89,path:"0"},{distance:52,path:"1"},{distance:15,path:"2"},{distance:126,path:"3"}],"?","?"],["?","?",[{distance:61,path:"0"},{distance:24,path:"1"},{distance:135,path:"2"},{distance:98,path:"3"}],"?","?","?","?","?",[{distance:47,path:"0"},{distance:10,path:"1"},{distance:121,path:"2"},{distance:84,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:104,path:"0"},{distance:67,path:"1"},{distance:6,path:"2"},{distance:30,path:"2"},{distance:141,path:"3"}],"?","?","?","?","?",[{distance:90,path:"0"},{distance:53,path:"1"},{distance:16,path:"2"},{distance:127,path:"3"}],"?","?"],["?","?",[{distance:60,path:"0"},{distance:23,path:"1"},{distance:134,path:"2"},{distance:97,path:"3"}],"?","?","?","?","?",[{distance:48,path:"0"},{distance:11,path:"1"},{distance:122,path:"2"},{distance:85,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:103,path:"0"},{distance:66,path:"1"},{distance:5,path:"2"},{distance:29,path:"2"},{distance:140,path:"3"}],"?","?","?","?","?",[{distance:91,path:"0"},{distance:54,path:"1"},{distance:17,path:"2"},{distance:128,path:"3"}],"?","?"],["?","?",[{distance:59,path:"0"},{distance:22,path:"1"},{distance:133,path:"2"},{distance:96,path:"3"}],"?","?","?","?","?",[{distance:49,path:"0"},{distance:12,path:"1"},{distance:123,path:"2"},{distance:86,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:102,path:"0"},{distance:65,path:"1"},{distance:4,path:"2"},{distance:28,path:"2"},{distance:139,path:"3"}],"?","?","?","?","?",[{distance:92,path:"0"},{distance:55,path:"1"},{distance:18,path:"2"},{distance:129,path:"3"}],"?","?"],["?","?",[{distance:58,path:"0"},{distance:21,path:"1"},{distance:132,path:"2"},{distance:95,path:"3"}],"?","?","?","?","?",[{distance:50,path:"0"},{distance:13,path:"1"},{distance:124,path:"2"},{distance:87,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:101,path:"0"},{distance:64,path:"1"},{distance:3,path:"2"},{distance:27,path:"2"},{distance:138,path:"3"}],"?","?","?","?","?",[{distance:93,path:"0"},{distance:56,path:"1"},{distance:19,path:"2"},{distance:130,path:"3"}],"?","?"],["?","?",[{distance:57,path:"0"},{distance:20,path:"1"},{distance:131,path:"2"},{distance:94,path:"3"}],[{distance:56,path:"0"},{distance:19,path:"1"},{distance:130,path:"2"},{distance:93,path:"3"}],[{distance:55,path:"0"},{distance:18,path:"1"},{distance:129,path:"2"},{distance:92,path:"3"}],[{distance:54,path:"0"},{distance:17,path:"1"},{distance:128,path:"2"},{distance:91,path:"3"}],[{distance:53,path:"0"},{distance:16,path:"1"},{distance:127,path:"2"},{distance:90,path:"3"}],[{distance:52,path:"0"},{distance:15,path:"1"},{distance:126,path:"2"},{distance:89,path:"3"}],[{distance:51,path:"0"},{distance:14,path:"1"},{distance:125,path:"2"},{distance:88,path:"3"}],"?","?","?","?","?","?","?","?","?","?","?","?",[{distance:100,path:"0"},{distance:63,path:"1"},{distance:2,path:"2"},{distance:26,path:"2"},{distance:137,path:"3"}],[{distance:99,path:"0"},{distance:62,path:"1"},{distance:25,path:"2"},{distance:136,path:"3"}],[{distance:98,path:"0"},{distance:61,path:"1"},{distance:24,path:"2"},{distance:135,path:"3"}],[{distance:97,path:"0"},{distance:60,path:"1"},{distance:23,path:"2"},{distance:134,path:"3"}],[{distance:96,path:"0"},{distance:59,path:"1"},{distance:22,path:"2"},{distance:133,path:"3"}],[{distance:95,path:"0"},{distance:58,path:"1"},{distance:21,path:"2"},{distance:132,path:"3"}],[{distance:94,path:"0"},{distance:57,path:"1"},{distance:20,path:"2"},{distance:131,path:"3"}],"?","?"],["?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?",[{distance:1,path:"2"}],"?","?","?","?","?","?","?","?"],["?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?","?",[{distance:0,path:"2"}],"?","?","?","?","?","?","?","?"]];var f,z,C,v,A;class ft{constructor(){w(this,f,10);w(this,z,100);w(this,C,0);n(this,"debug",!1);n(this,"canvas");n(this,"ctx");n(this,"squareSize",50);n(this,"gridWidth",25);n(this,"gridHeight",25);n(this,"level");n(this,"mouseHandler");n(this,"hoveredCell",null);n(this,"images",{});n(this,"tempCounter",-1);n(this,"projectiles",[]);w(this,v,null);w(this,A,!1);n(this,"gameSpeed",1e3);n(this,"backgroundImage",null);n(this,"completedWaves",{});this.canvas=document.createElement("canvas");const a=this.canvas.getContext("2d");if(!a)throw new Error("2d context not supported");this.ctx=a,Math.random()>.5?(this.gridHeight=30,this.gridWidth=30,this.level=new D({game:this,endPositions:[{col:14,row:15}],startPositions:[{col:8,row:0},{col:21,row:0},{col:29,row:21},{col:8,row:29}],maxLength:200,maxRepeatSquares:1,minLength:100,map:N})):Math.random()>.5?(this.gridHeight=20,this.gridWidth=20,this.level=new D({game:this,endPositions:[{col:8,row:10}],startPositions:[{col:0,row:1}],maxLength:200,maxRepeatSquares:1,minLength:100,map:ct})):this.level=new D({game:this,endPositions:[{col:Math.floor(Math.random()*this.gridHeight/2),row:Math.floor(Math.random()*this.gridWidth/2)}],startPositions:[{col:Math.floor((Math.random()+.5)*this.gridHeight/2),row:Math.floor((Math.random()+.5)*this.gridWidth/2)}],maxLength:250,maxRepeatSquares:3,minLength:100}),u(this,f,10*this.level.startPositions.length),this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,document.body.appendChild(this.canvas),this.mouseHandler=new ht(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0,this.money=1e4),rt(this)}getNumberOfMonstersPerWave(){return this.isBossWave()?1:this.level.wave>30?50:20+(this.level.wave-1)}isBossWave(){return this.level.wave%10===0}canStartWave(){return l(this,f)>0&&(this.tempCounter===this.getNumberOfMonstersPerWave()||this.tempCounter===-1)}startWave(){this.canStartWave()&&(this.level.wave++,this.tempCounter=0,console.log(`Starting ${this.isBossWave()?"boss wave":"wave"} ${this.level.wave}. ${this.getNumberOfMonstersPerWave()} monsters with ${this.getHealth()} health and ${this.getSpeed()} speed`),this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.level.startPositions.forEach((a,t)=>{this.spawnMonster(`${t}`)}),this.tempCounter++,this.spawnMonsters())},this.gameSpeed/2/this.getSpeed())}getSpeed(){let a=1;return this.level.wave>2&&(a+=(this.level.wave-2)*.1),Math.min(a,5)}getHealth(){let a=100;const t=50;let s=0;for(let i=0;i<this.level.wave;i+=1)s+=t*(i*2),s+=Math.pow(i,3);return this.isBossWave()&&(s*=50),Math.floor(a+s)}getReward(){return this.isBossWave()?Math.floor(1e3*(this.level.wave/10)):10+Math.floor(this.level.wave/2)}spawnMonster(a){const t=this.isBossWave()?lt:M;let s;this.level.wave<=10?s="plant":this.level.wave<=20?s="skeleton":this.level.wave<=30?s="orcWarrior":this.level.wave<=40?s="fireSpirit":s=R[Math.floor(Math.random()*R.length)],this.level.monsters.push(new t({game:this,health:this.getHealth(),speed:this.getSpeed(),damage:this.isBossWave()?5:1,reward:this.getReward(),type:s,path:a})),O(this.level.monsters.length)}loadImages(){ut.forEach(a=>{const t=new Image;t.src=`./assets/${a}.png`,this.images[a]=t})}update(){var s;if(l(this,A))return;const a=this.level.monsters.filter(i=>i.distance>=this.level.mapMatrix.totalDistance),t=this.level.monsters.filter(i=>!i.isAlive());t.forEach(i=>{this.money+=i.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(i=>i.isAlive()&&i.distance<this.level.mapMatrix.totalDistance).sort((i,h)=>h.distance-i.distance),a.forEach(i=>{console.log(`Monster reached the end, -${i.damage} health`),this.health-=i.damage}),this.level.monsters.forEach(i=>{i.update()}),this.level.towers.forEach(i=>{i.update()}),this.projectiles.forEach(i=>{i.update()}),l(this,f)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(t.length>0||a.length>0)&&O(this.level.monsters.length),this.canStartWave()&&this.level.monsters.length===0&&this.completedWaves[this.level.wave]!==!0&&(this.completedWaves[this.level.wave]=!0,console.log(`Wave ${this.level.wave} completed!`),(s=document.getElementById("automode"))!=null&&s.checked&&this.startWave())}render(){try{this.drawGrid(),this.level.monsters.forEach(a=>{a.render()}),this.level.towers.forEach(a=>{a.render()}),this.projectiles.forEach(a=>{a.render()}),l(this,f)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore()),l(this,v)&&this.hoveredCell&&(this.ctx.save(),this.ctx.globalAlpha=.25,this.ctx.beginPath(),this.ctx.arc(this.hoveredCell.col*this.squareSize+this.squareSize/2,this.hoveredCell.row*this.squareSize+this.squareSize/2,l(this,v).range*this.squareSize,0,2*Math.PI),this.ctx.fillStyle="purple",this.ctx.globalAlpha=.5,l(this,v).gridPosition=this.hoveredCell,l(this,v).render(),this.ctx.fill(),this.ctx.restore())}catch(a){console.error(a),this.debug&&alert(`Error rendering game: ${a}`)}}drawGrid(){if(!this.backgroundImage){const a=document.createElement("canvas");a.width=this.canvas.width,a.height=this.canvas.height;const t=a.getContext("2d");if(!t)throw new Error("2d context not supported");t.clearRect(0,0,a.width,a.height);const{matrix:s}=this.level.mapMatrix;Object.keys(s).forEach(i=>{const h=Number(i);Object.keys(s[h]).forEach(r=>{const d=Number(r),o=s[h][d];t.save(),typeof o=="string"?o===P?t.fillStyle="blue":o===x?t.fillStyle="rgba(255, 0, 0, 0.5)":t.fillStyle="green":Array.isArray(o)&&o.some(p=>p.distance===0)?t.fillStyle="blue":Array.isArray(o)&&o.length>0&&(t.fillStyle="rgb(200, 200, 200)"),t.fillRect(h*this.squareSize,d*this.squareSize,this.squareSize,this.squareSize),this.debug&&(t.save(),t.fillStyle="black",t.font="10px Arial",Array.isArray(o)&&o.length>0?t.fillText(`${o.map(p=>p.path+"-"+p.distance).join(", ")}`,h*this.squareSize+5,d*this.squareSize+15):o===P?t.fillText(P,h*this.squareSize+5,d*this.squareSize+15):o===x&&t.fillText(x,h*this.squareSize+5,d*this.squareSize+15),t.font="10px Arial",t.fillText(`${h},${d}`,h*this.squareSize+20,d*this.squareSize+40),t.restore()),t.strokeStyle="lightgray",t.strokeRect(h*this.squareSize,d*this.squareSize,this.squareSize,this.squareSize),t.restore()})}),this.backgroundImage=a}this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.backgroundImage,0,0),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(a){return{x:a.col*this.squareSize+this.squareSize/2,y:a.row*this.squareSize+this.squareSize/2}}upgradeTower(a){switch(a){case"damage":console.log("TODO: Implement damage upgrade");break;case"range":console.log("TODO: Implement range upgrade");break;case"speed":console.log("TODO: Implement speed upgrade");break}}get health(){return l(this,f)}set health(a){u(this,f,a),dt(l(this,f))}get money(){return l(this,z)}set money(a){u(this,z,a),pt(l(this,z))}get killCount(){return l(this,C)}set killCount(a){u(this,C,a),ot(l(this,C))}get newTower(){var a;return((a=l(this,v))==null?void 0:a.type)||null}set newTower(a){u(this,v,a?new j[a](this,this.hoveredCell):null)}get paused(){return l(this,A)}set paused(a){const t=Date.now();this.level.towers.forEach(s=>{s.lastAttackTime=t}),this.level.monsters.forEach(s=>{s.lastUpdateTime=t}),this.projectiles.forEach(s=>{s.lastMoveTime=t}),u(this,A,a)}}f=new WeakMap,z=new WeakMap,C=new WeakMap,v=new WeakMap,A=new WeakMap;class wt{constructor(a){n(this,"mousePosition");n(this,"mapBuilder");n(this,"pressedKeys",[]);this.mousePosition={x:0,y:0},this.mapBuilder=a,this.init()}getCellAtMousePosition(){const{x:a,y:t}=this.mousePosition,{squareSize:s}=this.mapBuilder,i=Math.floor(a/s);return{row:Math.floor(t/s),col:i}}init(){this.mapBuilder.canvas.addEventListener("mousemove",a=>{const t=this.mapBuilder.canvas.getBoundingClientRect();this.mousePosition={x:a.clientX-t.left,y:a.clientY-t.top},this.mapBuilder.hoveredCell=this.getCellAtMousePosition()}),this.mapBuilder.canvas.addEventListener("click",()=>{this.handleClick()}),this.mapBuilder.canvas.addEventListener("contextmenu",a=>{a.preventDefault();const t=this.getCellAtMousePosition();this.mapBuilder.mapMatrix[t.col][t.row]="?"}),this.mapBuilder.canvas.addEventListener("wheel",a=>{a.deltaY<0?this.mapBuilder.currentDistance+=1:(this.mapBuilder.currentDistance-=1,this.mapBuilder.currentDistance<0&&(this.mapBuilder.currentDistance=0)),this.mapBuilder.canvas.width=this.mapBuilder.width*this.mapBuilder.squareSize,this.mapBuilder.canvas.height=this.mapBuilder.height*this.mapBuilder.squareSize,this.mapBuilder.render()}),document.addEventListener("keydown",a=>{this.pressedKeys.push(a.key),a.key==="s"&&this.pressedKeys.includes("Control")&&(a.preventDefault(),console.log(JSON.stringify(this.mapBuilder.mapMatrix)))}),document.addEventListener("keyup",a=>{this.pressedKeys=this.pressedKeys.filter(t=>t!==a.key)})}handleClick(){if(this.pressedKeys.includes("Shift")){this.mapBuilder.currentPath=Number(this.mapBuilder.currentPath)+1+"";return}if(this.pressedKeys.includes("Control")){this.mapBuilder.currentPath=Math.max(1,Number(this.mapBuilder.currentPath))-1+"";return}const a=this.getCellAtMousePosition(),t=this.mapBuilder.mapMatrix[a.col][a.row];typeof t=="string"?this.mapBuilder.mapMatrix[a.col][a.row]=[{distance:this.mapBuilder.currentDistance,path:this.mapBuilder.currentPath}]:t.push({distance:this.mapBuilder.currentDistance,path:this.mapBuilder.currentPath}),this.mapBuilder.currentDistance+=1}}class vt{constructor(a,t){n(this,"squareSize",32);n(this,"canvas");n(this,"ctx");n(this,"mouseHandler");n(this,"mapMatrix");n(this,"hoveredCell",null);n(this,"debug",!0);n(this,"width");n(this,"height");n(this,"currentPath","0");n(this,"currentDistance",0);this.width=a,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=a*this.squareSize,this.canvas.height=t*this.squareSize,this.ctx=this.canvas.getContext("2d"),this.mapMatrix={},this.initMapMatrix(),this.mouseHandler=new wt(this),document.body.appendChild(this.canvas)}render(){this.drawGrid()}initMapMatrix(){this.mapMatrix=Array.from({length:this.width},()=>Array(this.height).fill(e)),this.mapMatrix=N}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),Object.keys(this.mapMatrix).forEach(s=>{const i=Number(s);Object.keys(this.mapMatrix[i]).forEach(h=>{const r=Number(h),d=this.mapMatrix[i][r];this.ctx.save(),typeof d=="string"?d===P?this.ctx.fillStyle="blue":d===x?this.ctx.fillStyle="rgba(255, 0, 0, 0.5)":d===e?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(d)&&d.some(o=>o.distance===0)?this.ctx.fillStyle="blue":Array.isArray(d)&&d.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(i*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.debug&&(this.ctx.save(),this.ctx.fillStyle="black",this.ctx.font="10px Arial",Array.isArray(d)&&d.length>0?this.ctx.fillText(`${d.map(o=>o.path+"-"+o.distance).join(", ")}`,i*this.squareSize+5,r*this.squareSize+15):d===P?this.ctx.fillText(P,i*this.squareSize+5,r*this.squareSize+15):d===x&&this.ctx.fillText(x,i*this.squareSize+5,r*this.squareSize+15),this.ctx.fillStyle="black",this.ctx.font="8px Arial",this.ctx.fillText(`${i},${r}`,i*this.squareSize+10,r*this.squareSize+25),this.ctx.restore()),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(i*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.ctx.save(),this.ctx.strokeStyle="orange",this.ctx.lineWidth=3,this.ctx.beginPath();const a={};Object.keys(this.mapMatrix).forEach(s=>{const i=Number(s);Object.keys(this.mapMatrix[i]).forEach(h=>{const r=Number(h),d=this.mapMatrix[i][r];Array.isArray(d)&&d.forEach(o=>{o.path===this.currentPath&&(a[o.distance]={row:r,col:i})})})});let t=0;for(this.ctx.moveTo(a[t].col*this.squareSize+this.squareSize/2,a[t].row*this.squareSize+this.squareSize/2),t+=1;a[t];)this.ctx.lineTo(a[t].col*this.squareSize+this.squareSize/2,a[t].row*this.squareSize+this.squareSize/2),t+=1;this.ctx.stroke(),this.ctx.restore(),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.fillStyle="black",this.ctx.font="20px Arial",this.ctx.fillText(`${this.currentPath}-${this.currentDistance}`,this.hoveredCell.col*this.squareSize+5,this.hoveredCell.row*this.squareSize+20),this.ctx.restore())}}const xt=()=>{var i,h;const c=Number((i=prompt("Enter the width of map (e.g. 15):"))==null?void 0:i.replace(/\D/g,"")),a=Number((h=prompt("Enter the height of map (e.g. 15):"))==null?void 0:h.replace(/\D/g,"")),t=new vt(c,a),s=async()=>{t.render(),requestAnimationFrame(s)};s()},St=new URLSearchParams(window.location.search).get("builder");if(St)xt();else{const c=new ft,a=async()=>{c.render(),requestAnimationFrame(a)},t=async()=>{c.update(),c.health>=0&&requestAnimationFrame(t)};a(),t()}
