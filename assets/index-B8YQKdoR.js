var R=Object.defineProperty;var A=r=>{throw TypeError(r)};var j=(r,e,t)=>e in r?R(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var o=(r,e,t)=>j(r,typeof e!="symbol"?e+"":e,t),L=(r,e,t)=>e.has(r)||A("Cannot "+t);var c=(r,e,t)=>(L(r,e,"read from private field"),t?t.call(r):e.get(r)),u=(r,e,t)=>e.has(r)?A("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),p=(r,e,t,i)=>(L(r,e,"write to private field"),i?i.call(r,t):e.set(r,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();const T="?",H="start",b="end",E="tower",O=(r,e)=>Math.sqrt(Math.pow(r.x-e.x,2)+Math.pow(r.y-e.y,2));var y;class S{constructor(){u(this,y);p(this,y,Math.floor(Math.random()*1e7))}get id(){return c(this,y)}}y=new WeakMap;class P extends S{constructor({game:t,health:i,speed:s,damage:a}){super();o(this,"game");o(this,"health");o(this,"maxHealth");o(this,"speed");o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastMoveTime",Date.now());o(this,"direction");o(this,"reward",10);this.game=t,this.health=i,this.maxHealth=i,this.speed=s,this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=a}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}move(){const t=Date.now(),s=(t-this.lastMoveTime)/1e3*this.speed,a=this.distance+s;Math.floor(a)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(a)),this.nextPosition&&a%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=a,this.lastMoveTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:i}=this.gridPosition,s=this.distance%1,{squareSize:a}=this.game,n=a/4;let h=i*a,l=t*a;return this.direction==="up"?(h+=a/2-n/2,l+=a-s*a):this.direction==="down"?(h+=a/2-n/2,l+=s*a):this.direction==="left"?(h+=a-s*a,l+=a/2-n/2):this.direction==="right"?(h+=s*a,l+=a/2-n/2):this.direction==="none"&&(h+=a/2-n/2,l+=a/2-n/2),{x:h,y:l}}render(){const t=this.getCanvasPosition();if(!t)return;const{squareSize:i,ctx:s}=this.game,a=i/3,{x:n,y:h}=t;s.fillStyle="black",s.fillRect(n,h,a,a),s.fillStyle="red",s.fillRect(n,h-10,a,5),s.fillStyle="green",s.fillRect(n,h-10,a*this.health/this.maxHealth,5)}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}class k extends S{constructor({game:t,speed:i,damage:s,target:a,position:n}){super();o(this,"game");o(this,"speed");o(this,"damage");o(this,"target");o(this,"position");o(this,"lastMoveTime");o(this,"angle");o(this,"height",10);o(this,"width",10);o(this,"images",["arrow"]);o(this,"splash",null);this.game=t,this.speed=i,this.damage=s,this.target=a,this.position=n,this.angle=0,this.lastMoveTime=Date.now()}impact(){this.target instanceof P&&this.target.takeDamage(this.damage),this.splash&&this.game.level.monsters.forEach(t=>{if(this.target instanceof P&&t.id===this.target.id)return;const i=t.getCanvasPosition();if(!i)return;O(this.position,i)<=this.splash*this.game.squareSize&&t.takeDamage(this.damage)}),this.game.projectiles=this.game.projectiles.filter(t=>t.id!==this.id)}getImage(){const t=this.images.length,i=Math.floor(Date.now()/1e3%t),s=this.images[i];return this.game.images[s]}update(){this.speed=this.speed*1.05;const t=Date.now(),s=(t-this.lastMoveTime)/1e3*this.speed;let a;this.target instanceof P?a=this.target.getCanvasPosition():a=this.game.convertGridPositionToCoordinates(this.target);const n=Math.sqrt(Math.pow(a.x-this.position.x,2)+Math.pow(a.y-this.position.y,2));if(s>n){this.position=a,this.lastMoveTime=t,this.impact();return}const h=Math.atan2(a.y-this.position.y,a.x-this.position.x),l=Math.cos(h)*s,m=Math.sin(h)*s;this.angle=h+Math.PI,this.position={x:this.position.x+l,y:this.position.y+m},this.lastMoveTime=t}render(){const{ctx:t}=this.game;t.save(),t.translate(this.position.x,this.position.y),t.rotate(this.angle),t.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height),t.restore()}}class z extends k{constructor({game:t,target:i,position:s,damage:a,speed:n}){super({game:t,speed:n,damage:a,target:i,position:s});o(this,"height",10);o(this,"width",25)}}class M extends S{constructor(t,i){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");this.game=t,this.gridPosition=i}render(){const{squareSize:t}=this.game,{col:i,row:s}=this.gridPosition,a=i*t,n=s*t,h=this.game.images[`tower-${this.type}`];this.game.ctx.drawImage(h,a,n,t,t)}update(){this.attack()}getTargetsInRange(){const{monsters:t}=this.game.level,{col:i,row:s}=this.gridPosition;return t.find(a=>{if(!a.gridPosition||!a.isAlive())return!1;const n=a.gridPosition.col,h=a.gridPosition.row,l=Math.sqrt(Math.pow(n-i,2)+Math.pow(h-s,2));return Math.abs(l)<=this.range})}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s&&(this.game.projectiles.push(new z({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:250})),this.lastAttackTime=t)}}}class W extends M{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s&&(this.game.projectiles.push(new z({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:500})),this.lastAttackTime=t)}}}class B extends k{constructor({game:t,target:i,position:s,damage:a}){super({game:t,speed:100,damage:a,target:i,position:s});o(this,"height",10);o(this,"width",25);o(this,"splash",1.5);o(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class N extends M{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",125);o(this,"attackSpeed",.75);o(this,"type","cannon")}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new B({game:this.game,target:s.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}class U extends k{constructor({game:t,target:i,position:s,damage:a}){super({game:t,speed:500,damage:a,target:i,position:s});o(this,"height",10);o(this,"width",25);o(this,"splash",.75);o(this,"images",["fire-1","fire-2"])}}class G extends M{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",500);o(this,"attackSpeed",2.5);o(this,"type","fire")}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s!=null&&s.gridPosition&&(this.game.projectiles.push(new U({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=t)}}}const g={newTower:50,arrowTower:100,cannonTower:200,fireTower:1e3};class ${constructor(e){o(this,"game");o(this,"mousePosition");this.game=e,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:e,y:t}=this.mousePosition,{squareSize:i}=this.game,s=Math.floor(e/i);return{row:Math.floor(t/i),col:s}}init(){this.game.canvas.addEventListener("mousemove",e=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:e.clientX-t.left,y:e.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()})}handleClick(){const e=this.getCellAtMousePosition();if(this.game.level.mapMatrix.matrix[e.col][e.row]===T)this.game.money>=g.newTower&&(this.game.level.mapMatrix.matrix[e.col][e.row]=E,this.game.level.towers.push(new M(this.game,e)),this.game.money-=g.newTower);else if(this.game.level.mapMatrix.matrix[e.col][e.row]===E){let t=this.game.level.towers.find(i=>i.gridPosition.col===e.col&&i.gridPosition.row===e.row);t&&(t.type==="basic"&&this.game.money>=g.arrowTower?(this.game.level.towers=this.game.level.towers.filter(i=>i.id!==t.id),this.game.level.towers.push(new W(this.game,e)),this.game.money-=g.arrowTower):t.type==="arrow"&&this.game.money>=g.cannonTower?(this.game.level.towers=this.game.level.towers.filter(i=>i.id!==t.id),this.game.level.towers.push(new N(this.game,e)),this.game.money-=g.cannonTower):t.type==="cannon"&&this.game.money>=g.fireTower&&(this.game.level.towers=this.game.level.towers.filter(i=>i.id!==t.id),this.game.level.towers.push(new G(this.game,e)),this.game.money-=g.fireTower))}}}const F=r=>{const e=document.createElement("div");e.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{r.startWave()}),e.innerHTML=`
    <div class="toolbar-item">
      <span>ü™ô: </span>
      <span id="money">100</span>
    </div>
    <div class="toolbar-item">
      <span>‚ù§Ô∏è: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>üåä: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>üëø: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>üíÄ: </span>
      <span id="kills">0</span>
    </div>
  `,e.appendChild(t);const i=document.createElement("label");i.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,e.appendChild(i),document.body.insertBefore(e,document.body.firstChild);const s=document.createElement("aside");s.id="aside-right",s.innerHTML=`
  <h2>Controls</h2>
  <h3>Add a new tower</h3>
  <p>Click an empty square to add a new simple tower tower to the map</p>
  <h3>Upgrade a tower</h3>
  <p>Click a tower. If you have enough gold, the tower will be upgraded.</p>
  <h3>Towers</h3>
  <ul id="towers-overview">
  <li>
  <img src="assets/tower-basic.png" alt="basic tower" /><span><strong>Basic tower</strong>. Cost: ${g.newTower} ü™ô<br/> Single target, short range, low damage, slow attackspeed, slow projectiles.</span>
  </li>
  <li>
  <img src="assets/tower-arrow.png" alt="arrow tower" /><span><strong>Arrow tower</strong>. Cost: ${g.arrowTower} ü™ô<br/> Single target, medium range, low damage, medium attackspeed, medium speed projectiles.</span>
  </li>
  <li>
  <img src="assets/tower-cannon.png" alt="cannon tower" /> <span> <strong>Cannon tower</strong>. Cost: ${g.cannonTower} ü™ô<br/> Splash damage, short range, high damage, very slow attackspeed, very slow projectiles.</span>
  </li>
  <!--
  <li>
   <img src="assets/tower-mage.png" alt="mage tower" /><span><strong>Mage tower</strong>. Cost: 300 ü™ô<br/> Single target, long range, medium damage, slow attackspeed, slow projectiles. </span>
  </li>
  -->
  <li>
  <img src="assets/tower-fire.png" alt="fire tower" /><span><strong>Fire tower</strong>. Cost: ${g.fireTower.toLocaleString("en-US")} ü™ô<br/> Small splash damage, medium range, high damage, fast attackspeed, fast projectiles.</span>
  </li>
  </ul>
  `,document.body.appendChild(s)},_=r=>{const e=document.getElementById("health");e&&(e.innerText=r.toLocaleString("en-US"))},K=r=>{const e=document.getElementById("kills");e&&(e.innerText=r.toLocaleString("en-US"))},X=r=>{const e=document.getElementById("money");e&&(e.innerText=r.toLocaleString("en-US"))},q=r=>{const e=document.getElementById("monsters");e&&(e.innerText=r.toLocaleString("en-US"))},Y=r=>{const e=document.getElementById("wave");e&&(e.innerText=r.toLocaleString("en-US"))};class J extends S{constructor(t){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=t,this.matrix={},this.generateMapMatrix()}initMatrix(){const{gridWidth:t,gridHeight:i}=this.level.game;this.matrix=Array.from({length:t},()=>Array(i).fill(T)),this.level.startPositions.forEach(s=>{this.matrix[s.col][s.row]=[0]}),this.level.endPositions.forEach(s=>{this.matrix[s.col][s.row]=b})}generateMapMatrix(){this.level.startPositions.forEach(t=>{let i=0;do this.initMatrix(),this.totalDistance=this.buildPath(t.col,t.row,1),i++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&i<100);i>=100&&console.log("Failed to generate path")})}buildPath(t,i,s){const a=this.getNeighbors(t,i);if(a.some(({row:m,col:x})=>this.getCell(x,m)===b))return s;const n=a.filter(({col:m,row:x})=>this.canBePath(m,x,s));if(n.length===0)return-1;const h=n[Math.floor(Math.random()*n.length)],l=this.matrix[h.col][h.row];return Array.isArray(l)?l.push(s):this.matrix[h.col][h.row]=[s],this.buildPath(h.col,h.row,s+1)}getNeighbors(t,i){const s=[];return t>0&&s.push({col:t-1,row:i}),t<this.level.game.gridWidth-1&&s.push({col:t+1,row:i}),i>0&&s.push({col:t,row:i-1}),i<this.level.game.gridHeight-1&&s.push({col:t,row:i+1}),s}getCell(t,i){return this.matrix[t][i]}canBePath(t,i,s){const a=this.getCell(t,i);return!(a!==T&&Array.isArray(a)===!1||Array.isArray(a)&&a.some(h=>h>s-10)||this.getNeighbors(t,i).filter(({col:h,row:l})=>{const m=this.getCell(h,l);return Array.isArray(m)?!!m.some(x=>x>s-10):!1}).length>1||Array.isArray(a)&&a.length>=this.level.maxRepeatSquares)}getPathPosition(t){const i=Math.ceil(t);let s=i<0?this.level.startPositions[0]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(a=>{const n=Number(a);Object.keys(this.matrix[n]).forEach(h=>{const l=Number(h),m=this.matrix[n][l];if(Array.isArray(m)&&m.includes(i)){s={row:l,col:n};return}})}),s}}var f;class Q extends S{constructor(t,i,s,a,n,h){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);u(this,f,0);this.game=t,this.startPositions=i,this.endPositions=s,this.minLength=a,this.maxLength=n,this.maxRepeatSquares=h,this.mapMatrix=new J(this)}get wave(){return c(this,f)}set wave(t){p(this,f,t),Y(c(this,f))}}f=new WeakMap;var d,w,v;class V{constructor(){u(this,d,10);u(this,w,100);u(this,v,0);o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",-1);o(this,"projectiles",[]);this.canvas=document.createElement("canvas");const e=this.canvas.getContext("2d");if(!e)throw new Error("2d context not supported");this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,this.ctx=e,this.level=new Q(this,[{col:0,row:0}],[{col:20,row:20}],75,150,2),document.body.appendChild(this.canvas),this.mouseHandler=new $(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0),F(this)}getNumberOfMonstersPerWave(){return 20+(this.level.wave-1)*2}startWave(){c(this,d)<=0||this.tempCounter<this.getNumberOfMonstersPerWave()&&this.tempCounter!==-1||(this.level.wave++,this.tempCounter=0,this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500/this.getSpeed())}getSpeed(){let e=1;return this.level.wave>5&&(e+=(this.level.wave-5)*.2),this.level.wave>10&&(e+=(this.level.wave-10)*.2),this.level.wave>15&&(e+=(this.level.wave-15)*.2),this.level.wave>20&&(e+=(this.level.wave-20)*.2),e}getHealth(){let e=100;return this.level.wave>3&&(e+=(this.level.wave-3)*15),this.level.wave>5&&(e+=(this.level.wave-5)*10),this.level.wave>10&&(e+=(this.level.wave-10)*25),this.level.wave>15&&(e+=(this.level.wave-15)*50),this.level.wave>20&&(e+=(this.level.wave-20)*100),e}spawnMonster(){this.level.monsters.push(new P({game:this,health:this.getHealth(),speed:this.getSpeed(),damage:1})),q(this.level.monsters.length)}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"].forEach(t=>{const i=new Image;i.src=`./assets/${t}.png`,this.images[t]=i})}update(){var i;const e=this.level.monsters.filter(s=>s.distance>=this.level.mapMatrix.totalDistance),t=this.level.monsters.filter(s=>!s.isAlive());t.forEach(s=>{this.money+=s.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(s=>s.isAlive()&&s.distance<this.level.mapMatrix.totalDistance),e.forEach(s=>{console.log(`Monster reached the end, -${s.damage} health`),this.health-=s.damage}),this.level.monsters.forEach(s=>{s.move()}),this.level.towers.forEach(s=>{s.update()}),this.projectiles.forEach(s=>{s.update()}),c(this,d)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(t.length>0||e.length>0)&&q(this.level.monsters.length),this.level.monsters.length===0&&(console.log("Wave completed!"),(i=document.getElementById("automode"))!=null&&i.checked&&this.startWave())}render(){this.drawGrid(),this.level.monsters.forEach(e=>{e.render()}),this.level.towers.forEach(e=>{e.render()}),this.projectiles.forEach(e=>{e.render()}),c(this,d)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore())}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:e}=this.level.mapMatrix;Object.keys(e).forEach(t=>{const i=Number(t);Object.keys(e[i]).forEach(s=>{const a=Number(s),n=e[i][a];this.ctx.save(),typeof n=="string"?n===H?this.ctx.fillStyle="blue":n===b?this.ctx.fillStyle="red":n===T?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(n)&&n.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(i*this.squareSize,a*this.squareSize,this.squareSize,this.squareSize),this.debug&&Array.isArray(n)&&n.length>0&&(this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.ctx.fillText(n.toString(),i*this.squareSize+5,a*this.squareSize+15)),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(i*this.squareSize,a*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(e){return{x:e.col*this.squareSize+this.squareSize/2,y:e.row*this.squareSize+this.squareSize/2}}get health(){return c(this,d)}set health(e){p(this,d,e),_(c(this,d))}get money(){return c(this,w)}set money(e){p(this,w,e),X(c(this,w))}get killCount(){return c(this,v)}set killCount(e){p(this,v,e),K(c(this,v))}}d=new WeakMap,w=new WeakMap,v=new WeakMap;const C=new V,D=async()=>{C.render(),requestAnimationFrame(D)},I=async()=>{C.update(),C.health>=0&&setTimeout(I,1e3/60)};D();I();
