var q=Object.defineProperty;var M=n=>{throw TypeError(n)};var z=(n,e,t)=>e in n?q(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var o=(n,e,t)=>z(n,typeof e!="symbol"?e+"":e,t),b=(n,e,t)=>e.has(n)||M("Cannot "+t);var c=(n,e,t)=>(b(n,e,"read from private field"),t?t.call(n):e.get(n)),g=(n,e,t)=>e.has(n)?M("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(n):e.set(n,t),u=(n,e,t,i)=>(b(n,e,"write to private field"),i?i.call(n,t):e.set(n,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const y="?",D="start",S="end",E="tower";var x;class P{constructor(){g(this,x);u(this,x,Math.floor(Math.random()*1e7))}get id(){return c(this,x)}}x=new WeakMap;class L extends P{constructor(t,i){super();o(this,"game");o(this,"gridPosition");o(this,"range",4);o(this,"damage",25);o(this,"attackSpeed",1);o(this,"lastAttackTime",Date.now());o(this,"placed",!1);o(this,"type","basic");this.game=t,this.gridPosition=i}render(){const{squareSize:t}=this.game,{col:i,row:s}=this.gridPosition,r=i*t,a=s*t,l=this.game.images[`tower-${this.type}`];this.game.ctx.drawImage(l,r,a,t,t)}update(){this.attack()}getTargetsInRange(){const{monsters:t}=this.game.level,{col:i,row:s}=this.gridPosition;return t.find(r=>{if(!r.gridPosition||!r.isAlive())return!1;const a=r.gridPosition.col,l=r.gridPosition.row,h=Math.sqrt(Math.pow(a-i,2)+Math.pow(l-s,2));return Math.abs(h)<=this.range})}attack(){const t=Date.now();if(t-this.lastAttackTime>1e3/this.attackSpeed){const s=this.getTargetsInRange();s&&(s.takeDamage(this.damage),this.lastAttackTime=t)}}}class R extends L{constructor(){super(...arguments);o(this,"range",5);o(this,"damage",25);o(this,"attackSpeed",2);o(this,"type","arrow")}}class O{constructor(e){o(this,"game");o(this,"mousePosition");this.game=e,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:e,y:t}=this.mousePosition,{squareSize:i}=this.game,s=Math.floor(e/i);return{row:Math.floor(t/i),col:s}}init(){this.game.canvas.addEventListener("mousemove",e=>{const t=this.game.canvas.getBoundingClientRect();this.mousePosition={x:e.clientX-t.left,y:e.clientY-t.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()})}handleClick(){const e=this.getCellAtMousePosition();if(this.game.level.mapMatrix.matrix[e.col][e.row]===y)this.game.money>=50&&(this.game.level.mapMatrix.matrix[e.col][e.row]=E,this.game.level.towers.push(new L(this.game,e)),this.game.money-=50);else if(this.game.level.mapMatrix.matrix[e.col][e.row]===E){let t=this.game.level.towers.find(i=>i.gridPosition.col===e.col&&i.gridPosition.row===e.row);t&&t.type==="basic"&&this.game.money>=100&&(this.game.level.towers=this.game.level.towers.filter(i=>i.id!==t.id),this.game.level.towers.push(new R(this.game,e)),this.game.money-=100)}}}const N=n=>{const e=document.createElement("div");e.id="toolbar-top";const t=document.createElement("button");t.id="start-wave",t.innerHTML="Start Wave",t.addEventListener("click",()=>{n.startWave()}),e.innerHTML=`
    <div class="toolbar-item">
      <span>ü™ô: </span>
      <span id="money">100</span>
    </div>
    <div class="toolbar-item">
      <span>‚ù§Ô∏è: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>üåä: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>üëø: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>üíÄ: </span>
      <span id="kills">0</span>
    </div>
  `,e.appendChild(t),document.body.insertBefore(e,document.body.firstChild)},W=n=>{const e=document.getElementById("health");e&&(e.innerText=n.toLocaleString("en-US"))},H=n=>{const e=document.getElementById("kills");e&&(e.innerText=n.toLocaleString("en-US"))},I=n=>{const e=document.getElementById("money");e&&(e.innerText=n.toLocaleString("en-US"))},C=n=>{const e=document.getElementById("monsters");e&&(e.innerText=n.toLocaleString("en-US"))},B=n=>{const e=document.getElementById("wave");e&&(e.innerText=n.toLocaleString("en-US"))};class U extends P{constructor(t){super();o(this,"matrix");o(this,"level");o(this,"totalDistance",0);this.level=t,this.matrix={},this.generateMapMatrix()}initMatrix(){const{gridWidth:t,gridHeight:i}=this.level.game;this.matrix=Array.from({length:t},()=>Array(i).fill(y)),this.level.startPositions.forEach(s=>{this.matrix[s.col][s.row]=[0]}),this.level.endPositions.forEach(s=>{this.matrix[s.col][s.row]=S})}generateMapMatrix(){this.level.startPositions.forEach(t=>{let i=0;do this.initMatrix(),this.totalDistance=this.buildPath(t.col,t.row,1),i++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&i<100);i>=100&&console.log("Failed to generate path")})}buildPath(t,i,s){const r=this.getNeighbors(t,i);if(r.some(({row:d,col:w})=>this.getCell(w,d)===S))return s;const a=r.filter(({col:d,row:w})=>this.canBePath(d,w,s));if(a.length===0)return-1;const l=a[Math.floor(Math.random()*a.length)],h=this.matrix[l.col][l.row];return Array.isArray(h)?h.push(s):this.matrix[l.col][l.row]=[s],this.buildPath(l.col,l.row,s+1)}getNeighbors(t,i){const s=[];return t>0&&s.push({col:t-1,row:i}),t<this.level.game.gridWidth-1&&s.push({col:t+1,row:i}),i>0&&s.push({col:t,row:i-1}),i<this.level.game.gridHeight-1&&s.push({col:t,row:i+1}),s}getCell(t,i){return this.matrix[t][i]}canBePath(t,i,s){const r=this.getCell(t,i);return!(r!==y&&Array.isArray(r)===!1||Array.isArray(r)&&r.some(l=>l>s-10)||this.getNeighbors(t,i).filter(({col:l,row:h})=>{const d=this.getCell(l,h);return Array.isArray(d)?!!d.some(w=>w>s-10):!1}).length>1||Array.isArray(r)&&r.length>=this.level.maxRepeatSquares)}getPathPosition(t){const i=Math.ceil(t);let s=i<0?this.level.startPositions[0]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(r=>{const a=Number(r);Object.keys(this.matrix[a]).forEach(l=>{const h=Number(l),d=this.matrix[a][h];if(Array.isArray(d)&&d.includes(i)){s={row:h,col:a};return}})}),s}}var f;class j extends P{constructor(t,i,s,r,a,l){super();o(this,"game");o(this,"startPositions");o(this,"endPositions");o(this,"mapMatrix");o(this,"minLength");o(this,"maxLength");o(this,"maxRepeatSquares");o(this,"towers",[]);o(this,"monsters",[]);g(this,f,0);this.game=t,this.startPositions=i,this.endPositions=s,this.minLength=r,this.maxLength=a,this.maxRepeatSquares=l,this.mapMatrix=new U(this)}get wave(){return c(this,f)}set wave(t){u(this,f,t),B(c(this,f))}}f=new WeakMap;class _ extends P{constructor({game:t,health:i,speed:s,damage:r}){super();o(this,"game");o(this,"health");o(this,"maxHealth");o(this,"speed");o(this,"gridPosition");o(this,"nextPosition");o(this,"distance");o(this,"damage");o(this,"lastMoveTime",Date.now());o(this,"direction");o(this,"reward",10);this.game=t,this.health=i,this.maxHealth=i,this.speed=s,this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=r}getDirection(t){return this.gridPosition?t.col>this.gridPosition.col?"right":t.col<this.gridPosition.col?"left":t.row>this.gridPosition.row?"down":t.row<this.gridPosition.row?"up":"none":"none"}move(){const t=Date.now(),s=(t-this.lastMoveTime)/1e3*this.speed,r=this.distance+s;Math.floor(r)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(r)),this.nextPosition&&r%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=r,this.lastMoveTime=t}getCanvasPosition(){if(!this.gridPosition)return null;const{row:t,col:i}=this.gridPosition,s=this.distance%1,{squareSize:r}=this.game,a=r/4;let l=i*r,h=t*r;return this.direction==="up"?(l+=r/2-a/2,h+=r-s*r):this.direction==="down"?(l+=r/2-a/2,h+=s*r):this.direction==="left"?(l+=r-s*r,h+=r/2-a/2):this.direction==="right"?(l+=s*r,h+=r/2-a/2):this.direction==="none"&&(l+=r/2-a/2,h+=r/2-a/2),{x:l,y:h}}render(){const t=this.getCanvasPosition();if(!t)return;const{squareSize:i,ctx:s}=this.game,r=i/3,{x:a,y:l}=t;s.fillStyle="black",s.fillRect(a,l,r,r),s.fillStyle="red",s.fillRect(a,l-10,r,5),s.fillStyle="green",s.fillRect(a,l-10,r*this.health/this.maxHealth,5)}takeDamage(t){this.health-=t,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}var m,v,p;class F{constructor(){g(this,m,10);g(this,v,100);g(this,p,0);o(this,"debug",!1);o(this,"canvas");o(this,"ctx");o(this,"squareSize",50);o(this,"gridWidth",25);o(this,"gridHeight",25);o(this,"level");o(this,"mouseHandler");o(this,"hoveredCell",null);o(this,"images",{});o(this,"tempCounter",-1);this.canvas=document.createElement("canvas");const e=this.canvas.getContext("2d");if(!e)throw new Error("2d context not supported");this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,this.ctx=e,this.level=new j(this,[{col:0,row:0}],[{col:20,row:20}],75,150,2),document.body.appendChild(this.canvas),this.mouseHandler=new O(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0),N(this)}getNumberOfMonstersPerWave(){return 20+(this.level.wave-1)*2}startWave(){this.tempCounter<this.getNumberOfMonstersPerWave()&&this.tempCounter!==-1||(this.level.wave++,this.tempCounter=0,this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500)}spawnMonster(){let e=100;this.level.wave>3&&(e=100+(this.level.wave-3)*15);let t=1;this.level.wave>5&&(t=1+(this.level.wave-5)*.2),this.level.monsters.push(new _({game:this,health:e,speed:t,damage:1})),C(this.level.monsters.length)}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire"].forEach(t=>{const i=new Image;i.src=`./assets/${t}.png`,this.images[t]=i})}update(){const e=this.level.monsters.filter(i=>i.distance>=this.level.mapMatrix.totalDistance),t=this.level.monsters.filter(i=>!i.isAlive());t.forEach(i=>{this.money+=i.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(i=>i.isAlive()&&i.distance<this.level.mapMatrix.totalDistance),e.forEach(i=>{console.log(`Monster reached the end, -${i.damage} health`),this.health-=i.damage}),this.level.monsters.forEach(i=>{i.move()}),this.level.towers.forEach(i=>{i.update()}),c(this,m)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(t.length>0||e.length>0)&&C(this.level.monsters.length)}render(){this.drawGrid(),this.level.monsters.forEach(e=>{e.render()}),this.level.towers.forEach(e=>{e.render()})}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:e}=this.level.mapMatrix;Object.keys(e).forEach(t=>{const i=Number(t);Object.keys(e[i]).forEach(s=>{const r=Number(s),a=e[i][r];this.ctx.save(),typeof a=="string"?a===D?this.ctx.fillStyle="blue":a===S?this.ctx.fillStyle="red":a===y?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(i*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.debug&&Array.isArray(a)&&a.length>0&&(this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.ctx.fillText(a.toString(),i*this.squareSize+5,r*this.squareSize+15)),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(i*this.squareSize,r*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}get health(){return c(this,m)}set health(e){u(this,m,e),W(c(this,m))}get money(){return c(this,v)}set money(e){u(this,v,e),I(c(this,v))}get killCount(){return c(this,p)}set killCount(e){u(this,p,e),H(c(this,p))}}m=new WeakMap,v=new WeakMap,p=new WeakMap;const A=new F,T=async()=>{A.render(),requestAnimationFrame(T)},k=async()=>{A.update(),setTimeout(k,1e3/60)};T();k();
