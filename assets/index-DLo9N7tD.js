var N=Object.defineProperty;var D=h=>{throw TypeError(h)};var G=(h,a,e)=>a in h?N(h,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[a]=e;var n=(h,a,e)=>G(h,typeof a!="symbol"?a+"":a,e),z=(h,a,e)=>a.has(h)||D("Cannot "+e);var g=(h,a,e)=>(z(h,a,"read from private field"),e?e.call(h):a.get(h)),m=(h,a,e)=>a.has(h)?D("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(h):a.set(h,e),u=(h,a,e,i)=>(z(h,a,"write to private field"),i?i.call(h,e):a.set(h,e),e);(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();const t="?",L="start",y="end",I="tower",H=(h,a)=>Math.sqrt(Math.pow(h.x-a.x,2)+Math.pow(h.y-a.y,2));var A;class E{constructor(){m(this,A);u(this,A,Math.floor(Math.random()*1e7))}get id(){return g(this,A)}}A=new WeakMap;var k;class C extends E{constructor({game:e,health:i,speed:s,damage:o,reward:r}){super();n(this,"game");n(this,"health");n(this,"maxHealth");n(this,"speed");m(this,k);n(this,"gridPosition");n(this,"nextPosition");n(this,"distance");n(this,"damage");n(this,"lastUpdateTime",Date.now());n(this,"direction");n(this,"reward");n(this,"debuffs",[]);this.game=e,this.health=i,this.maxHealth=i,this.speed=s,u(this,k,s),this.distance=0,this.gridPosition=this.game.level.mapMatrix.getPathPosition(0),this.nextPosition=this.game.level.mapMatrix.getPathPosition(.5),this.direction=this.getDirection(this.nextPosition),this.damage=o,this.reward=r}getDirection(e){return this.gridPosition?e.col>this.gridPosition.col?"right":e.col<this.gridPosition.col?"left":e.row>this.gridPosition.row?"down":e.row<this.gridPosition.row?"up":"none":"none"}addDebuff(e){this.debuffs.push({...e,duration:Date.now()+e.duration})}applyDebuffs(){const e=Date.now();let i=g(this,k);this.debuffs=this.debuffs.filter(o=>!(e>o.duration));let s=!1;this.debuffs.forEach(o=>{if(o.type==="freeze")i/=2;else if(o.type==="poison"&&!s){s=!0;const l=(e-this.lastUpdateTime)/1e3*(this.maxHealth*.05);this.takeDamage(l)}}),this.speed=Math.max(i,.1)}update(){this.applyDebuffs();const e=Date.now(),s=(e-this.lastUpdateTime)/1e3*this.speed,o=this.distance+s;Math.floor(o)>Math.floor(this.distance)&&(this.gridPosition=this.nextPosition,this.nextPosition=this.game.level.mapMatrix.getPathPosition(o)),this.nextPosition&&o%1>.5&&this.distance%1<=.5&&(this.direction=this.getDirection(this.nextPosition)),this.distance=o,this.lastUpdateTime=e}getCanvasPosition(){if(!this.gridPosition)return null;const{row:e,col:i}=this.gridPosition,s=this.distance%1,{squareSize:o}=this.game,r=o/4;let l=i*o,c=e*o;return this.direction==="up"?(l+=o/2-r/2,c+=o-s*o):this.direction==="down"?(l+=o/2-r/2,c+=s*o):this.direction==="left"?(l+=o-s*o,c+=o/2-r/2):this.direction==="right"?(l+=s*o,c+=o/2-r/2):this.direction==="none"&&(l+=o/2-r/2,c+=o/2-r/2),{x:l,y:c}}render(){const e=this.getCanvasPosition();if(!e)return;const{squareSize:i,ctx:s}=this.game,o=i/3,{x:r,y:l}=e;s.fillStyle="black",s.fillRect(r,l,o,o),s.fillRect(r,l-10,o,5),this.debuffs.some(c=>c.type==="freeze")&&(s.fillStyle="rgba(0, 0, 255, 0.5)",s.fillRect(r,l,o,o)),this.debuffs.some(c=>c.type==="poison")&&(s.fillStyle="rgba(0, 255, 0, 0.5)",s.fillRect(r,l,o,o)),s.fillStyle="red",s.fillStyle="green",s.fillRect(r,l-10,o*this.health/this.maxHealth,5)}takeDamage(e){this.health-=e,this.health<0&&(this.health=0)}isAlive(){return this.health>0}}k=new WeakMap;class x extends E{constructor({game:e,speed:i,damage:s,target:o,position:r}){super();n(this,"game");n(this,"speed");n(this,"damage");n(this,"target");n(this,"position");n(this,"lastMoveTime");n(this,"angle");n(this,"height",10);n(this,"width",10);n(this,"images",["arrow"]);n(this,"splash",null);n(this,"debuffs",null);this.game=e,this.speed=i,this.damage=s,this.target=o,this.position=r,this.angle=0,this.lastMoveTime=Date.now()}impact(){var i;const e=this.target;e instanceof C&&(e.takeDamage(this.damage),(i=this.debuffs)==null||i.forEach(s=>{e.addDebuff(s)})),this.splash&&this.game.level.monsters.forEach(s=>{var l;if(e instanceof C&&s.id===e.id)return;const o=s.getCanvasPosition();if(!o)return;H(this.position,o)<=this.splash*this.game.squareSize&&(s.takeDamage(this.damage),(l=this.debuffs)==null||l.forEach(c=>{s.addDebuff(c)}))}),this.game.projectiles=this.game.projectiles.filter(s=>s.id!==this.id)}getImage(){const e=this.images.length,i=Math.floor(Date.now()/1e3%e),s=this.images[i];return this.game.images[s]}update(){this.speed=this.speed*1.05;const e=Date.now(),s=(e-this.lastMoveTime)/1e3*this.speed;let o;this.target instanceof C?o=this.target.getCanvasPosition():o=this.game.convertGridPositionToCoordinates(this.target);const r=Math.sqrt(Math.pow(o.x-this.position.x,2)+Math.pow(o.y-this.position.y,2));if(s>r){this.position=o,this.lastMoveTime=e,this.impact();return}const l=Math.atan2(o.y-this.position.y,o.x-this.position.x),c=Math.cos(l)*s,d=Math.sin(l)*s;this.angle=l+Math.PI,this.position={x:this.position.x+c,y:this.position.y+d},this.lastMoveTime=e}render(){const{ctx:e}=this.game;e.save(),e.translate(this.position.x,this.position.y),e.rotate(this.angle);try{e.drawImage(this.getImage(),-this.width/2,-this.height/2,this.width,this.height)}catch(i){console.log(i),this.game.debug&&alert(`Error rendering projectile ${this.getImage().src}: ${i}`)}e.restore()}}class O extends x{constructor({game:e,target:i,position:s,damage:o,speed:r}){super({game:e,speed:r,damage:o,target:i,position:s});n(this,"height",10);n(this,"width",25)}}class v extends E{constructor(e,i){super();n(this,"game");n(this,"gridPosition");n(this,"range",4);n(this,"damage",25);n(this,"attackSpeed",1);n(this,"lastAttackTime",Date.now());n(this,"placed",!1);n(this,"type","basic");n(this,"multiTarget",!1);this.game=e,this.gridPosition=i}getImage(){let e=[this.game.images[`tower-${this.type}`]];this.type==="lightning"&&(e=[this.game.images[`tower-${this.type}`],this.game.images[`tower-${this.type}-2`]]);const i=e.length,s=Math.floor(Date.now()/1e3%i);return e[s]}render(){const{squareSize:e}=this.game,{col:i,row:s}=this.gridPosition,o=i*e,r=s*e,l=this.getImage();try{this.game.ctx.drawImage(l,o,r,e,e)}catch(c){console.error(c),this.game.debug&&alert(`Error rendering tower ${l}: ${c}`)}}update(){this.attack()}monsterIsValidTarget(e){if(!e.gridPosition||!e.isAlive())return!1;const{col:i,row:s}=this.gridPosition,o=e.gridPosition.col,r=e.gridPosition.row,l=Math.sqrt(Math.pow(o-i,2)+Math.pow(r-s,2));return Math.abs(l)<=this.range}getTargetInRange(){return this.getTargetsInRange()[0]}getTargetsInRange(){const{monsters:e}=this.game.level;return e.filter(i=>this.monsterIsValidTarget(i))??[]}canAttack(){return Date.now()-this.lastAttackTime>1e3/this.attackSpeed}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i&&(this.game.projectiles.push(new O({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:250})),this.lastAttackTime=e)}}}class F extends v{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",25);n(this,"attackSpeed",2);n(this,"type","arrow")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i&&(this.game.projectiles.push(new O({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage,speed:500})),this.lastAttackTime=e)}}}class _ extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:100,damage:o,target:i,position:s});n(this,"height",10);n(this,"width",25);n(this,"splash",1.5);n(this,"images",["bullet-1","bullet-2","bullet-3","bullet-4"])}}class K extends v{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",125);n(this,"attackSpeed",.75);n(this,"type","cannon")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i!=null&&i.gridPosition&&(this.game.projectiles.push(new _({game:this.game,target:i.gridPosition,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class V extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:500,damage:o,target:i,position:s});n(this,"height",10);n(this,"width",25);n(this,"splash",.75);n(this,"images",["fire-1","fire-2"])}}class X extends v{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",500);n(this,"attackSpeed",2.5);n(this,"type","fire")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i!=null&&i.gridPosition&&(this.game.projectiles.push(new V({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}const W={freeze:"freeze",poison:"poison"};class Y extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:333,damage:o,target:i,position:s});n(this,"height",25);n(this,"width",25);n(this,"splash",1);n(this,"images",["frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13"]);n(this,"debuffs",[{type:W.freeze,duration:2e3}])}}class J extends v{constructor(){super(...arguments);n(this,"range",5);n(this,"damage",50);n(this,"attackSpeed",1.5);n(this,"type","ice")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i!=null&&i.gridPosition&&(this.game.projectiles.push(new Y({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class Q extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:1500,damage:o,target:i,position:s});n(this,"height",15);n(this,"width",30);n(this,"previousTargets",[]);n(this,"images",["crystal"]);this.previousTargets.push(i.id)}impact(){super.impact(),this.game.level.monsters.find(e=>!(this.target instanceof C)||this.previousTargets.includes(e.id)?!1:H(e.getCanvasPosition(),this.target.getCanvasPosition())<100?(this.previousTargets.push(e.id),this.target=e,this.game.projectiles.push(this),!0):!1)}}class Z extends v{constructor(){super(...arguments);n(this,"range",7);n(this,"damage",250);n(this,"attackSpeed",1);n(this,"type","lightning")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i!=null&&i.gridPosition&&(this.game.projectiles.push(new Q({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class tt extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:800,damage:o,target:i,position:s});n(this,"height",15);n(this,"width",30);n(this,"images",["crystal"])}}class et extends v{constructor(){super(...arguments);n(this,"range",10);n(this,"damage",1500);n(this,"attackSpeed",7.5);n(this,"type","mage")}attack(){const e=Date.now();if(this.canAttack()){const i=this.getTargetInRange();i!=null&&i.gridPosition&&(this.game.projectiles.push(new tt({game:this.game,target:i,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)}}}class it extends x{constructor({game:e,target:i,position:s,damage:o}){super({game:e,speed:200,damage:o,target:i,position:s});n(this,"height",25);n(this,"width",25);n(this,"images",["poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8"]);n(this,"debuffs",[{type:W.poison,duration:1e4}])}}class st extends v{constructor(){super(...arguments);n(this,"range",2);n(this,"damage",0);n(this,"attackSpeed",2);n(this,"type","poison");n(this,"multiTarget",!0)}attack(){const e=Date.now();this.canAttack()&&this.getTargetsInRange().forEach(s=>{s!=null&&s.gridPosition&&(this.game.projectiles.push(new it({game:this.game,target:s,position:this.game.convertGridPositionToCoordinates(this.gridPosition),damage:this.damage})),this.lastAttackTime=e)})}}const w={basic:50,arrow:100,cannon:200,fire:1e3,ice:450,mage:7500,lightning:2e3,poison:750},at={basic:"basic",arrow:"arrow",cannon:"cannon",fire:"fire",ice:"ice",mage:"mage",lightning:"lightning",poison:"poison"},U={basic:v,arrow:F,cannon:K,mage:et,ice:J,fire:X,lightning:Z,poison:st};class ot{constructor(a){n(this,"game");n(this,"mousePosition");this.game=a,this.mousePosition={x:0,y:0},this.init()}getCellAtMousePosition(){const{x:a,y:e}=this.mousePosition,{squareSize:i}=this.game,s=Math.floor(a/i);return{row:Math.floor(e/i),col:s}}init(){this.game.canvas.addEventListener("mousemove",a=>{const e=this.game.canvas.getBoundingClientRect();this.mousePosition={x:a.clientX-e.left,y:a.clientY-e.top},this.game.hoveredCell=this.getCellAtMousePosition()}),this.game.canvas.addEventListener("click",()=>{this.handleClick()}),this.game.canvas.addEventListener("contextmenu",a=>{this.handleContextMenu(a)})}handleClick(){const a=this.getCellAtMousePosition();this.game.newTower&&this.game.level.mapMatrix.matrix[a.col][a.row]===t&&this.game.money>=w[this.game.newTower]&&(this.game.level.mapMatrix.matrix[a.col][a.row]=I,this.game.level.towers.push(new U[this.game.newTower](this.game,a)),this.game.money-=w[this.game.newTower],this.game.money<w[this.game.newTower]&&(this.game.newTower=null))}handleContextMenu(a){a.preventDefault();const e=this.getCellAtMousePosition();if(this.game.newTower)this.game.newTower=null;else if(this.game.level.mapMatrix.matrix[e.col][e.row]===I){const i=this.game.level.towers.find(s=>s.gridPosition.col===e.col&&s.gridPosition.row===e.row);i&&(this.game.paused=!0,confirm(`Sell for ${w[i.type]/2} coins?`)&&(this.game.money+=w[i.type]/2,this.game.level.towers=this.game.level.towers.filter(s=>s.id!==i.id),this.game.level.mapMatrix.matrix[e.col][e.row]=t),this.game.paused=!1)}}}const nt=[[t,L,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t],[t,[1],t,[68],[67],[66],[65],[64],[63],[62],[61],[60],[59],[58],[57],[56],[55],[53],[52],t],[t,[2],t,[69],t,t,t,t,t,t,t,t,t,t,t,t,t,t,[51],t],[t,[3],t,[70],t,[120],[119],[118],[117],[116],[115],[114],[113],[112],[111],[110],[109],t,[50],t],[t,[4],t,[71],t,[121],t,t,t,t,t,t,t,t,t,t,[108],t,[49],t],[t,[5],t,[72],t,[122],t,[156],[155],[154],[153],[152],[151],[150],[149],t,[107],t,[48],t],[t,[6],t,[73],t,[123],t,[157],t,t,t,t,t,t,[148],t,[106],t,[47],t],[t,[7],t,[74],t,[124],t,[158],t,[176],[175],[174],[173],t,[147],t,[105],t,[46],t],[t,[8],t,[75],t,[125],t,[159],t,[177],y,[183],[172],t,[146],t,[104],t,[45],t],[t,[9],t,[76],t,[126],t,[160],t,[178],[181],[182],[171],t,[145],t,[103],t,[44],t],[t,[10],t,[77],t,[127],t,[161],t,[179],[180],t,[170],t,[144],t,[102],t,[43],t],[t,[11],t,[78],t,[128],t,[162],t,t,t,t,[169],t,[143],t,[101],t,[42],t],[t,[12],t,[79],t,[129],t,[163],[164],[165],[166],[167],[168],t,[142],t,[100],t,[41],t],[t,[13],t,[80],t,[130],t,t,t,t,t,t,t,t,[141],t,[99],t,[40],t],[t,[14],t,[81],t,[131],[132],[133],[134],[135],[136],[137],[138],[139],[140],t,[98],t,[39],t],[t,[15],t,[82],t,t,t,t,t,t,t,t,t,t,t,t,[97],t,[38],t],[t,[16],t,[83],[84],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],t,[37],t],[t,[17],t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,[36],t],[t,[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],t],[t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t,t]],rt=h=>{const a=document.createElement("div");a.id="toolbar-top";const e=document.createElement("button");e.id="start-wave",e.innerHTML="Start Wave",e.addEventListener("click",()=>{h.startWave()}),a.innerHTML=`
    <div class="toolbar-item">
      <span>🪙: </span>
      <span id="money" class="money">${h.money.toLocaleString("en-US")}</span>
    </div>
    <div class="toolbar-item">
      <span>❤️: </span>
      <span id="health">10</span>
    </div>
    <div class="toolbar-item">
      <span>🌊: </span>
      <span id="wave">0</span>
    </div>
    <div class="toolbar-item">
      <span>👿: </span>
      <span id="monsters">0</span>
    </div>
     <div class="toolbar-item">
      <span>💀: </span>
      <span id="kills">0</span>
    </div>
  `,a.appendChild(e);const i=document.createElement("label");i.innerHTML=`
    <input type="checkbox" id="automode" />
    <span>Auto mode</span>
  `,a.appendChild(i),document.body.insertBefore(a,document.body.firstChild);const s=document.createElement("div");s.id="toolbar-bottom",Object.values(at).sort((r,l)=>w[r]-w[l]).forEach(r=>{const l=document.createElement("button");l.innerHTML=`
    <img src="assets/tower-${r}.png" alt="${r} tower" />
    <span>${r} tower - <span class="price">${w[r].toLocaleString("en-US")}🪙</span></span>
    `,l.addEventListener("click",()=>{h.newTower=r}),s.appendChild(l)}),document.body.appendChild(s);const o=document.createElement("div");o.id="info-panel",o.innerHTML=`
  <details>
  <summary>How to play</summary>
  <h2>Goal</h2>
  <p>Defend your base from waves of monsters by building towers. The monsters move from the blue square(s) to the red square(s)</p>
  <h2>Adding towers</h2>
  <p>
    Use the toolbar at the bottom to select a tower type. Click on an empty square on the map to add a tower.
  </p>
  <h2>Selling towers</h2>
  <p>
    Right-click on a tower to sell it for half the price.
  </p>
  <h2>Starting a wave</h2>
  <p>
    Click the "Start Wave" button to start a new wave of monsters.
  </p>
  <h2>Auto mode</h2>
  <p>
    When auto mode is enabled, the game will automatically start new waves when the previous wave is defeated.
  </p>
  
  </details>
  
  `,document.body.appendChild(o)},ht=h=>{const a=document.getElementById("health");a&&(a.innerText=h.toLocaleString("en-US"))},lt=h=>{const a=document.getElementById("kills");a&&(a.innerText=h.toLocaleString("en-US"))},ct=h=>{const a=document.getElementById("money");a&&(a.innerText=h.toLocaleString("en-US"))},R=h=>{const a=document.getElementById("monsters");a&&(a.innerText=h.toLocaleString("en-US"))},gt=h=>{const a=document.getElementById("wave");a&&(a.innerText=h.toLocaleString("en-US"))};class dt extends E{constructor(e,i){super();n(this,"matrix");n(this,"level");n(this,"totalDistance",0);this.level=e,this.matrix={},i?(this.matrix=i,Object.values(i).forEach(s=>{Object.values(s).forEach(o=>{Array.isArray(o)&&(this.totalDistance=Math.max(...o,this.totalDistance))})})):this.generateMapMatrix()}initMatrix(){var s,o;const{gridWidth:e,gridHeight:i}=this.level.game;this.matrix=Array.from({length:e},()=>Array(i).fill(t)),(s=this.level.startPositions)==null||s.forEach(r=>{this.matrix[r.col][r.row]=[0]}),(o=this.level.endPositions)==null||o.forEach(r=>{this.matrix[r.col][r.row]=y})}generateMapMatrix(){var e;(e=this.level.startPositions)==null||e.forEach(i=>{let s=0;do this.initMatrix(),this.totalDistance=this.buildPath(i.col,i.row,1),s++;while((this.totalDistance<this.level.minLength||this.totalDistance>this.level.maxLength)&&s<100);s>=100&&console.log("Failed to generate path")})}buildPath(e,i,s){const o=this.getNeighbors(e,i);if(o.some(({row:d,col:M})=>this.getCell(M,d)===y))return s;const r=o.filter(({col:d,row:M})=>this.canBePath(d,M,s));if(r.length===0)return-1;const l=r[Math.floor(Math.random()*r.length)],c=this.matrix[l.col][l.row];return Array.isArray(c)?c.push(s):this.matrix[l.col][l.row]=[s],this.buildPath(l.col,l.row,s+1)}getNeighbors(e,i){const s=[];return e>0&&s.push({col:e-1,row:i}),e<this.level.game.gridWidth-1&&s.push({col:e+1,row:i}),i>0&&s.push({col:e,row:i-1}),i<this.level.game.gridHeight-1&&s.push({col:e,row:i+1}),s}getCell(e,i){return this.matrix[e][i]}canBePath(e,i,s){const o=this.getCell(e,i);return!(o!==t&&Array.isArray(o)===!1||Array.isArray(o)&&o.some(l=>l>s-10)||this.getNeighbors(e,i).filter(({col:l,row:c})=>{const d=this.getCell(l,c);return Array.isArray(d)?!!d.some(M=>M>s-10):!1}).length>1||Array.isArray(o)&&o.length>=this.level.maxRepeatSquares)}getPathPosition(e){const i=Math.ceil(e);let s=i<=0?this.level.startPositions[Math.floor(Math.random()*this.level.startPositions.length)]:this.level.endPositions[0];return Object.keys(this.matrix).forEach(o=>{const r=Number(o);Object.keys(this.matrix[r]).forEach(l=>{const c=Number(l),d=this.matrix[r][c];if(Array.isArray(d)&&d.includes(i)){s={row:c,col:r};return}})}),s}}var T;class j extends E{constructor({game:e,startPositions:i,endPositions:s,minLength:o,maxLength:r,maxRepeatSquares:l,map:c}){super();n(this,"game");n(this,"startPositions");n(this,"endPositions");n(this,"mapMatrix");n(this,"minLength");n(this,"maxLength");n(this,"maxRepeatSquares");n(this,"towers",[]);n(this,"monsters",[]);m(this,T,0);this.game=e,this.startPositions=i,this.endPositions=s,this.minLength=o,this.maxLength=r,this.maxRepeatSquares=l,this.mapMatrix=new dt(this,c)}get wave(){return g(this,T)}set wave(e){u(this,T,e),gt(g(this,T))}}T=new WeakMap;var f,P,S,p,b;class mt{constructor(){m(this,f,10);m(this,P,100);m(this,S,0);n(this,"debug",!1);n(this,"canvas");n(this,"ctx");n(this,"squareSize",50);n(this,"gridWidth",25);n(this,"gridHeight",25);n(this,"level");n(this,"mouseHandler");n(this,"hoveredCell",null);n(this,"images",{});n(this,"tempCounter",-1);n(this,"projectiles",[]);m(this,p,null);m(this,b,!1);this.canvas=document.createElement("canvas");const a=this.canvas.getContext("2d");if(!a)throw new Error("2d context not supported");this.ctx=a,Math.random()>.5?(this.gridHeight=20,this.gridWidth=20,this.level=new j({game:this,endPositions:[{col:8,row:10}],startPositions:[{col:0,row:1}],maxLength:200,maxRepeatSquares:1,minLength:100,map:nt})):this.level=new j({game:this,endPositions:[{col:Math.floor(Math.random()*this.gridHeight/2),row:Math.floor(Math.random()*this.gridWidth/2)}],startPositions:[{col:Math.floor((Math.random()+.5)*this.gridHeight/2),row:Math.floor((Math.random()+.5)*this.gridWidth/2)}],maxLength:250,maxRepeatSquares:3,minLength:100}),this.canvas.width=this.squareSize*this.gridWidth,this.canvas.height=this.squareSize*this.gridHeight,document.body.appendChild(this.canvas),this.mouseHandler=new ot(this),this.loadImages(),new URLSearchParams(window.location.search).has("debug")&&(this.debug=!0,this.money=1e4),rt(this)}getNumberOfMonstersPerWave(){return 20+(this.level.wave-1)*2}startWave(){g(this,f)<=0||this.tempCounter<this.getNumberOfMonstersPerWave()&&this.tempCounter!==-1||(this.level.wave++,this.tempCounter=0,this.spawnMonsters())}spawnMonsters(){setTimeout(()=>{this.tempCounter<this.getNumberOfMonstersPerWave()&&(this.spawnMonster(),this.tempCounter++,this.spawnMonsters())},500/this.getSpeed())}getSpeed(){let a=1;return this.level.wave>5&&(a+=(this.level.wave-5)*.2),this.level.wave>10&&(a+=(this.level.wave-10)*.2),this.level.wave>15&&(a+=(this.level.wave-15)*.2),this.level.wave>20&&(a+=(this.level.wave-20)*.2),a}getHealth(){let a=100;return this.level.wave>3&&(a+=(this.level.wave-3)*15),this.level.wave>5&&(a+=(this.level.wave-5)*10),this.level.wave>10&&(a+=(this.level.wave-10)*25),this.level.wave>15&&(a+=(this.level.wave-15)*50),this.level.wave>20&&(a+=(this.level.wave-20)*100),a}spawnMonster(){this.level.monsters.push(new C({game:this,health:this.getHealth(),speed:this.getSpeed(),damage:1,reward:10+Math.floor(this.level.wave/2)})),R(this.level.monsters.length)}loadImages(){["tower-basic","tower-arrow","tower-cannon","tower-mage","tower-ice","tower-fire","tower-lightning","tower-lightning-2","tower-poison","arrow","bullet-1","bullet-2","bullet-3","bullet-4","fire-1","fire-2","frost-1","frost-2","frost-3","frost-4","frost-5","frost-6","frost-7","frost-8","frost-9","frost-10","frost-11","frost-12","frost-13","crystal","poison-1","poison-2","poison-3","poison-4","poison-5","poison-6","poison-7","poison-8"].forEach(e=>{const i=new Image;i.src=`./assets/${e}.png`,this.images[e]=i})}update(){var i;if(g(this,b))return;const a=this.level.monsters.filter(s=>s.distance>=this.level.mapMatrix.totalDistance),e=this.level.monsters.filter(s=>!s.isAlive());e.forEach(s=>{this.money+=s.reward,this.killCount++}),this.level.monsters=this.level.monsters.filter(s=>s.isAlive()&&s.distance<this.level.mapMatrix.totalDistance).sort((s,o)=>o.distance-s.distance),a.forEach(s=>{console.log(`Monster reached the end, -${s.damage} health`),this.health-=s.damage}),this.level.monsters.forEach(s=>{s.update()}),this.level.towers.forEach(s=>{s.update()}),this.projectiles.forEach(s=>{s.update()}),g(this,f)<0&&confirm("Game Over! Play again?")&&window.location.reload(),(e.length>0||a.length>0)&&R(this.level.monsters.length),this.level.monsters.length===0&&(console.log(`Wave ${this.level.wave} completed!`),(i=document.getElementById("automode"))!=null&&i.checked&&this.startWave())}render(){try{this.drawGrid(),this.level.monsters.forEach(a=>{a.render()}),this.level.towers.forEach(a=>{a.render()}),this.projectiles.forEach(a=>{a.render()}),g(this,f)<=0&&(this.ctx.save(),this.ctx.fillStyle="red",this.ctx.font="30px Arial",this.ctx.textAlign="center",this.ctx.fillText("Game Over!",this.canvas.width/2,this.canvas.height/1.5),this.ctx.restore()),g(this,p)&&this.hoveredCell&&(this.ctx.save(),this.ctx.globalAlpha=.25,this.ctx.beginPath(),this.ctx.arc(this.hoveredCell.col*this.squareSize+this.squareSize/2,this.hoveredCell.row*this.squareSize+this.squareSize/2,g(this,p).range*this.squareSize,0,2*Math.PI),this.ctx.fillStyle="purple",this.ctx.globalAlpha=.5,g(this,p).gridPosition=this.hoveredCell,g(this,p).render(),this.ctx.fill(),this.ctx.restore())}catch(a){console.error(a),this.debug&&alert(`Error rendering game: ${a}`)}}drawGrid(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const{matrix:a}=this.level.mapMatrix;Object.keys(a).forEach(e=>{const i=Number(e);Object.keys(a[i]).forEach(s=>{const o=Number(s),r=a[i][o];this.ctx.save(),typeof r=="string"?r===L?this.ctx.fillStyle="blue":r===y?this.ctx.fillStyle="rgba(255, 0, 0, 0.5)":r===t?this.ctx.fillStyle="green":this.ctx.fillStyle="green":Array.isArray(r)&&r.includes(0)?this.ctx.fillStyle="blue":Array.isArray(r)&&r.length>0&&(this.ctx.fillStyle="rgb(200, 200, 200)"),this.ctx.fillRect(i*this.squareSize,o*this.squareSize,this.squareSize,this.squareSize),this.debug&&(this.ctx.save(),this.ctx.fillStyle="black",this.ctx.font="12px Arial",Array.isArray(r)&&r.length>0?this.ctx.fillText(r.toString(),i*this.squareSize+5,o*this.squareSize+15):r===L?this.ctx.fillText(L,i*this.squareSize+5,o*this.squareSize+15):r===y&&this.ctx.fillText(y,i*this.squareSize+5,o*this.squareSize+15),this.ctx.font="10px Arial",this.ctx.fillText(`${i},${o}`,i*this.squareSize+20,o*this.squareSize+40),this.ctx.restore()),this.ctx.strokeStyle="lightgray",this.ctx.strokeRect(i*this.squareSize,o*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore()})}),this.hoveredCell&&(this.ctx.save(),this.ctx.strokeStyle="gold",this.ctx.lineWidth=3,this.ctx.strokeRect(this.hoveredCell.col*this.squareSize,this.hoveredCell.row*this.squareSize,this.squareSize,this.squareSize),this.ctx.restore())}convertGridPositionToCoordinates(a){return{x:a.col*this.squareSize+this.squareSize/2,y:a.row*this.squareSize+this.squareSize/2}}get health(){return g(this,f)}set health(a){u(this,f,a),ht(g(this,f))}get money(){return g(this,P)}set money(a){u(this,P,a),ct(g(this,P))}get killCount(){return g(this,S)}set killCount(a){u(this,S,a),lt(g(this,S))}get newTower(){var a;return((a=g(this,p))==null?void 0:a.type)||null}set newTower(a){u(this,p,a?new U[a](this,this.hoveredCell):null)}get paused(){return g(this,b)}set paused(a){const e=Date.now();this.level.towers.forEach(i=>{i.lastAttackTime=e}),this.level.monsters.forEach(i=>{i.lastUpdateTime=e}),this.projectiles.forEach(i=>{i.lastMoveTime=e}),u(this,b,a)}}f=new WeakMap,P=new WeakMap,S=new WeakMap,p=new WeakMap,b=new WeakMap;const q=new mt,$=async()=>{q.render(),requestAnimationFrame($)},B=async()=>{q.update(),q.health>=0&&setTimeout(B,1e3/60)};$();B();
